/*
'Offset Keyframes' MEL script

Author: Carlos Rico Adega - carlos.rico.3d@gmail.com

Copyright ? 2015 Carlos Rico Adega

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


SCRIPT NAME:
    craOffsetKeys.mel

Main procedure:
    craOffsetKeysProc;

DESCRIPTION:
    Offset keyframes.

LAUNCH UI:
    craOffsetKeys;

CHANGE LOG:

    Version: 1.0.0
    Date: July 2, 2015
        - First release
    
    Version: 1.1.0
    Date: October 26, 2015
        - Options stored in optionVars
*/

global proc craOffsetKeys()
{
	if (`window -exists craOffsetKeysWin`)
		deleteUI craOffsetKeysWin;
	
    string $craToggle8IconOutputPath = `internalVar -ubd`;
    string $craToggle8Icon[] = { "/* XPM */", "static char *craToggle8Icon_xpm[] = {", "/* width height num_colors chars_per_pixel */", "\"    29    20      256            2\",", "/* colors */", "\"`` c #444444\",", "\"`. c #4e4e4e\",", "\"`# c #5c5c5c\",", "\"`a c #606060\",", "\"`b c #575757\",", "\"`c c #636363\",", "\"`d c #545454\",", "\"`e c #646a5f\",", "\"`f c #6b7364\",", "\"`g c #6a7263\",", "\"`h c #63695e\",", "\"`i c #5f5f5f\",", "\"`j c #9ca197\",", "\"`k c #adb5a6\",", "\"`l c #acb7a0\",", "\"`m c #abb7a1\",", "\"`n c #aeb4aa\",", "\"`o c #979c94\",", "\"`p c #666e61\",", "\"`q c #636462\",", "\"`r c #64685f\",", "\"`s c #7e8577\",", "\"`t c #acb5a6\",", "\"`u c #a6bd8f\",", "\"`v c #a2c084\",", "\"`w c #89af66\",", "\"`x c #8ab067\",", "\"`y c #a3bf87\",", "\"`z c #a8ba97\",", "\"`A c #b0b2ae\",", "\"`B c #6f7869\",", "\"`C c #6d7465\",", "\"`D c #a3a6a0\",", "\"`E c #b1b1b1\",", "\"`F c #959a91\",", "\"`G c #666e60\",", "\"`H c #808779\",", "\"`I c #abb6a4\",", "\"`J c #a4c086\",", "\"`K c #6e9d42\",", "\"`L c #427e0a\",", "\"`M c #448206\",", "\"`N c #427e0b\",", "\"`O c #77a34b\",", "\"`P c #a6bc90\",", "\"`Q c #61675e\",", "\"`R c #6d7566\",", "\"`S c #6c7364\",", "\"`T c #afb3ad\",", "\"`U c #a4be8b\",", "\"`V c #5c902c\",", "\"`W c #438106\",", "\"`X c #1d3703\",", "\"`Y c #234203\",", "\"`Z c #7aa450\",", "\"`0 c #a7b999\",", "\"`1 c #9da19a\",", "\"`2 c #626461\",", "\"`3 c #8e9488\",", "\"`4 c #62675e\",", "\"`5 c #646b5f\",", "\"`6 c #a4a6a0\",", "\"`7 c #697062\",", "\"`8 c #62665e\",", "\".` c #aab7a0\",", "\".. c #669736\",", "\".# c #244107\",", "\".a c #000000\",", "\".b c #2e5804\",", "\".c c #437f08\",", "\".d c #a4bf89\",", "\".e c #afb3ac\",", "\".f c #5f645d\",", "\".g c #676d61\",", "\".h c #b0b0b0\",", "\".i c #636461\",", "\".j c #a8aaa6\",", "\".k c #8aa373\",", "\".l c #2b5304\",", "\".m c #292929\",", "\".n c #ffffff\",", "\".o c #254603\",", "\".p c #92b56f\",", "\".q c #656c61\",", "\".r c #686e61\",", "\".s c #989c94\",", "\".t c #b1b1af\",", "\".u c #50732e\",", "\".v c #182d02\",", "\".w c #162a02\",", "\".x c #90b36d\",", "\".y c #adb5a5\",", "\".z c #626560\",", "\".A c #878e81\",", "\".B c #61665e\",", "\".C c #979b92\",", "\".D c #5e625d\",", "\".E c #54723e\",", "\".F c #69993b\",", "\".G c #407b06\",", "\".H c #0b1401\",", "\".I c #3b7005\",", "\".J c #427f08\",", "\".K c #a4bf88\",", "\".L c #afb3ab\",", "\".M c #727a6a\",", "\".N c #626860\",", "\".O c #558a22\",", "\".P c #3e7706\",", "\".Q c #1b3502\",", "\".R c #1f3c03\",", "\".S c #729f47\",", "\".T c #a6ba96\",", "\".U c #a2a59f\",", "\".V c #707869\",", "\".W c #adaeac\",", "\".X c #9ca099\",", "\".Y c #60665e\",", "\".Z c #616261\",", "\".0 c #848b7f\",", "\".1 c #aab7a2\",", "\".2 c #a3c084\",", "\".3 c #68983b\",", "\".4 c #417e07\",", "\".5 c #417e08\",", "\".6 c #719f44\",", "\".7 c #a5be8d\",", "\".8 c #63695f\",", "\"#` c #676d60\",", "\"#. c #7d8479\",", "\"## c #aab6a2\",", "\"#a c #a5be8b\",", "\"#b c #a2c182\",", "\"#c c #7da657\",", "\"#d c #7ea758\",", "\"#e c #a6bb93\",", "\"#f c #aeb3ab\",", "\"#g c #72796d\",", "\"#h c #6a7265\",", "\"#i c #a4aa9f\",", "\"#j c #aab89c\",", "\"#k c #aab89d\",", "\"#l c #a1a49e\",", "\"#m c #697163\",", "\"#n c #666c60\",", "\"#o c #6e7668\",", "\"#p c #6e7667\",", "\"#q c #626361\",", "\"#r c #000000\",", "\"#s c #000000\",", "\"#t c #000000\",", "\"#u c #000000\",", "\"#v c #000000\",", "\"#w c #000000\",", "\"#x c #000000\",", "\"#y c #000000\",", "\"#z c #000000\",", "\"#A c #000000\",", "\"#B c #000000\",", "\"#C c #000000\",", "\"#D c #000000\",", "\"#E c #000000\",", "\"#F c #000000\",", "\"#G c #000000\",", "\"#H c #000000\",", "\"#I c #000000\",", "\"#J c #000000\",", "\"#K c #000000\",", "\"#L c #000000\",", "\"#M c #000000\",", "\"#N c #000000\",", "\"#O c #000000\",", "\"#P c #000000\",", "\"#Q c #000000\",", "\"#R c #000000\",", "\"#S c #000000\",", "\"#T c #000000\",", "\"#U c #000000\",", "\"#V c #000000\",", "\"#W c #000000\",", "\"#X c #000000\",", "\"#Y c #000000\",", "\"#Z c #000000\",", "\"#0 c #000000\",", "\"#1 c #000000\",", "\"#2 c #000000\",", "\"#3 c #000000\",", "\"#4 c #000000\",", "\"#5 c #000000\",", "\"#6 c #000000\",", "\"#7 c #000000\",", "\"#8 c #000000\",", "\"a` c #000000\",", "\"a. c #000000\",", "\"a# c #000000\",", "\"aa c #000000\",", "\"ab c #000000\",", "\"ac c #000000\",", "\"ad c #000000\",", "\"ae c #000000\",", "\"af c #000000\",", "\"ag c #000000\",", "\"ah c #000000\",", "\"ai c #000000\",", "\"aj c #000000\",", "\"ak c #000000\",", "\"al c #000000\",", "\"am c #000000\",", "\"an c #000000\",", "\"ao c #000000\",", "\"ap c #000000\",", "\"aq c #000000\",", "\"ar c #000000\",", "\"as c #000000\",", "\"at c #000000\",", "\"au c #000000\",", "\"av c #000000\",", "\"aw c #000000\",", "\"ax c #000000\",", "\"ay c #000000\",", "\"az c #000000\",", "\"aA c #000000\",", "\"aB c #000000\",", "\"aC c #000000\",", "\"aD c #000000\",", "\"aE c #000000\",", "\"aF c #000000\",", "\"aG c #000000\",", "\"aH c #000000\",", "\"aI c #000000\",", "\"aJ c #000000\",", "\"aK c #000000\",", "\"aL c #000000\",", "\"aM c #000000\",", "\"aN c #000000\",", "\"aO c #000000\",", "\"aP c #000000\",", "\"aQ c #000000\",", "\"aR c #000000\",", "\"aS c #000000\",", "\"aT c #000000\",", "\"aU c #000000\",", "\"aV c #000000\",", "\"aW c #000000\",", "\"aX c #000000\",", "\"aY c #000000\",", "\"aZ c #000000\",", "\"a0 c #000000\",", "\"a1 c #000000\",", "\"a2 c #000000\",", "\"a3 c #000000\",", "\"a4 c #000000\",", "\"a5 c #000000\",", "\"a6 c #000000\",", "\"a7 c #000000\",", "\"a8 c #000000\",", "/* pixels */", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`a`a`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`e`f`g`h`c`c`c`c`c`c`c`c\",", "\"`c`c`i`c`c`c`c`c`c`c`c`c`c`c`c`f`j`k`l`m`n`o`p`c`c`c`c`c`c\",", "\"`c`c`a`c`c`c`q`e`r`c`c`c`c`c`s`t`u`v`w`x`y`z`A`B`c`c`a`c`c\",", "\"`c`c`a`c`c`C`D`E`E`F`G`c`c`H`I`J`K`L`M`M`N`O`P`A`Q`c`a`c`c\",", "\"`c`c`a`c`R`E`E`E`E`E`E`c`S`T`U`V`M`W`X`Y`M`M`Z`0`1`c`a`c`c\",", "\"`c`c`a`2`E`E`3`4`5`6`7`8`E.`..`M`M.#``.a.b`M.c.d.e.f`a`c`c\",", "\"`c`c`a.g`E.h.i`c`c`c.i.j`E.k`M`M.l.m.n.a.a.o`M.p`k.q`c`c`c\",", "\"`c`c`a.r`E.h`c`c`c`c.s`E.t.u`M`M.v.a.a.a.a.w`M.x.y.q`c`c`c\",", "\"`c`c`c.z`E`E.A.B`h.C`E`E.D.E.F`M.G.a.a.a.H.I.J.K.L.f`c`c`c\",", "\"`c`c`c`c.M`E`E`E`E`E`E.N`c.L.d.O`M.P.Q.R`M`M.S.T.U`c`c`c`c\",", "\"`c`c`c`c`c.V.W`E`E.X.Y`c.Z.0.1.2.3.4`M`M.5.6.7`T.8`c`c`c`c\",", "\"`c`c`c`c`c`c.z.r#``c`c`c`c`c#.###a#b#c#d.2#e#f#g`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c#h#i`m#j#k`k#l#m`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`2#n#o#p`5#q`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\",", "\"`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c`c\"", "};", "",  "" }; 

    craXPMCreator($craToggle8IconOutputPath,"craToggle8Icon.xpm" , $craToggle8Icon);
    
    if(!`optionVar -exists craOffsetKeysStaggerOV`)
		optionVar -iv craOffsetKeysStaggerOV 0;
	
	if(!`optionVar -exists craOffsetKeysRandomOV`)
		optionVar -iv craOffsetKeysRandomOV 0;
	
    window -s 1 -tlb 1 -t " Offset Keyframes" craOffsetKeysWin;
    frameLayout -lv 0 -mw 2 -mh 2;
    columnLayout -adj 1;
    ///////////////////////////////////////////////////
    frameLayout -vis 1 -lv 0 -mw 2 -mh 2 craOffsetKeysSelOrderFL;
    rowLayout -nc 3 -adj 1;
    optionMenu -h 24 craOffsetKeysSelectionOrderOM;
    menuItem -l "Selection order as selected";
    menuItem -l "Selection order inverted";
    menuItem -l "Selection order by name";
    menuItem -l "Selection by name inverted";
    menuItem -l "Selection order randomized";
    setParent -m ..;
    nodeIconButton -h 24 -w 24 -i "pickOtherObj.png" -ann "About" -c "craOffsetKeysAboutScript";
    if(`getApplicationVersionAsFloat` > 2015)
        separator -st "none";
    setParent ..;
    setParent ..;
    ///////////////////////////////////////////////////
    frameLayout -lv 0 -mw 2 -mh 2;
    rowLayout -nc 5 -adj 2;
    nodeIconButton -h 24 -w 24 -i "out_animCurveTA.png" -ann "Select All Time Dependent Animation Curves" -c "select -r `ls -type \"animCurveTU\" -type \"animCurveTA\" -type \"animCurveTT\" -type \"animCurveTL\"`";
    separator -st "none";
    checkBox -v `optionVar -q craOffsetKeysStaggerOV` -ann "Increment offset for each object. Stagger animation" -l "Stagger  "
        -cc "checkBox -e -v 0 craRandomOffsetCB;optionVar -iv craOffsetKeysStaggerOV #1;optionVar -iv craOffsetKeysRandomOV 0" craStaggerOffsetCB;
    checkBox -v `optionVar -q craOffsetKeysRandomOV` -ann "Random offset for each object. Random range between 0 and frame offset"-l "Random" 
        -cc "checkBox -e -v 0 craStaggerOffsetCB;optionVar -iv craOffsetKeysRandomOV #1;optionVar -iv craOffsetKeysStaggerOV 0"  craRandomOffsetCB;
    nodeIconButton -h 24 -w 24 -i "getGraphEditor.png" -ann "Graph Editor. Right click for layouts" -c "GraphEditor";
    popupMenu;
        menuItem -l " Layouts" -en 0;
        menuItem -d 1;
        menuItem -l "Persp/Graph" -c "setNamedPanelLayout \"Persp/Graph\"";
        menuItem -l "Persp/Graph/Outliner" -c "setNamedPanelLayout \"Persp/Graph/Outliner\"";
        menuItem -l "Persp/Graph/Hypergraph" -c "setNamedPanelLayout \"Persp/Graph/Hypergraph\"";
        menuItem -l "Persp/Outliner" -c "setNamedPanelLayout \"Persp/Outliner\"";
    setParent -m ..;
    setParent ..;     
    setParent ..;     
    ///////////////////////////////////////////////////
    frameLayout -lv 0 -mw 2 -mh 2;
    rowLayout -nc 6 -adj 3;
    nodeIconButton -bgc .4 .2 .2 -h 22 -w 22 -ann "Negative Time Offset" -i "timeprev.png" -c "craOffsetKeysWrapper -1 \" -tc \"";
    nodeIconButton -bgc .4 .2 .2 -h 22 -w 22 -ann "Positive Time Offset" -i "timenext.png" -c "craOffsetKeysWrapper 1 \" -tc \"";
    rowLayout -vis 1 -nc 4 -adj 2 craOffsetKeysValueRL;
    button -w 15 -h 20 -l "-" -ann "Substract frame" -c "floatField -e -v (`floatField -q -v craOffsetKeysFramesIF` - 1.0) craOffsetKeysFramesIF";
    floatField -ann "Frame offset value" -pre 4 -h 20 -w 30 -v 1 -min 0 craOffsetKeysFramesIF;
    popupMenu -p craOffsetKeysFramesIF craOffsetNumPUM;
        menuItem -i "directKeySmall.png" -label "0" -command ("floatField -e -v 0 craOffsetKeysFramesIF");
        menuItem -i "directKeySmall.png" -label "1" -command ("floatField -e -v 1 craOffsetKeysFramesIF");
        for ($craf=5; $craf< 105;$craf+=5)
            menuItem -i "directKeySmall.png" -label $craf -command ("floatField -e -v " + $craf + " craOffsetKeysFramesIF");
    setParent -m ..;
    button -w 15 -h 20 -l "+" -ann "Add frame" -c "floatField -e -v (`floatField -q -v craOffsetKeysFramesIF` + 1) craOffsetKeysFramesIF";
    setParent ..;
    nodeIconButton -bgc .2 .2 .4 -h 22 -w 22 -ann "Negative Value Offset" -i "timeend.png" -c "craOffsetKeysWrapper -1 \" -vc \"";
    nodeIconButton -bgc .2 .2 .4 -h 22 -w 22 -ann "Positive Value Offset" -i "timestart.png" -c "craOffsetKeysWrapper 1 \" -vc \"";
    setParent ..;
    setParent ..;
    ///////////////////////////////////////////////////
    frameLayout -vis 1 -lv 0 -mw 2 -mh 2 craOffsetKeysInfinityFL;    
    rowLayout -nc 7 -adj 4;
    nodeIconButton -h 24 -w 24 -i "muted.png" -ann "Pre-Infinity: Constant for selected objects" -l "Cycle" -c "craOffsetKeysCycle 0";
    nodeIconButton -h 24 -w 24 -i "preInfinityCycleOffset.png" -ann "Pre Infinity: Cycle with Offset for selected objects" -l "Cycle" -c "craOffsetKeysCycle 1";
    popupMenu;
    menuItem -i "preInfinityCycle.png" -label "Pre Infinity: Linear for selected objects" -command "craOffsetKeysCycle 6";
    menuItem -i "preInfinityCycle.png" -label "Pre Infinity: Oscillate for selected objects" -command "craOffsetKeysCycle 7";
    setParent -m ..;
    nodeIconButton -h 24 -w 24 -i "preInfinityCycle.png" -ann "Pre Infinity: Cycle for selected objects" -l "Cycle" -c "craOffsetKeysCycle 2";
    popupMenu;
    menuItem -i "preInfinityCycle.png" -label "Pre Infinity: Linear for selected objects" -command "craOffsetKeysCycle 6";
    menuItem -i "preInfinityCycle.png" -label "Pre Infinity: Oscillate for selected objects" -command "craOffsetKeysCycle 7";
    setParent -m ..;
    nodeIconButton -h 24 -w 24 -i "craToggle8Icon.xpm" -ann "Graph Editor: Toggle view Infinity" -c "if(`animCurveEditor -q -displayInfinities graphEditor1GraphEd`) animCurveEditor -e -displayInfinities 0 graphEditor1GraphEd; else animCurveEditor -e -displayInfinities  1 graphEditor1GraphEd" craToggle8IconNIB;
    nodeIconButton -h 24 -w 24 -i "postInfinityCycle.png" -ann "Post Infinity: Cycle for selected objects" -l "Cycle" -c "craOffsetKeysCycle 3";
    popupMenu;
    menuItem -i "postInfinityCycle.png" -label "Post Infinity: Linear for selected objects" -command "craOffsetKeysCycle 8";
    menuItem -i "postInfinityCycle.png" -label "Post Infinity: Oscillate for selected objects" -command "craOffsetKeysCycle 9";
    setParent -m ..;
    nodeIconButton -h 24 -w 24 -i "postInfinityCycleOffset.png" -ann "Post Infinity: Cycle with Offset for selected objects" -l "Cycle" -c "craOffsetKeysCycle 4";
    popupMenu;
    menuItem -i "postInfinityCycle.png" -label "Post Infinity: Linear for selected objects" -command "craOffsetKeysCycle 8";
    menuItem -i "postInfinityCycle.png" -label "Post Infinity: Oscillate for selected objects" -command "craOffsetKeysCycle 9";
    setParent -m ..;
    nodeIconButton -h 24 -w 24 -i "muted.png" -ann "Post Infinity: Constant for selected objects" -l "Cycle" -c "craOffsetKeysCycle 5";
    setParent ..;
    setParent ..;
    
    if(`getApplicationVersionAsFloat` > 2015)
    {
        frameLayout -e -mw 0 craOffsetKeysSelOrderFL;
        optionMenu -e -h 25 craOffsetKeysSelectionOrderOM;
        window -e -wh 205 126 -s 0 craOffsetKeysWin;
    }
    else
        window -e -wh 205 134 -s 0 craOffsetKeysWin;
    
    setFocus craOffsetKeysFramesIF;
    showWindow craOffsetKeysWin;
    evalDeferred ("optionMenu -e -sl 1 craOffsetKeysSelectionOrderOM");
}

global proc craOffsetKeysWrapper( float $direction, string $changeMode )
{       
    float $framesOffset = `floatField -q -v craOffsetKeysFramesIF`;
    int $sorting = `optionMenu -q -sl craOffsetKeysSelectionOrderOM`;
    int $mode = 0;
    string $objects[] = `ls -sl -l`;
    
    if(`checkBox -q -v craStaggerOffsetCB`)
        $mode = 1;
    if(`checkBox -q -v craRandomOffsetCB`)
        $mode = 2;
    
    craOffsetKeysProc( $objects, $framesOffset, $mode, $sorting, $direction, $changeMode);
}

global proc craOffsetKeysProc( string $objects[], float $framesOffset, int $mode, int $sorting, int $direction, string $changeMode)
{
	if(!size($objects))
		warning "Select some object(s)";
	else
	{
	    string $craOffsetKeysCBAttrs[] =`craOffsetKeysGetCBAttrs`;
	    string $craOffsetKeysAttrs;
	    
	    string $craAnimCurves[] =`keyframe -q -sl -name`;
	    int $craSizeAnimCurves = size(`keyframe -q -sl -name`);
	    if(size($craOffsetKeysCBAttrs) && !$craSizeAnimCurves)
	    {
	        $craOffsetKeysAttrs = " -at \"";
	        $craOffsetKeysAttrs+= stringArrayToString($craOffsetKeysCBAttrs, "\" -at \"");
	        $craOffsetKeysAttrs+="\" ";
	    }
	    else if($craSizeAnimCurves)
	        $objects = $craAnimCurves;
	    
	    if($sorting == 2)
	        $objects = craOffsetKeysInvertArray($objects);
	    
	    if($sorting == 3)
	        $objects = sort($objects);
	    
	    if($sorting == 4)
	    {
	        $objects = sort($objects);
	        $objects = craOffsetKeysInvertArray($objects);
	    }
	    
	    if($sorting == 5)
	        $objects = craOffsetKeysRandArray($objects);
	    
	    $framesOffset *= $direction;
	    
	    float $offset;
	    
	    for( $obj in $objects )
		{
		    float $craOffsetKeysSelectedKeys[] = `keyframe -q -selected $obj`;
		    string $craOffsetKeysSelectedKeysFlag = "";
		    
		    if($mode == 2)
		    {
		        if($changeMode == " -tc ")
		            $offset = int(rand($framesOffset + (1*$direction)));
		        else
		            $offset = rand($framesOffset + (1*$direction));
		    }
		    else if($mode == 1)
		        $offset += $framesOffset;
		    else 
		        $offset = $framesOffset;
		    
		    if(size($craOffsetKeysSelectedKeys))
		    {
		        for($key in $craOffsetKeysSelectedKeys)
		            $craOffsetKeysSelectedKeysFlag+= (" -t " + string($key));
		        $craOffsetKeysSelectedKeysFlag+=" ";
		    }
		    
		    $cmd = "keyframe -e -abd 1 -option \"over\" -r" + $changeMode + $offset + " " + $craOffsetKeysAttrs + $craOffsetKeysSelectedKeysFlag + $obj;
		    eval($cmd);
		}
	}
}

global proc string[] craOffsetKeysInvertArray( string $array[] )
{
    string $crainvertedArray[];
    
    for ($crai=size($array)-1,$j=0;$crai>=0;$crai--,$j++)
        $crainvertedArray[$j] = $array[$crai];
    
    return $crainvertedArray;
}

global proc string[] craOffsetKeysRandArray( string $stringArray[] )
{
    int $arraySize = size($stringArray);
    python("list = range(" + ($arraySize) + ")");
    python("import random");
    python("random.shuffle(list)");
    int $randomIndex[] = python("list");
    
    for( $crai=0;$crai<($arraySize);$crai++)
        $randomArray[$crai] =  strip($stringArray[$randomIndex[$crai]]);
    
    return $randomArray;
}

global proc string[] craOffsetKeysGetCBAttrs()
{
    if(size(`channelBox -q -sma mainChannelBox`)||size(`channelBox -q -ssa mainChannelBox`)||size(`channelBox -q -sha mainChannelBox`))
	{
	    if(size(`channelBox -q -sma mainChannelBox`))
	        return `channelBox -q -sma mainChannelBox`;
	    if(size(`channelBox -q -ssa mainChannelBox`))
	        return `channelBox -q -ssa mainChannelBox`;
	    if(size(`channelBox -q -sha mainChannelBox`))
	        return `channelBox -q -sha mainChannelBox`;
	}
	else
	    return {};
}

global proc craOffsetKeysCycle(int $mode)
{
    string $craOffsetKeysCBAttrs[] =`craOffsetKeysGetCBAttrs`;
    string $craOffsetKeysSelectedObjects[] = `ls -sl -l`;
    string $craOffsetKeysSelectedAnimCurves[] = `ls -sl -type "animCurveTU" -type "animCurveTA" -type "animCurveTT" -type "animCurveTL"`;
    string $craOffsetKeysSelectedCurves[];
    
    if(size($craOffsetKeysCBAttrs) || size($craOffsetKeysSelectedAnimCurves))
    {
        if(size($craOffsetKeysCBAttrs))
        {
            for($craOffsetKeysCBAttr in $craOffsetKeysCBAttrs)
            {
                for($craOffsetKeysSelectedObject in $craOffsetKeysSelectedObjects)
                {
                    string $craCurrentObjectCnnections[] = `listConnections -d 0 -p 0 -s 1 -c 0 ($craOffsetKeysSelectedObject + "." + $craOffsetKeysCBAttr)`;
                    $craOffsetKeysSelectedCurves[size($craOffsetKeysSelectedCurves)] = $craCurrentObjectCnnections[0];
                }
            }
        }
        else
            $craOffsetKeysSelectedCurves = $craOffsetKeysSelectedAnimCurves;
        
        for($craOffsetKeysSelectedCurve in $craOffsetKeysSelectedCurves)
        {
            switch ($mode)
            {
                case 0:
                // 0 constant
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".preInfinity") 0`);
                break;
                case 1:
                // 4 cycle with offset
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".preInfinity") 4`);
                break;
                case 2:
                // 3 cycle
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".preInfinity") 3`);
                break;
                case 3:
                // 3 cycle
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".postInfinity") 3`);
                break;
                case 4:
                // 4 cycle with offset
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".postInfinity") 4`);
                break;
                case 5:
                // 0 constant
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".postInfinity") 0`);
                break;
                case 6:
                // 1 linear
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".preInfinity") 1`);
                break;
                case 7:
                // 5 oscillate
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".preInfinity") 5`);
                break;
                case 8:
                // 1 linear
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".postInfinity") 1`);
                break;
                case 9:
                // 5 oscillate
                catchQuiet(`setAttr ($craOffsetKeysSelectedCurve + ".postInfinity") 5`);
                break;
            }
        }
    }
    else
    {
        if(size($craOffsetKeysSelectedObjects))
        {
            switch ($mode)
            {
                case 0:
                setInfinity -pri "constant";
                break;
                case 1:
                setInfinity -pri "cycleRelative";
                break;
                case 2:
                setInfinity -pri "cycle";
                break;
                case 3:
                setInfinity -poi "cycle";
                break;
                case 4:
                setInfinity -poi "cycleRelative";
                break;
                case 5:
                setInfinity -poi "constant";
                break;
                case 6:
                setInfinity -pri "linear";
                break;
                case 7:
                setInfinity -pri "oscillate";
                break;
                case 8:
                setInfinity -poi "linear";
                break;
                case 9:
                setInfinity -poi "oscillate";
                break;
            }
        }
    }
}

global proc craOffsetKeysAboutScript()
{
	if (`window -exists craOfffsetAnimAboutWin`)
		deleteUI craOfffsetAnimAboutWin;
	window -t  " About this tool" -s 0 -tlb 1 craOfffsetAnimAboutWin;
	frameLayout -mw 5 -mh 5 -lv 0;
	frameLayout -mw 5 -mh 5 -lv 0;
	columnLayout -adj 1;
	text -l "<font color=gold><h2>Offset Keyframes</h2></font>";
	text -l "<font color=#057cf3><h3>v1.1.0</h3></font>";
	text -l "";
	text -l "Offset keyframe times\nand values. Stagger, cycle \nand randomize keyframe\nvalues and times.";
	text -l "";
	text -l "Works on selected objects,\nkeyframes, animation curves\nor selected ChannelBox\nchannels.";
	text -l "";
	text -l "<font color=indianred><h4>Carlos Rico Adega ? 2015</h4></font>";
	text -l "";
	textField -ed 0 -text "   carlos.rico.3d@gmail.com";
	text -l "";
	rowLayout -nc 2 -adj 1;
	button -w 70 -l "Downloads" -ann "Free downloads from CreativeCrash.com" -c "showHelp -absolute \"http://www.creativecrash.com/users/charliewales/contributions?tab=free_downloads\"";
	button -w 70 -ann "Linked[In] profile"-l "Linked[In]" -c "showHelp -absolute \"http://www.linkedin.com/pub/carlos-rico/6/58/325\"";
	setParent ..;
	rowLayout -nc 2 -adj 1;
	button -l "Vimeo" -ann "Vimeo Channel" -c "showHelp -absolute \"https://vimeo.com/channels/749131\"";
	button -w 70 -l "YouTube" -ann "Youtube Channel" -c "showHelp -absolute \"https://www.youtube.com/channel/UCXnSX8PHpQtwJR-uN-atO3Q\"";
	setParent ..;    
	setParent ..;
	setParent ..;
	window -e -wh 176 315 craOfffsetAnimAboutWin;
	showWindow craOfffsetAnimAboutWin;
}

///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
// create XPM icons start
global proc string craXPMDataToString(string $xpmData[])
{
    string $craiconData = "";
    int $lines = size($xpmData);
    
    for($crai=0; $crai < $lines; $crai++)
		$craiconData+=($xpmData[$crai] + "\n");
	
	return $craiconData;
}

global proc craXPMCreator(string $outputFolder, string $outputFile, string $xpmData[])
{
    int $fileId = `fopen ( $outputFolder + $outputFile) "w"`;
    fprint $fileId (craXPMDataToString($xpmData));
    fclose $fileId;
}


// create XPM icons end
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////