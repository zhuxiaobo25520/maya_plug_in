global proc zxb_suoyouxuyao_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "面部" zxb_jisuanlianbu_ciji_Win;
scrollLayout; 
columnLayout; 
columnLayout -adjustableColumn 0; 
// 第一种：可折叠边框 
// 你熟悉的Attribute Editor和Tool Settings等窗口就是用的这种边框 
frameLayout -label "准备"   -collapsable 3 -cl 0   -labelWidth 20 -width 500  ; // 可折叠 
rowColumnLayout -nc 1 -cw 1 500  ;

text -l "--------------准备--------------"   ;
separator;



rowColumnLayout -nc 3 -cw 1 240 -cw 2 140  -cw 3 100 ;
string$head_mode="UI_head_mode";
string$headmode_butt="UI_head_mode_butt";
text -l "  " ;
checkBox -l "不检查头部对称" -value 0 hede_vs;
text -l "  " ;
textFieldGrp  -cw2 100 130 -l "头部模型"  -ed 0  $head_mode;
button -l  "载入"  -c ("zxb_zairufangfa_toubu_proc(\""+$head_mode+"\",\""+$headmode_butt+"\")") $headmode_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$headmode_butt+"\",\""+$head_mode+"\")") ;



textFieldGrp  -cw2 100 130 -l "头部控制器"  -ed 0 UI_head_controller ;  
string$head_com="UI_head_controller";
string$head_com_butt="UI_head_controller_butt";
button -l  "载入"  -c ("zxb_zairufangfa_B_proc(\""+$head_com+"\",\""+$head_com_butt+"\")") $head_com_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$head_com_butt+"\",\""+$head_com+"\")") ;

textFieldGrp  -cw2 100 130 -l "下巴关节"  -ed 0  UI_jaw_bn;
string$jaw_bn="UI_jaw_bn";
string$jaw_bn_butt="UI_jaw_bn_butt";
button -l  "载入"  -c ("zxb_zairufangfa_B_proc(\""+$jaw_bn+"\",\""+$jaw_bn_butt+"\")") $jaw_bn_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$jaw_bn_butt+"\",\""+$jaw_bn+"\")") ;


textFieldGrp  -cw2 100 130 -l "下巴控制器"  -ed 0  UI_jaw_controller ;
string$mouth_mouth_xiabakongzhiqi="UI_jaw_controller";
string$mouth_mouth_xiabakongzhiqi_butt="UI_jaw_controller_butt";
button -l  "载入"  -c ("zxb_zairufangfa_B_proc(\""+$mouth_mouth_xiabakongzhiqi+"\",\""+$mouth_mouth_xiabakongzhiqi_butt+"\")") $mouth_mouth_xiabakongzhiqi_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$mouth_mouth_xiabakongzhiqi_butt+"\",\""+$mouth_mouth_xiabakongzhiqi+"\")") ;


textFieldGrp  -cw2 100 130 -l "嘴巴外环线"  -ed 0  UI_mouth_outer_wire ;
string$mouth_xianduan_outer="UI_mouth_outer_wire";
string$mouth_xianduan_outer_butt="UI_mouth_outer_wire_butt";
button -l  "载入"  -c ("zxb_zairufangfa_suzu_proc(\""+$mouth_xianduan_outer+"\",\""+$mouth_xianduan_outer_butt+"\")") $mouth_xianduan_outer_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$mouth_xianduan_outer_butt+"\",\""+$mouth_xianduan_outer+"\")") ;


textFieldGrp  -cw2 100 130 -l "嘴巴内环线"  -ed 0  UI_mouth_inside_wire ;
string$mouth_xianduan_inside="UI_mouth_inside_wire";
string$mouth_xianduan_inside_butt="UI_mouth_inside_wire_butt";
button -l  "载入"  -c ("zxb_zairufangfa_suzu_proc(\""+$mouth_xianduan_inside+"\",\""+$mouth_xianduan_inside_butt+"\")") $mouth_xianduan_inside_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$mouth_xianduan_inside_butt+"\",\""+$mouth_xianduan_inside+"\")") ;


textFieldGrp  -cw2 100 130 -l "口腔环线"  -ed 0  UI_mouth_oral_wire ;
string$UI_mouth_oral_wire="UI_mouth_oral_wire";
string$UI_mouth_oral_wire_butt="UI_mouth_oral_wire_butt";
button -l  "载入"  -c ("zxb_zairufangfa_suzu_proc(\""+$UI_mouth_oral_wire+"\",\""+$UI_mouth_oral_wire_butt+"\")") $UI_mouth_oral_wire_butt ;
button -l  "重新载入"  -c ("zxb_zairufangfa_C_proc(\""+$UI_mouth_oral_wire_butt+"\",\""+$UI_mouth_oral_wire+"\")") ;



setParent ..; 
setParent ..; 
setParent ..; 
separator;
frameLayout -label "创建"   -collapsable 3 -cl 0   -labelWidth 20 -width 500  ; // 可折叠 
rowColumnLayout -nc 1 -cw 1 500  ;

text -l "--------------创建--------------"   ;
separator;
rowColumnLayout -nc 2 -cw 1 250 -cw 2 250 ;
string$zuibazhengti_button="zuibazhengti_button";
button -l "创建嘴巴整体绑定" -c "zxb_xiababangding_proc" $zuibazhengti_button ;

string$zuibazhengti_button_delete="zuibazhengti_button_delete";
button -l  "删除嘴巴整体绑定"  -c "zxb_xiababangding_delete_proc" -en 0  $zuibazhengti_button_delete; 

string$hedebs_button="hedebs_button";
button -l "创建head混合变形" -c "zxb_hunhebianx_proc" $hedebs_button ;

string$headhunhebianxing_button="headhunhebianxing_button";
button -l "删除混合变形" -c "zxb_delete_head_bs_proc"  -en 0 $headhunhebianxing_button ; 

string$headhunhebianxing_edit_button="headhunhebianxing_edit_button";
button -l "编辑混合变形" -c "" -en 0 $headhunhebianxing_edit_button ;


string$headhunhebianxing_add_button="headhunhebianxing_add_button";
button -l "添加混合变形" -c "" -en 0 $headhunhebianxing_add_button ;

separator;
separator;
string$hedemianbankuan_button="hedemianbankuan_button";
button -l  "创建表情面板"  -c "zxb_head_biankuang" $hedemianbankuan_button ;

string$hedemianbankuan_delete_button="hedemianbankuan_delete_button";
button -l  "删除表情面板"  -c "zxb_head_chongxing"  -en 0 $hedemianbankuan_delete_button;   
string$hedemianbankuan_wancheng_button="hedemianbankuan_wancheng_button";
button -l  "完成表情面板框"  -c "zxb_mianbanwancheng_proc"  -en 0 $hedemianbankuan_wancheng_button;
string$hedemianbankuan_bianji_button="hedemianbankuan_bianji_button";
button -l  "编辑表情面板框"  -c "zxb_mianbanbianji_proc" -en 0  $hedemianbankuan_bianji_button;

string$hedemianbankuan_Add_button="hedemianbankuan_Add_button";
button -l  "添加表情控制控框制器"  -c "zxb_mianban_Addmianban_proc" -en 0 $hedemianbankuan_Add_button;

string$hedemianbankuan_Add_delete_button="hedemianbankuan_Add_delete_button";
button -l  "删除表情控制控框制器"  -c "zxb_mianban_Add_delete_proc"  -en 0 $hedemianbankuan_Add_delete_button;

string$hedeopen_reverse_button="hede_open_reverse_button";
button -l  "链接嘴巴混合变形"  -c "zxb_open_reverse_proc"  -en 1 $hedeopen_reverse_button;
button -l  "创建抿嘴曲线"  -c "zxb_extract_Curves_lip"  -en 1 "lip_Curve_button";
button -l  "创建抿嘴曲线混合变形"  -c "zxb_extract_Curves_bs_lip"  -en 1 "lip_bs_button";

button -l  "保存UI上的名称"  -c " zxb_UI_mingzi_serve"  -en 1 UI_serve_button;

separator;
separator;
setParent ..; 
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l " " -h 25;
button -l  "自动动创建拉链绑定"  -c "zxb_zuibalalian_all_proc"  -en 1 zidong_button ;
frameLayout -label "创建拉链"   -collapsable 3 -cl 0   -labelWidth 20 -width 500   ; // 可折叠 


text -l " " -h 25;
text -l "--------------提取曲线--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 200 50 -l "选中线中线（最平的一段）" -tx "  " -ed 0  UI_mouth_temp_wire;
string$xian="UI_mouth_temp_wire";
button -l "载入线" -c ("zxb_zairufangfa_A_proc(\""+$xian+"\")") lalian_button_zairuxian ;


textFieldGrp  -cw2 100 130 -l "曲线前缀" -tx "lalian"   UI_mouth_zipper_prefix;

text -l "  " ;

textFieldGrp  -cw2 200 70 -l "反向嘴巴模型（闭合模型）" -tx "  " -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") lalian_button_fanxiang;


 setParent..;
button -l "创建张嘴曲线A" -c "zxb_zuiba_tiqv_lalian_open_proc" lalian_button_qvxianA;   
button -l "创建闭嘴曲线无后缀" -c "zxb_zuiba_tiqv_lalian_close_proc" lalian_button_qvxian;
button -l "创建跟随曲线D" -c "zxb_zuiba_tiqv_lalian_follow_proc" lalian_button_qvxianD;
text -l "--------------创建拉链--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;




checkBox -l "选中点" -value 0 panduan_dian;
checkBox -l "反选控定位器（拉链效果默认闭合的话勾选他）" -value 1 fanxuan;

textFieldGrp  -cw2 150 100 -l "跟随曲线（D曲线）" -tx " "   UI_mouth_zipper_wire_follow_D;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_mouth_zipper_wire_follow_D"+"\")") UI_mouth_zipper_wire_follow_D_button;


textFieldGrp  -cw2 150 100 -l "张开 闭合 曲线" -tx " "   UI_mouth_zipper_wire_close_open;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_mouth_zipper_wire_close_open"+"\")") UI_mouth_zipper_wire_close_open_button;



textFieldGrp  -cw2 150 100 -l "张开曲线(曲线A)" -tx " "   UI_mouth_zipper_wire_open_A;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_mouth_zipper_wire_open_A"+"\")")  UI_mouth_zipper_wire_open_A_button;



textFieldGrp  -cw2 150 100 -l "闭合曲线(曲线B)" -tx " "   UI_mouth_zipper_wire_close_B;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_mouth_zipper_wire_close_B"+"\")")   UI_mouth_zipper_wire_close_B_button;


//button -l "提取反向嘴曲线(暂时无用)" -c "zxb_xuanzebutongmoxing_jiluxuanzhededian";
//textFieldGrp  -cw2 100 130 -l "载入基础模型" -tx "模型" -ed 0  zxb_zairumodea;
//string$mode="zxb_zairumode";
//button -l "载入基础模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;
setParent ..; 
button -l "定位器控制曲线（D曲线）" -c "zxb_dingweiqi_kongzhiqvxian" UI_mouth_zipper_follow_DD_button ; 
button -l "曲线控制定位器(张开 闭合 曲线)" -c "zxb_dingweiqi_gensuiqvxian" UI_mouth_zipper_open_AABB_button;
button -l "创建拉链" -c "zxb_global_bolangzui" UI_mouth_zipper_Create_button;



text -l "--------------创建线包裹--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 150 130 -l "载入基础模型" -tx "模型" -ed 0  zxb_zairumodeA;
string$modeA="zxb_zairumodeA";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$modeA+"\")") ;

textFieldGrp  -cw2 150 130 -l "载入D曲线 按顺序选中" -tx "曲线" -ed 0  Dqvxian;
string$Dqvxian="Dqvxian";
button -l "载入D曲线" -c ("zxb_zairufangfa_A_proc(\""+$Dqvxian+"\")") ;



textFieldGrp  -cw2 150 130 -l "载入张嘴曲线 按顺序选中" -tx "曲线" -ed 0  zhangzuiqvxian;
string$zhangzuiqvxian="zhangzuiqvxian";
button -l "张嘴曲线" -c ("zxb_zairufangfa_A_proc(\""+$zhangzuiqvxian+"\")") ;

setParent ..; 
button -l "生成包裹" -c "zxb_lalianbaoguo_poc";




text -l "--------------设置驱动--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入控制器" -tx "控制器" -ed 0  zxb_zairukongzhiqi;
string$mkongzhiqi="zxb_zairukongzhiqi";
button -l "控制器" -c ("zxb_zairufangfa_A_proc(\""+$mkongzhiqi+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入定位器" -tx "定位器" -ed 0  zxb_dingweiqi;
string$dingweqi="zxb_dingweiqi";
button -l "定位器" -c ("zxb_zairufangfa_A_proc(\""+$dingweqi+"\")") ;



setParent ..; 


button -l "设置驱动" -c "zxb_zd_sheziqvdong_poc";





text -l "--------------骨骼跟随曲线--------------" -h 20  -bgc 0.3 0.7 0.3;
button -l "生成" -c "xiao_gugegengsuiqvxian_proc_columnLayout";

separator;

setParent ..; 

frameLayout -label "创建嘴巴波浪"   -collapsable 3 -cl 0   -labelWidth 20 -width 500  ; // 可折叠 

text -l "--------------生成波浪--------------" -h 20  -bgc 0.3 0.7 0.3;
button -l "选中D曲线" -c "zxb_bolangzui";
setParent ..; 
setParent ..; 
setParent ..; 
showWindow  ;

}



global proc zxb_ui_jiazai() 
{
string$face_loc="zxb_face_loc";
string$UI_arraySS=`zxb_UI_mingzi`;
string$UI_array[]=stringToStringArray($UI_arraySS," ");
string$UI_ex="UI_ex_judge";

int$ex=`objExists $face_loc`;    ///判断
if($ex==0)
  {
    spaceLocator -p 0 0 0 -n $face_loc;
    
    string$BUYIDONGZU="Face_Group";
    int$ex=`objExists $BUYIDONGZU`;    ///判断
    if($ex==0)
       {
       group  -em  -n $BUYIDONGZU;
       }
    parent $face_loc $BUYIDONGZU;
    
    for($iii=0;$iii<size($UI_array);$iii++)
       {
       string$temp_shuxing=$UI_array[$iii];
       zxb_ADD_shuxing_string_proc($face_loc,$temp_shuxing); 
       
        }

    
    zxb_ADD_shuxing_double_proc($face_loc,$UI_ex);
 }


float$ex_A=`getAttr($face_loc+"."+$UI_ex)`;
if($ex_A==1)
  {
      
 
  for($iii=0;$iii<size($UI_array);$iii++)
      {
     string$shuxing=$UI_array[$iii];
     
     string$temp_shuxing=`getAttr ($face_loc+"."+$shuxing)`;
     textFieldGrp -e -tx $temp_shuxing $shuxing; 
      }
  button -e -en 0  UI_head_mode_butt ;
  button -e -en 0 UI_head_controller_butt;
 
  button -e -en 0 UI_jaw_bn_butt;
  button -e -en 0 UI_jaw_controller_butt;
   
  button -e -en 0 UI_mouth_outer_wire_butt;
  button -e -en 0 UI_mouth_inside_wire_butt;
  button -e -en 0 lalian_button_zairuxian;
  button -e -en 0 lalian_button_fanxiang;
  button -e -en 0 lalian_button_qvxianA;
  button -e -en 0 lalian_button_qvxian;
  
  button -e -en 0 lalian_button_qvxianD;
  button -e -en 0  UI_mouth_zipper_wire_follow_D_button;
  button -e -en 0 UI_mouth_zipper_wire_close_open_button;
  button -e -en 0 UI_mouth_zipper_wire_open_A_button ;
  button -e -en 0 UI_mouth_zipper_wire_close_B_button;
  button -e -en 0 UI_mouth_zipper_follow_DD_button;
  button -e -en 0 UI_mouth_zipper_open_AABB_button;
  button -e -en 0 UI_mouth_zipper_Create_button;
  button -e -en 0 zuibazhengti_button;
  button -e -en 0 hedebs_button;
  button -e -en 0  hedemianbankuan_button;
  button -e -en 0 hede_open_reverse_button;
  button -e -en 0 UI_serve_button ;
  button -e -en 0  zidong_button;
  button -e -en 1  zuibazhengti_button_delete;
  button -e -en 1 headhunhebianxing_button;
  button -e -en 1 hedemianbankuan_delete_button;
 // button -e -en 0 ;
  
            
  }

    
}




global proc string zxb_UI_mingzi()
{
string$mingzi="";
string$UI_array[]={"UI_head_mode","UI_head_controller","UI_jaw_bn","UI_jaw_controller","UI_mouth_outer_wire","UI_mouth_inside_wire","UI_mouth_temp_wire","UI_mouth_zipper_prefix","UI_mouth_zipper_wire_follow_D","UI_mouth_zipper_wire_open_A","UI_mouth_zipper_wire_close_B","UI_mouth_zipper_wire_close_open"};
for($i=0;$i<size($UI_array);$i++)
   {
   $mingzi+=($UI_array[$i]+" ");
   }
   
   return $mingzi;
}


global proc  zxb_UI_mingzi_serve()
{
  int $ex=`objExists "zxb_face_loc"`;//查询这个物体是否纯在
  if($ex==0){error"固定定位器\nzxb_face_loc不存在";}
  
  string$UI_arraySS=`zxb_UI_mingzi`;
  string$UI_array[]=stringToStringArray($UI_arraySS," ");
  string$face_loc="zxb_face_loc";
  if($ex==1)
  {
      setAttr "zxb_face_loc.UI_ex_judge" 1;
      
       for($iii=0;$iii<size($UI_array);$iii++)
           {
            string$shuxing=$UI_array[$iii];
            string$teststring=`textFieldGrp -q -tx $shuxing `;
            setAttr -type "string" ($face_loc+"."+$shuxing) $teststring;
     
           }
  }
  
 button -e -en 0 UI_serve_button ;

}

////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////


///////载入文字//////////////////
global proc zxb_zairufangfa_A_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}


/////////显示按钮按钮并清空文字///////
global proc zxb_zairufangfa_C_proc(string$butt,string $tempname)
{

button -e -en 1 $butt;
textFieldGrp -e -tx "" $tempname;

}
/////////显示按钮按钮///////
global proc zxb_zairufangfa_vsanniu_proc(string$butt)
{

button -e -en 1 $butt;

}

////////////关闭按钮///////////////
global proc zxb_zairufangfa_vsanniu_on_proc(string$butt)
{

button -e -en 0 $butt;

}

////////////关闭按钮///////////////
global proc zxb_zairufangfa_D_proc(string$butt)
{

button -e -en 0 $butt;
}
/////////编辑文字并隐藏按钮///////
global proc zxb_zairufangfa_B_proc(string$tempname,string$butt)
{
string $sel[]=`ls -sl`;
textFieldGrp -e -tx $sel[0] $tempname;
button -e -en 0 $butt;
}


/////////////载入数组///////////////
global proc zxb_zairufangfa_suzu_proc(string$tempname,string$butt)
{
string $sel[]=`ls -sl -fl`;
string$suzu="";
for ($i=0;$i<size($sel);$i++)
    {
    $suzu+=$sel[$i]+" ";
    }
textFieldGrp -e -tx  $suzu $tempname;
button -e -en 0 $butt;
}
///////////////载入一堆字符//////////////
global proc zxb_zairufangfa_A_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}


///////////////载入一堆字符//////////////
global proc string zxb_array_to_stringproc(string$tempname[])
{

string $obj="";
for($i=0;$i<size($tempname);$i++)
    {
    $obj+=(" "+$tempname[$i]);
    }
 return $obj;
}

//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_string_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing  -dt "string";} 
}


//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_double_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing -at double   -dv 0 -k 1;} 
}

//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_double_A_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing -at double  -min 0 -max 10  -dv 0 -k 1;} 
}



///////////////////////创建空组
global proc zxb_ADD_kongzu_proc(string$kongzu)
{  
 int$ex=`objExists $kongzu`; ///判断
 if($ex==0){ group -empty -n $kongzu;}
   
}
//////////选中物体创建空组//////////////
global proc zxb_ADD_kongzuA_proc(string$kongzu,string$wuti)
{  
 int$ex=`objExists $kongzu`; ///判断
 if($ex==0)
 { 
 select -r $wuti;
 group  -n $kongzu;
 }
   
}
/////////////////////////////////////////创建节点
global proc zxb_ADD_jiedian_proc(string$jiedian_name,string$jiedia)

{
   int$ex=`objExists $jiedian_name`;    ///判断
   if($ex==0){shadingNode -asUtility  $jiedia -n $jiedian_name;//创建范围节点
   }
   
}


/////////////////////////////////////////创建节点
global proc zxb_ADD_createNode_proc(string$jiedian_name,string$jiedia)

{
   int$ex=`objExists $jiedian_name`;    ///判断
   if($ex==0){createNode   $jiedia -n $jiedian_name;//创建范围节点
   }
   
}
/////////隐藏按钮并载入文字

global proc zxb_butt_tex_proc(string $butt,string $textFieldGrpa)
{

button -e -en 0 $butt;
zxb_zairufangfa_A_proc($textFieldGrpa);
}

//////////反向保存关节名称//////////////
global proc string zxb_baocunguanjie_mingzi_proc(string$mingzi, int$qunlujing)
{
         string $IKS[];
         clear$IKS;
         if($qunlujing==0){$IKS=`listRelatives -c -ad   -type "joint"$mingzi `; }
         if($qunlujing==1){$IKS=`listRelatives -c -ad    -type "joint"-pa $mingzi `; }
         string$all_bn[];
         clear $all_bn;  
         $all_bn[0]=$mingzi; 
        for($j=0;$j<size($IKS);$j++)
           {
               string$temp_bn=$IKS[$j];
               int$temp_a=size($IKS)-$j;
               $all_bn[$temp_a]=$temp_bn;
               
               
           }
           
          string$mingziss="";
         for($j=0;$j<size($all_bn);$j++)
             {
              string$temp=$all_bn[$j]+" ";
              $mingziss+=$temp;
              }
              
              
         return $mingziss;

}







///////////////////复制关节并重新命名////////////////////////////////////////

global proc string zxb_chongxingmingming_bn_mingzi_proc(string$bn,string$qianzui)
  {
  select -r $bn;
  string$mingzi=$bn+$qianzui+"temp";
  string$mingzi_a=$bn+$qianzui;
  duplicate -rr -n $mingzi ;
  string$pa_bn=zxb_baocunguanjie_mingzi_proc($mingzi,1);
  string$pa_bns[]= stringToStringArray($pa_bn, " ");//关节
  string$bn_name="";
  string$bn_namea="";
  for($ii=size($pa_bns)-1;$ii>=0;$ii--)
     {
            string$temp_bn=$pa_bns[$ii];
            string$name=$mingzi_a+$ii;
            select -r $temp_bn;
            rename $temp_bn $name;
            if($ii==0)
               {
                 $bn_namea=$name;
                 }
       }
  string$bn_name=zxb_baocunguanjie_mingzi_proc($bn_namea,0);   
  return  $bn_name;
   
   }
  
  
  
  
  
  //////////////////////////通过曲线返回U参数///////////////////////////////
  global proc float zxb_return_curve_U(float$x,float$y,float$z,string$qvxian)
{
    
float$u=0;
string$shangxiaqvxian_nearestPointOnCurve=$qvxian+"zxb_return_curve_U_nearestPointOnCurve";
string $xingjiedian[]=`listRelatives -s $qvxian`;
string$qvxian_shap=$xingjiedian[0];
zxb_ADD_createNode_proc($shangxiaqvxian_nearestPointOnCurve,"nearestPointOnCurve");
connectAttr -force ($qvxian_shap+".worldSpace[0]")  ($shangxiaqvxian_nearestPointOnCurve+".inputCurve");
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionX") $x;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionY") $y;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionZ") $z;
string$parameter=`getAttr ($shangxiaqvxian_nearestPointOnCurve+".parameter")`;
$u=$parameter;
return$u;
delete $shangxiaqvxian_nearestPointOnCurve;
}
  
  
//////////////////通过曲线返回U位置///////////////////////////
global proc float[]  zxb_return_curve_place(float$x,float$y,float$z,string$qvxian)
{
    

float$ee[];
clear $ee;
string$shangxiaqvxian_nearestPointOnCurve=$qvxian+"zxb_return_curve_U_nearestPointOnCurve";
string $xingjiedian[]=`listRelatives -s $qvxian`;
string$qvxian_shap=$xingjiedian[0];
zxb_ADD_createNode_proc($shangxiaqvxian_nearestPointOnCurve,"nearestPointOnCurve");
connectAttr -force ($qvxian_shap+".worldSpace[0]")  ($shangxiaqvxian_nearestPointOnCurve+".inputCurve");
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionX") $x;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionY") $y;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionZ") $z;
string$parameter=`getAttr ($shangxiaqvxian_nearestPointOnCurve+".parameter")`;
$u=$parameter;
return$ee;
delete $shangxiaqvxian_nearestPointOnCurve;
}  




//////////////////////计算位置的平均值///////////////////////////
global proc float zxb_qvfengshangzi ()
{
string$tempString[]=`ls -sl -fl`;

float $tys[];
float $tysAverage;
for ($y=0;$y<size($tempString);$y++)
	{
	$pos=`xform -q -ws -t $tempString[$y]`;
	$tys[$y]=$pos[1];
	$tysAverage+=$tys[$y];
	}
$tysAverage=$tysAverage/size($tempString);
return $tysAverage;
}



///////////////////////计算Y轴法线的朝向///////////////////////////

global proc float zxb_normal_pingjunshu(string$mode)
{
string$tempString[]=`ls -sl -fl`;
string$temp_mode=$mode;

float$shu=0;
string$mode_shps[]=`listRelatives -s $temp_mode`; 
for ($y=0;$y<size($tempString);$y++)
	{
	string$mesh_OnMesh="Temp_closestPointOnMesh";
	zxb_ADD_createNode_proc($mesh_OnMesh, "closestPointOnMesh");
	connectAttr -force ($mode_shps[0]+".worldMesh[0]") ($mesh_OnMesh+".inMesh");
	string$temp_cv=$tempString[$y];
	float $cv_pos[]=`xform -q -ws -t $temp_cv`;
	setAttr -type float3 ($mesh_OnMesh+".inPosition") $cv_pos[0] $cv_pos[1] $cv_pos[2];
	float$a=getAttr ($mesh_OnMesh+".result.normal.normalY");
    $shu+=$a;
    delete $mesh_OnMesh;
	}
int$r=size($tempString);
float$pingjun=$shu/$r;
return $pingjun;
}





//////////////////////////创建FK控制器//////////////////////////////////////////////////
global proc  zxb_FK_controller_proc(string$head_bn)
{
string$temp_a_bn[];
 clear$temp_a_bn;
$temp_a_bn[0]=$head_bn;
string $bn[]=$temp_a_bn;
int $bnnum=size($bn);

for($jj=0;$jj<$bnnum;$jj++)
   {
    select -r ($bn[$jj]);
	string $sels[] = `ls -sl`;
	
	int $size=size($sels);	
	/////////////////////////////
	string $baseJoint = $sels[0];
	
	string $endJoint;
	
	string $childs[]=`listRelatives -c -ad $sels[0]`;
	int $num=size($childs);
	$endJoint=$childs[0];
	//////////////////////////////////////	
	string $typs=`nodeType  $baseJoint`;
	string $type=`nodeType  $endJoint`;
	if($typs!="joint")error "需要选择两个关节";
	if($type!="joint")error "需要选择两个关节";

	select -r  $baseJoint;
	
    for($a=($num-1);$a>0;$a--){
    
    select -add ($childs[$a]);
}

string $sel[]=`ls -sl`;

string $tokem[];
int $tonum=`tokenize ($sel[0]) "_" $tokem`;
string $side=$tokem[1];

for($i=0;$i<size($sel);$i++){
  circle -ch 0 -o on -nr 1 0 0 -r 1 -n ($sel[$i]+"Con") ;
  select -r ($sel[$i]+"Con");
  group -n ($sel[$i]+"ConGrp");
  group -n ($sel[$i]+"ConGrpA");
  select -r ($sel[$i]);
  select -add ($sel[$i]+"ConGrpA");
  delete `parentConstraint`;
  
  select -r ($sel[$i]+"Con");
  select -add ($sel[$i]);
  parentConstraint;
  //scaleConstraint; 
 
  setAttr -lock true ($sel[$i]+"Con.v");
  string $shape[]=`listRelatives -s ($sel[$i]+"Con")`;
    setAttr ($shape[0]+".overrideEnabled") 1;
  if($side=="l"){
    setAttr ($shape[0]+".overrideColor") 22;   
  }else if($side=="r"){
    setAttr ($shape[0]+".overrideColor") 13;   
  }else{
        setAttr ($shape[0]+".overrideColor") 6;     
  }  
}

for($i=0;$i<(size($sel)-1);$i++){
    $j=$i+1;
    select -r ($sel[$j]+"ConGrpA");
    select -add ($sel[$i]+"Con");
    parent;
}

int $size=size($sel);
/////////////////////
addAttr -ln "rotx"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "roty"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "rotz"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "showCon"  -at bool -k 1 ($sel[$size-1]+"Con");

for($i=0;$i<size($sel);$i++){
    connectAttr -f ($sel[$size-1]+"Con.rotx") ($sel[$i]+"ConGrp.rotateX");
    connectAttr -f ($sel[$size-1]+"Con.roty") ($sel[$i]+"ConGrp.rotateY");
    connectAttr -f ($sel[$size-1]+"Con.rotz") ($sel[$i]+"ConGrp.rotateZ");    
}

for($i=0;$i<(size($sel)-1);$i++){
    string $shap[]=`listRelatives -s ($sel[$i]+"Con")`;

    connectAttr -f ($sel[$size-1]+"Con.showCon") ($shap[0]+".v");
        }
    }
}




////////////////////////////////////////关节创建曲线/////////////////////////////////////////////////////////////////
global proc  zxb_curve_establish_proc(string$cbns[],string$qvxian)
{
  string$mingzi="curve -d 3 ";
  for($jj=0;$jj<size($cbns);$jj++)
      {
          string$mingzi_bnn=$cbns[$jj];
          float $temp[]=`xform -q -ws -t $mingzi_bnn`;
          $mingzi+="-p "+$temp[0]+" "+$temp[1]+" "+$temp[2]+" ";
      }
   $mingzi+=" -n "+ $qvxian;
   eval($mingzi); 
}
       
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////








/////创建下巴绑定////
global proc zxb_xiababangding_proc()
{
  zxb_ui_jiazai;  
  string $xiaba_bn=`textFieldGrp -q -tx  UI_jaw_bn`;
  string $head_qvxian=`textFieldGrp -q -tx UI_head_controller `;
  
  
  int$ex=`objExists $xiaba_bn`; 
  if($ex==0){ error  "下巴关节没有载入";}
  int$ex=`objExists $head_qvxian`; 
  if($ex==0){ error  "头部控制器没有载入" ;}
  
  
  int$ex=`objExists ($head_qvxian+".jaw")`;    ///判断
  select -r $head_qvxian;
  if($ex==0){addAttr -ln "jaw"  -dt "string";}  
  
  int$ex=`objExists ($head_qvxian+".UI_jaw_bn")`;    ///判断
  select -r $head_qvxian;
  if($ex==0){addAttr -ln "UI_jaw_bn"  -dt "string";}  
  
  int$ex=`objExists ($head_qvxian+".jaw_root_bn")`;    ///判断
  select -r $head_qvxian;
  if($ex==0){addAttr -ln "jaw_root_bn"  -dt "string";}  
  
  int$ex=`objExists ($head_qvxian+".jaw_zhengti_bn")`;    ///判断
  select -r $head_qvxian;
  if($ex==0){addAttr -ln "jaw_zhengti_bn"  -dt "string";}  
  
  string$qvxian_jaw="";  
  string$qvxian_jaw_bn=""; 
  string$qvxian_jaw_root_bn=""; 
  string$qvxian_jaw_zhengti_bn=""; 
  string$jaw_bn=$xiaba_bn;
  select -r $jaw_bn ;
  
  string $jaw=($jaw_bn+"_BN");
  duplicate -rr -n $jaw;
  string$ziwuti[]=`listRelatives -c  -pa $jaw`;
  string $jaw_end=($jaw_bn+"_BN_end");
  rename $ziwuti[0] $jaw_end;
  string$qvxian_jaw_bn=$jaw;
  setAttr -type "string"($head_qvxian+".UI_jaw_bn") $qvxian_jaw_bn;

  string$grp=($jaw+"_grp");
  int$ex=`objExists $grp`;    ///判断
  $qvxian_jaw+=$grp+" ";
  if($ex==0)
     {
       group  -em  -n $grp;
     }
  parent $jaw $grp;
  string$bn_con=($jaw+"_com");
  string$qvxian_grpA=($bn_con+"_A");
  string$qvxian_grpB=($bn_con+"_B");
  string$qvxian_grpC=($bn_con+"_C");
  $qvxian_jaw+=$qvxian_grpC+" ";
  float$banjing=`getAttr ($jaw_end+".tx")`;
  
  circle -c 0 0 0 -nr 0 1 0 -sw 360 -r ($banjing*0.3) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $bn_con ;
  group -n $qvxian_grpA;
  group -n $qvxian_grpB;
  group -n $qvxian_grpC;
  delete `pointConstraint $jaw_end $qvxian_grpC`;
  float$tx=`getAttr  ($jaw_end+".tx")`;
  select -r ($bn_con+".cv[0:9999]") ;
  //move -r -os -wd ($tx*0.3) 0 0 ;
  float$bn_pos[]=`xform -q -ws -t $jaw`;
  string$jaw_root=($jaw+"_root");
  select -cl  ;
  joint -p  $bn_pos[0] $bn_pos[1] $bn_pos[2] -n $jaw_root ;
  move -r 0 0 ($tx*-0.5) ;
  parent $jaw_root $grp;
  parent $jaw $jaw_root;
  parent  $qvxian_grpC $head_qvxian;
  $qvxian_jaw_root_bn=$jaw_root;
   setAttr -type "string"($head_qvxian+".jaw_root_bn") $qvxian_jaw_root_bn;
 // select -r $jaw_root;
  //SelectHierarchy;
  //joint -e  -oj xyz -secondaryAxisOrient yup -ch -zso;

  
  
  string$jaw_locA=($jaw+"_locA");
  string$loc_GRPA=($jaw_locA+"_A");
  string$loc_GRPB=($jaw_locA+"_B");
  
  spaceLocator -p 0 0 0 -n $jaw_locA ;
  group -n $loc_GRPA;
  group -n $loc_GRPB;
  
  delete `pointConstraint $jaw_bn $loc_GRPB`;
  parent $loc_GRPB $jaw_root;
  parent  $jaw $jaw_locA;
  
  
  
  
  string$jaw_locB=($jaw+"_locB");
  string$loc_GRPAA=($jaw_locA+"_AA");
  string$loc_GRPBB=($jaw_locA+"_BB");
  $qvxian_jaw+=$loc_GRPBB+" ";
  setAttr -type "string"($head_qvxian+".jaw") $qvxian_jaw;
  spaceLocator -p 0 0 0 -n $jaw_locB ;
  group -n $loc_GRPAA;
  group -n $loc_GRPBB;
  
  string$FUwuti[]=`listRelatives -p  $jaw_bn`;
  parent  $loc_GRPBB $FUwuti[0];
  delete`pointConstraint $jaw_bn $loc_GRPBB`;
  pointConstraint  $jaw_bn $jaw_locB;

 connectAttr -f ($jaw_bn+".rotate") ($jaw+".rotate");
  connectAttr -f ($jaw_locB+".t") ($jaw_locA+".t");
   
  setAttr ($grp+".visibility") 0;
  
    string$BUYIDONGZU="Face_Group";
  int$ex=`objExists $BUYIDONGZU`;    ///判断
  if($ex==0)
     {
       group  -em  -n $BUYIDONGZU;
     }
  parent  $grp $BUYIDONGZU;
  
  
  select -r  $jaw_bn;
  string$zuiba_zhengti=($jaw_bn+"_zhengti");
  
  duplicate -rr -n $zuiba_zhengti;
  
  
    string$zhengti_grp=($jaw_bn+"_zhengti_grp");
  int$ex=`objExists $zhengti_grp`;    ///判断
  if($ex==0)
     {
       group  -em  -n $zhengti_grp;
     }
  
  string$ziwuti_A[]=`listRelatives -c  -pa $zuiba_zhengti`;
  string $jawzhengti_end=($zuiba_zhengti+"_BN_end");
  rename $ziwuti_A[0] $jawzhengti_end;
  move -r 0 ($tx*0.05) 0 ;
  $qvxian_jaw_zhengti_bn=$zuiba_zhengti;
  setAttr -type "string"($head_qvxian+".jaw_zhengti_bn") $qvxian_jaw_zhengti_bn;
 transformLimits -tx -1 1 -etx 1 1 $bn_con;
 transformLimits -ty -1 1 -ety 1 1 $bn_con;
 transformLimits -tz -1 1 -etz 1 1 $bn_con;
 transformLimits -tz 0 0 -etz 1 1 $bn_con;
 
 transformLimits -ry 0 0 -ery 1 1 $bn_con;
 transformLimits -rx 0 0 -erx 1 1 $bn_con;
 transformLimits -rz -30 30 -erz 1 1 $bn_con;
 
 delete`pointConstraint  $zuiba_zhengti $zhengti_grp  `;
 parent $zhengti_grp $grp;
 parent $zuiba_zhengti $zhengti_grp;
 setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty");  
 setDrivenKeyframe -itt "linear" -ott "spline" -v -1 -dv -1 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
   
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
  
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".sx"); 
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1.1 -dv 1 -cd ($bn_con+".ty") ($zuiba_zhengti+".sx"); 
   
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v -5 -dv 1 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 

  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 5 -dv -1 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry");
  
  
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 10 -dv 30 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx");  
  
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v -10 -dv -30 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx");  
  zxb_zairufangfa_D_proc("zuibazhengti_button");
  
  
  zxb_zairufangfa_vsanniu_proc("zuibazhengti_button_delete");
  
}  

////////删除嘴巴整体////////////////////
global proc zxb_xiababangding_delete_proc()
{
     string $head_qvxian=`textFieldGrp -q -tx UI_head_controller `;
    string$zu_s=`getAttr ($head_qvxian+".jaw")`;
    string $array[] = stringToStringArray($zu_s, " ");//字符串转化数组
    delete $array;
    zxb_zairufangfa_vsanniu_on_proc("zuibazhengti_button_delete");
    zxb_zairufangfa_vsanniu_proc("zuibazhengti_button");
}

/////////////////创建混合变形////////
global proc zxb_hunhebianx_proc()
{
  string $xiaba_mode=`textFieldGrp -q -tx  UI_head_mode`;
  string $xiaba_head_con=`textFieldGrp -q -tx UI_head_controller `;
  
  int$ex=`objExists $xiaba_mode`; 
  if($ex==0){ error  "头部模型没有载入";}
  
  int$ex=`objExists $xiaba_head_con`; 
  if($ex==0){ error  "头部控制器没有载入";}
  
  
  string$jaw_root=`getAttr ($xiaba_head_con+".jaw_root_bn")`;
  int$ex=`objExists $jaw_root`; 
  if($ex==0){ error  "下巴根关节不存在 请创建下巴绑定";}
  
  string$jaw_zhengti=`getAttr ($xiaba_head_con+".jaw_zhengti_bn")`;
  int$ex=`objExists $jaw_zhengti`; 
  if($ex==0){ error  "嘴巴整体关节不存在 请创建下巴绑定";}
  
  string$jaw_bn=`getAttr ($xiaba_head_con+".UI_jaw_bn")`;
  
  int$ex=`objExists $jaw_bn`; 
  if($ex==0){ error  "下巴关节不存在 请创建下巴绑定";}
  
  zxb_zairufangfa_D_proc("hedebs_button");
  
  
  string$mode=$xiaba_mode;
  string$zhangzui=($mode+"_open_mouth_lay");
  string$zhengti=($mode+"_mouth_whole_lay");
  string$fanxiang=($mode+"_repeated_mouth_lay");
  string$zhangzui_A=($mode+"_open_A_mouth_lay");
  //string$reverse=($mode+"_reverse_mouth_lay");
  zxb_ADD_shuxing_string_proc($xiaba_head_con,"base_bs_mode");
  string$base_bs_string="";
  $base_bs_string+=($zhangzui+" "+$zhengti+" "+$fanxiang+" ");
  setAttr -type "string"($xiaba_head_con+".base_bs_mode") $base_bs_string;
  
  

  
  string$modegrp=$xiaba_mode+"_grp";
  zxb_ADD_shuxing_string_proc($xiaba_head_con,$modegrp);
  setAttr -type "string"($xiaba_head_con+"."+$modegrp) $modegrp;
  select -cl  ;
  zxb_ADD_kongzu_proc($modegrp);
  string $fuwuti[]=`listRelatives -p $modegrp`; 
  int$ex=`objExists $fuwuti[0]`; ///判断
  if($ex==0){ parent $modegrp "Face_Group" ;}
 
  
  select -r $mode;
  duplicate -rr -n $zhangzui;
  parent $zhangzui $modegrp;
  select -r $jaw_root;
  select -add $jaw_bn;
  select -add $zhangzui;
  skinCluster; 
    
    
  
  
  select -r $mode;
  duplicate -rr -n $zhengti;
  parent $zhengti $modegrp;
  select -r $jaw_root;
  select -add $jaw_zhengti;
  select -add $zhengti;
  skinCluster; 
  
  
  select -r $mode;
  duplicate -rr -n $fanxiang;
  parent $fanxiang $modegrp;
  select -r $jaw_root;
  select -add $jaw_bn;
  select -add $fanxiang;
  skinCluster; 
  
  select -r $mode;
  duplicate -rr -n$zhangzui_A ;
  parent $zhangzui_A $modegrp;
  select -r $jaw_root;
  select -add $jaw_bn;
  select -add $zhangzui_A;
  skinCluster; 
  setAttr ($zhangzui_A+".visibility") 0;
  
  select -r $zhangzui;
  select -add $zhengti;
  select -add $fanxiang;
  select -add $mode;
  string$bss[]=`blendShape`;
  rename $bss[0] "base_bs";
  
  setAttr ("base_bs."+$zhangzui) 1;
  setAttr ("base_bs."+$zhengti) 1;
  setAttr ("base_bs."+$fanxiang) 1;
  zxb_ADD_shuxing_string_proc($xiaba_head_con,"base_bs_shuxing");
  
  string$lailian="";
  $lailian+=$zhangzui_A+" "+$fanxiang+" ";
  zxb_ADD_shuxing_string_proc($xiaba_head_con,"base_bs_lalian");
  setAttr -type "string" ($xiaba_head_con+".base_bs_lalian") $lailian;
   
  string$base_bs_shuxing="";
  $base_bs_shuxing+="base_bs";
  setAttr -type "string"($xiaba_head_con+".base_bs_shuxing") $base_bs_shuxing;
  
  string$base_bs_string_shuzu[]= stringToStringArray($base_bs_string, " ");//字符串转化数组
  for ($i=0;$i<size($base_bs_string_shuzu);$i++)
      {
      string$temp=$base_bs_string_shuzu[$i];
      setAttr ($temp+".visibility") 0;
      }
  
  
  zxb_zairufangfa_vsanniu_proc("headhunhebianxing_button"); 
}



/////////////删除混合变形/////////
global proc zxb_delete_head_bs_proc()
{
   string$head_con=`textFieldGrp  -q -tx  UI_head_controller`;
   string$head_bs=`getAttr ($head_con+".base_bs_shuxing")`;
   string$head_mode=`getAttr ($head_con+".base_bs_mode")`;
   
   string$array[]= stringToStringArray($head_mode, " ");//字符串转化数组
   select -r $head_bs;
   delete $head_bs;
   select -r $array;
   delete $array;
   zxb_zairufangfa_vsanniu_proc("hedebs_button"); 
   zxb_zairufangfa_vsanniu_on_proc("headhunhebianxing_button");
}
/////////////编辑混合变形/////////
global proc zxb_edit_head_bs_proc()
{}

/////////////添加混合变形/////////
global proc zxb_ADD_head_bs_proc()
{}


///////////////////检查模型是否对称//////////////////////
global proc zxb_zairufangfa_toubu_proc(string$tempname,string$butt)
{
string $sel[]=`ls -sl`;
textFieldGrp -e -tx $sel[0] $tempname;
button -e -en 0 $butt;
int$aa=`checkBox -q  -v hede_vs`;
if($aa==0){zxb_jianchamoxing ("确定");}

}
global proc int zxb_jianchamoxing (string $okMessage)
{
global string $gMainProgressBar;
int $tempInt[];
int $numVtxs,$mirrortVtx,$i;
int $return=1;
float $mag;
float $posA[],$posB[];
string $sel[]=`ls -sl`;
string $m;

if (!size($sel))
	error "没有选择模型";

//check Transform
$tempFloat=`getAttr ($sel[0]+".t")`;
if ($tempFloat[0]!=0) $m+="TranslateX = "+$tempFloat[0]+", should be 0\n";
if ($tempFloat[1]!=0) $m+="TranslateY = "+$tempFloat[1]+", should be 0\n";
if ($tempFloat[2]!=0) $m+="TranslateZ = "+$tempFloat[2]+", should be 0\n";
$tempFloat=`getAttr ($sel[0]+".r")`;
if ($tempFloat[0]!=0) $m+="RotateX = "+$tempFloat[0]+", should be 0\n";
if ($tempFloat[1]!=0) $m+="RotateY = "+$tempFloat[1]+", should be 0\n";
if ($tempFloat[2]!=0) $m+="RotateZ = "+$tempFloat[2]+", should be 0\n";
$tempFloat=`getAttr ($sel[0]+".s")`;
if ($tempFloat[0]!=1) $m+="ScaleX = "+$tempFloat[0]+", should be 1\n";
if ($tempFloat[1]!=1) $m+="ScaleY = "+$tempFloat[1]+", should be 1\n";
if ($tempFloat[2]!=1) $m+="ScaleZ = "+$tempFloat[2]+", should be 1\n";
$tempFloat=`getAttr ($sel[0]+".rp")`;
if ($tempFloat[0]!=0) $m+="RotatePivotX = "+$tempFloat[0]+", should be 0\n";
if ($tempFloat[1]!=0) $m+="RotatePivotY = "+$tempFloat[1]+", should be 0\n";
if ($tempFloat[2]!=0) $m+="RotatePivotZ = "+$tempFloat[2]+", should be 0\n";
$tempFloat=`getAttr ($sel[0]+".sp")`;
if ($tempFloat[0]!=0) $m+="ScalePivotX = "+$tempFloat[0]+", should be 0\n";
if ($tempFloat[1]!=0) $m+="ScalePivotY = "+$tempFloat[1]+", should be 0\n";
if ($tempFloat[2]!=0) $m+="ScalePivotZ = "+$tempFloat[2]+", should be 0\n";

if ($m!="")
	$m=$m+"\上面的旋转值非默认值.\n"
			+"在构建正面朝上时会导致错误\n"
			+"建议使用冻结坐标工具,\n"
			+"在绑定之前.";
if ($m!="")
	{
	$dialog=`confirmDialog -t "确认" -m $m -b $okMessage -b "取消" -db "取消" -ds "取消"`;
	if ($dialog!=$okMessage)
		$return=0;
	return $return;
	}

//Symmetry check
if (`objExists closestSampler`) delete closestSampler;
createNode -n closestSampler closestPointOnMesh;
connectAttr -f ($sel[$i]+".outMesh") closestSampler.inMesh;
$tempInt=`polyEvaluate -v $sel[$i]`;
$numVtxs=$tempInt[0];
select -cl;
progressBar -e -st "检查顶点" -bp -ii 1 -min 0 -max $numVtxs $gMainProgressBar;
for ($i=0;$i<$numVtxs;$i++)
	{
	if (`progressBar -q -ic $gMainProgressBar`)
		{progressBar -e -ep $gMainProgressBar;break;}
	progressBar -e -s 1 $gMainProgressBar;
	$posA=`xform -q -ws -t ($sel[0]+".vtx["+$i+"]")`;
	if ($posA[0]>0.001)
		continue;
	setAttr closestSampler.inPosition ($posA[0]*-1) $posA[1] $posA[2];
	$mirrortVtx=`getAttr closestSampler.closestVertexIndex`;
	$posB=`xform -q -ws -t ($sel[0]+".vtx["+$mirrortVtx+"]")`;
	$mag=`mag <<($posA[0]-($posB[0]*-1)),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>`;
	if ($mag>0.001)
		select -add ($sel[0]+".vtx["+$i+"]") ($sel[0]+".vtx["+$mirrortVtx+"]");
	}
progressBar -e -ep $gMainProgressBar;
delete closestSampler;
refresh;
if (size(`ls -sl`))
	{
	$dialog=`confirmDialog -t "顶点" -m "选定的顶点不对称" -b $okMessage -b "取消" -db "确认" -ds "确认"`;
	if ($dialog!=$okMessage)
		$return=0;
	}
else
	print "//模型是对称的.\n";

return $return;
}



/////////////////////创建面板/
global proc zxb_head_biankuang(){
$teststring=`textFieldGrp -q -tx UI_head_mode `;
$con=`textFieldGrp -q -tx UI_head_controller `;

int$ex=`objExists $teststring`; 
if($ex==0){ error  "头部模型没有载入" ;}

int$ex=`objExists $con`; 
if($ex==0){ error  "头部控制器没有载入" ;}

string $mode_sheps[]=`listRelatives -s $teststring`;
int$ex=`objExists ($mode_sheps[0]+".outMesh")`; 
if($ex==0){ error  "载入的头部物体不是多边形网格" ;}
$gtCN=$teststring;
zxb_zairufangfa_D_proc("hedemianbankuan_button");
string $gtCname;
$gtCname=$gtCN+"_";
string$head=$gtCname;
string$qvxian= ($gtCname+"faceFrame");
int $state=`objExists  ($gtCname+"faceFrame")`;

if($state==1) error "当前名字已被使用，请用其它名字!!!";

curve -d 3 -p -6 -6 0 -p 6 -6 0 -p 6 -6 0 -p 6 -6 0 -p 6 6 0 -p 6 6 0 -p 6 6 0 -p -6 6 0 -p -6 6 0 
-p -6 6 0 -p -6 -6 0 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 8 -k 8  -n ($gtCname+"faceFrame");
setAttr ($gtCname+"faceFrame.scaleX") 0.5;
select -r ($gtCname+"faceFrame");
channelBoxCommand -freezeScale;
select -r ($gtCname+"faceFrame");
duplicate -rr -n ($gtCname+"faceFrame1");
scale 0.975 0.975 0.975;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;

pickWalk -d down;
select -add ($gtCname+"faceFrame");
parent -s -r;
delete ($gtCname+"faceFrame1");

select -r ($gtCname+"faceFrame");
addAttr -ln "FrameHnum"  -at long;

float$obx_Max[]=`getAttr ($con+".boundingBoxMax")`;////绑定box节点
float$soce=$obx_Max[0]*0.1;

//setAttr -type float3  ($qvxian+".t") $obx_Max[0] $obx_Max[1] $obx_Max[2];
string$kongzu=$qvxian+"_grp";
zxb_ADD_kongzuA_proc( $kongzu,$qvxian);
setAttr ($kongzu+".scale") $soce $soce $soce;

delete`pointConstraint $con $kongzu`;//点约束
setAttr ($kongzu+".translateX") $obx_Max[0] ;
setAttr ($kongzu+".translateZ") $obx_Max[2] ;

string$miaban="head_mianabn";
zxb_ADD_shuxing_string_proc($con,$miaban);
setAttr -type "string"($con+"."+$miaban) $kongzu;
parent  $kongzu $con;

string$Mouth_MM="Mouth_MM";
string$Mouth_M="Mouth_M";
string$Mouth_L="Mouth_L";
string$Mouth_R="Mouth_R";
string$Cheek_L="Cheek_L";
string$Cheek_R="Cheek_R";
string$Nose_L="Nose_L";
string$Nose_R="Nose_R";
string$Eye_L="Eye_L";
string$Eye_R="Eye_R";
string$Brow_L="Brow_L";
string$Brow_R="Brow_R";




string$mouth_MM="mouth_MM";
string$mouth_M="mouth_M";
string$mouth_L="mouth_L";
string$mouth_R="mouth_R";
string$nose_L="nose_L";
string$nose_R="nose_R";
string$cheek_L="cheek_L";
string$cheek_R="cheek_R";
string$eye_L="eye_L";
string$eye_R="eye_R";
string$brow_L="brow_L";
string$brow_R="brow_R";



string$mianban_mouth_MM=$head+$mouth_MM;
string$mianban_mouth_M=$head+$mouth_M;
string$mianban_mouth_R=$head+$mouth_R;
string$mianban_mouth_L=$head+$mouth_L;
string$mianban_cheek_L=$head+$cheek_L;
string$mianban_cheek_R=$head+$cheek_R;
string$mianban_eye_L=$head+$eye_L;
string$mianban_eye_R=$head+$eye_R;
string$mianban_eye_LUp=$head+$eye_L+"Up";
string$mianban_eye_LDown=$head+$eye_L+"Down";
string$mianban_eye_RUp=$head+$eye_R+"Up";
string$mianban_eye_RDown=$head+$eye_R+"Down";
string$mianban_brow_L=$head+$brow_L;
string$mianban_brow_R=$head+$brow_R;

string$mianban_nose_L=$head+$nose_L;
string$mianban_nose_R=$head+$nose_R;
string$shuzu="";
$shuzu+=$mianban_mouth_MM+" "+$mianban_mouth_M+" "+$mianban_mouth_R+" "+$mianban_mouth_L+" "+$mianban_nose_L+" "+$mianban_nose_R+" "+$mianban_cheek_L+" "+$mianban_cheek_R+" "+$mianban_eye_L+" "+$mianban_eye_R+" "+$mianban_brow_L+" "+$mianban_brow_R+" "+$mianban_eye_LUp+" "+$mianban_eye_LDown+" "+$mianban_eye_RUp+" "+$mianban_eye_RDown+" ";
string$allcon="Head_allcon";
zxb_ADD_shuxing_string_proc($con,$allcon);
setAttr -type "string" ($con+"."+$allcon) $shuzu;

string$mianban_Mouth_MM=$head+$Mouth_MM;
zxb_chuangjananniu_proc(1,$mouth_MM,0,$Mouth_MM);
setAttr -type float3($mianban_Mouth_MM+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Mouth_MM+".translateY") -3;
setAttr ($mianban_Mouth_MM+".translateX") -1.5;

string$mianban_Mouth_M=$head+$Mouth_M;
zxb_chuangjananniu_proc(1,$mouth_M,0,$Mouth_M);
setAttr -type float3($mianban_Mouth_M+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Mouth_M+".translateY") -3;
setAttr ($mianban_Mouth_M+".translateX") 1.5;


string$mianban_Mouth_R=$head+$Mouth_R;
zxb_chuangjananniu_proc(1,$mouth_R,0,$Mouth_R);
setAttr -type float3($mianban_Mouth_R+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Mouth_R+".translateY") -5;
setAttr ($mianban_Mouth_R+".translateX") -1.5;

string$mianban_Mouth_L=$head+$Mouth_L;
zxb_chuangjananniu_proc(1,$mouth_L,0,$Mouth_L);
setAttr -type float3($mianban_Mouth_L+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Mouth_L+".translateY") -5;
setAttr ($mianban_Mouth_L+".translateX") 1.5;



string$mianban_Nose_L=$head+$Nose_L;
zxb_chuangjananniu_proc(1,$nose_L,0,$Nose_L);
setAttr -type float3($mianban_Nose_L+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Nose_L+".translateX") -1.5;
setAttr ($mianban_Nose_L+".translateY") -1;


string$mianban_Nose_R=$head+$Nose_R;
zxb_chuangjananniu_proc(1,$nose_R,0,$Nose_R);
setAttr -type float3($mianban_Nose_R+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Nose_R+".translateX") 1.5;
setAttr ($mianban_Nose_R+".translateY") -1;


string$mianban_Cheek_L=$head+$Cheek_L;
zxb_chuangjananniu_proc(1,$cheek_L,0,$Cheek_L);
setAttr -type float3($mianban_Cheek_L+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Cheek_L+".translateY") 1;
setAttr ($mianban_Cheek_L+".translateX") 1.5;

string$mianban_Cheek_R=$head+$Cheek_R;
zxb_chuangjananniu_proc(1,$cheek_R,0,$Cheek_R);
setAttr -type float3($mianban_Cheek_R+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Cheek_R+".translateX") -1.5;
setAttr ($mianban_Cheek_R+".translateY") 1;

string$mianban_Eye_L=$head+$Eye_L;
zxb_chuangjananniu_proc(4,$eye_L,0,$Eye_L);
setAttr -type float3($mianban_Eye_L+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Eye_L+".translateY") 3;
setAttr ($mianban_Eye_L+".translateX") -1.5;


string$mianban_Eye_R=$head+$Eye_R;
zxb_chuangjananniu_proc(4,$eye_R,0,$Eye_R);
setAttr -type float3($mianban_Eye_R+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Eye_R+".translateY") 3;
setAttr ($mianban_Eye_R+".translateX") 1.5;


string$mianban_Brow_L=$head+$Brow_L;
zxb_chuangjananniu_proc(1,$brow_L,0,$Brow_L);
setAttr -type float3($mianban_Brow_L+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Brow_L+".translateY") 5;
setAttr ($mianban_Brow_L+".translateX")1.5;


string$mianban_Brow_R=$head+$Brow_R;
zxb_chuangjananniu_proc(1,$brow_R,0,$Brow_R);
setAttr -type float3($mianban_Brow_R+".scale") 0.5 0.5 0.5;
setAttr ($mianban_Brow_R+".translateY") 5;
setAttr ($mianban_Brow_R+".translateX") -1.5;



zxb_zairufangfa_vsanniu_proc("hedemianbankuan_delete_button");
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_wancheng_button");
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_bianji_button");
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_Add_button");
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_Add_delete_button");

}
///////////删除面板/////////////

global proc zxb_head_chongxing()
{
  string $head_qvxian=`textFieldGrp -q -tx UI_head_controller `;
  zxb_zairufangfa_vsanniu_proc("hedemianbankuan_button");
  string$mianban=`getAttr ($head_qvxian+".head_mianabn")`;
  delete $mianban;
  zxb_zairufangfa_vsanniu_proc("hedemianbankuan_button");
  zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_delete_button");
  zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_wancheng_button");
  zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_bianji_button");
  zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_Add_button");
  zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_Add_delete_button");
}



///////////////按钮////////////////////
global proc zxb_chuangjananniu_proc(int$xinghzuang,string $xiaba,int$fangxiang,string$mingzi)
{
    //int$xinghzuang=2;string $xiaba="xiaba";$fangxiang=0;
    
$teststring=`textFieldGrp -q -tx UI_head_mode `;
$gtCN=$teststring;

string $gtCname;
$gtCname=$gtCN+"_";
int $selec=$xinghzuang;
float $minH=-1;
float $maxH=1;
float $minV=-1;
float $maxV=1;
string $name=$xiaba;
int $fnm=`getAttr ($gtCname+"faceFrame.FrameHnum")`;
setAttr ($gtCname+"faceFrame.FrameHnum") ($fnm+1);

if($selec==1){
int $vv=$fangxiang;
//////////////////////////////
curve -d 3 -p -1 1 0 -p 1 1 0 -p 1 1 0 -p 1 1 0 -p 1 -1 0 -p 1 -1 0 -p 1 -1 0 -p -1 -1 0 -p -1 -1 0 
-p -1 -1 0 -p -1 1 0 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 8 -k 8 -n ($gtCname+$mingzi);

select -r ($gtCname+$mingzi);

duplicate -rr -n ($gtCname+$mingzi+"_temp");
scale 1.1 1.1 1.1;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;
pickWalk -d down;

select -add ($gtCname+$mingzi);
parent -s -r;
delete ($gtCname+$mingzi+"_temp");

select -r ($gtCname+$mingzi);
scale 1.2 1.2 1.2;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;

if($vv==1)
{
setAttr ($gtCname+$mingzi+".rz") 45;
select -r ($gtCname+$mingzi+".cv[0:*]");
rotate -r 0 0 -45;
}

circle -ch 0 -o on -r 0.15 -n ($gtCname+$name);
string $b[]=`ls -sl`;

setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");

select -add ($gtCname+$mingzi);
parent;
string $tempN[]=`ls -sl`;
transformLimits -tx $minH $maxH -etx 1 1 ($tempN[0]);
transformLimits -ty $minV $maxV -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);

textCurves -ch 0 -f "Times New Roman|h-13|w400|c0" -t $name;
string $sel[]=`ls -sl`;
rename $sel[0] ($gtCname+$name+"temp");
string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;

for($i=0;$i<size($childs);$i++)
{
  string $c[]=`listRelatives -fullPath -c ($childs[$i])`;
  for($j=0;$j<size($c);$j++)
  {
  select -r ($c[$j]);
  select -add ($gtCname+$name+"temp");
  parent;
  }
delete ($childs[$i]);
}

string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;
select -r $childs[0];
rename $name;
string $currentN[]=`ls -sl`;

for($i=1;$i<size($childs);$i++)
   {
  select -r ($childs[$i]);
  makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;
  pickWalk -d down;
  select -add $currentN[0];
  parent -s -r;
  delete ($childs[$i]);
}


select -r $currentN[0];
CenterPivot;
scale 0.75 0.75 0.75;
spaceLocator -p 0 0 0 -n ($name+"temp");
move 0 -1.5 0 ;
select -add $currentN[0];
delete `pointConstraint`;
delete ($name+"temp");
select -r $currentN[0];

group -n ($xiaba+"faceConName");
CenterPivot;
select -add ($gtCname+$mingzi);
parent;
delete ($gtCname+$name+"temp");


select -r ($gtCname+$mingzi);
select -add ($gtCname+"faceFrame") ;
parent;
setAttr ($gtCname+$mingzi+".tx") 0;
setAttr ($gtCname+$mingzi+".ty") 0;
setAttr ($gtCname+$mingzi+".tz") 0;
setAttr ($gtCname+$mingzi+".sx") 1;
setAttr ($gtCname+$mingzi+".sy") 1;
setAttr ($gtCname+$mingzi+".sz") 1;

}
/////////////////////////////////////////////////
if($selec==2){
curve -d 3 -p -1 1 0 -p 1 1 0 -p 1 1 0 -p 1 1 0 -p 1 0 0 -p 1 0 0 -p 1 0 0 -p -1 0 0 -p -1 0 0 -p -1 0 0 -p -1 1 0 
-k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 8 -k 8 -n ($gtCname+$mingzi);

select -r ($gtCname+$mingzi);
CenterPivot;
setAttr ($gtCname+$mingzi+".scaleY") 0.15;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;

duplicate -rr -n ($gtCname+$mingzi+"_temp");
scale 1.1 2 1.1;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;
pickWalk -d down;

select -add ($gtCname+$mingzi);
parent -s -r;
delete ($gtCname+$mingzi+"_temp");

circle -ch 0 -o on -r 0.24 -n ($gtCname+$name);
move 0 0.5 0;
makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;

string $b[]=`ls -sl`;


select -r ($b[0]+".cv[1]") ($b[0]+".cv[5]") ;
select -tgl ($b[0]+".cv[3]") ($b[0]+".cv[7]") ;
scale  0.6 0.6 0.6 ;
select -r ($b[0]+".cv[0:7]");
scale 1 1.3 1;

setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");
setAttr -lock true ($b[0]+".ty");
select -r $b;
select -add ($gtCname+$mingzi);
parent;


string $tempN[]=`ls -sl`;
transformLimits -tx $minH $maxH -etx 1 1 ($tempN[0]);
transformLimits -ty 0 0 -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);

textCurves -ch 0 -f "Times New Roman|h-13|w400|c0" -t $name;
string $sel[]=`ls -sl`;
rename $sel[0] ($gtCname+$name+"temp");
string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;

for($i=0;$i<size($childs);$i++)
{
string $c[]=`listRelatives -fullPath -c ($childs[$i])`;
for($j=0;$j<size($c);$j++)
{
select -r ($c[$j]);
select -add ($gtCname+$name+"temp");
parent;
}
delete ($childs[$i]);
}

string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;
select -r $childs[0];
rename $name;
string $currentN[]=`ls -sl`;
for($i=1;$i<size($childs);$i++)
{
select -r ($childs[$i]);
makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;
pickWalk -d down;
select -add $currentN[0];
parent -s -r;
delete ($childs[$i]);
}


select -r $currentN[0];
CenterPivot;
scale 0.75  0.75 0.75;
spaceLocator -p 0 0 0 -n ($name+"temp");
move 0 -0.05 0 ;
select -add $currentN[0];
delete `pointConstraint`;
delete ($name+"temp");
select -r $currentN[0];;
group -n ($xiaba+"faceConName");
CenterPivot;
select -add ($gtCname+$mingzi);
parent;
delete ($gtCname+$name+"temp");


select -r ($gtCname+$mingzi);
select -add ($gtCname+"faceFrame") ;
parent;
setAttr ($gtCname+$mingzi+".tx") 0;
setAttr ($gtCname+$mingzi+".ty") 0;
setAttr ($gtCname+$mingzi+".tz") 0;
setAttr ($gtCname+$mingzi+".sx") 1;
setAttr ($gtCname+$mingzi+".sy") 1;
setAttr ($gtCname+$mingzi+".sz") 1;
setAttr ($gtCname+$mingzi+".rx") 0;
setAttr ($gtCname+$mingzi+".ry") 0;
setAttr ($gtCname+$mingzi+".rz") 0;
}
///////////////////////////////////////////////////////


if($selec==3){
curve -d 3 -p 0 -1 0 -p 1 -1 0 -p 1 -1 0 -p 1 -1 0 -p 1 1 0 -p 1 1 0 -p 1 1 0 -p 0 1 0 -p 0 1 0 -p 0 1 0 -p 0 -1 0 
-k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 8 -k 8 -n ($gtCname+$mingzi);

select -r ($gtCname+$mingzi);
CenterPivot;

scale 0.15 1 1 ($gtCname+$mingzi);
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;

duplicate -rr -n ($gtCname+$mingzi+"_temp");
scale 2 1.1 1.1;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;
pickWalk -d down;

select -add ($gtCname+$mingzi);
parent -s -r;
delete ($gtCname+$mingzi+"_temp");

circle -ch 0 -o on -r 0.25 -n ($gtCname+$name);
move 0.5 0 0;
makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;
string $b[]=`ls -sl`;
select -r ($b[0]+".cv[1]") ($b[0]+".cv[5]") ;
select -tgl ($b[0]+".cv[3]") ($b[0]+".cv[7]") ;
scale  0.6 0.6 0.6 ;
select -r ($b[0]+".cv[0:7]");
scale 1.3 1 1;

setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");
setAttr -lock true ($b[0]+".tx");

select -r $b;
select -add ($gtCname+$mingzi);
parent;


string $tempN[]=`ls -sl`;
transformLimits -tx 0 0 -etx 1 1 ($tempN[0]);
transformLimits -ty $minV $maxV -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);

textCurves -ch 0 -f "Times New Roman|h-13|w400|c0" -t $name;
string $sel[]=`ls -sl`;
rename $sel[0] ($gtCname+$name+"temp");
string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;

for($i=0;$i<size($childs);$i++){
string $c[]=`listRelatives -fullPath -c ($childs[$i])`;
for($j=0;$j<size($c);$j++){
select -r ($c[$j]);
select -add ($gtCname+$name+"temp");
parent;
}
delete ($childs[$i]);
}

string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;
select -r $childs[0];
rename $name;
string $currentN[]=`ls -sl`;
for($i=1;$i<size($childs);$i++){
select -r ($childs[$i]);
makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;
pickWalk -d down;
select -add $currentN[0];
parent -s -r;
delete ($childs[$i]);
}


select -r $currentN[0];
CenterPivot;
scale 0.75 0.75 0.75;
spaceLocator -p 0 0 0 -n ($name+"temp");
move 0.5 -1.5 0 ;
select -add $currentN[0];
delete `pointConstraint`;
delete ($name+"temp");
select -r $currentN[0];;
group -n ($xiaba+"faceConName");
CenterPivot;
select -add ($gtCname+$mingzi);
parent;
delete ($gtCname+$name+"temp");




select -r ($gtCname+$mingzi);
select -add ($gtCname+"faceFrame") ;
parent;
setAttr ($gtCname+$mingzi+".tx") 0;
setAttr ($gtCname+$mingzi+".ty") 0;
setAttr ($gtCname+$mingzi+".tz") 0;
setAttr ($gtCname+$mingzi+".sx") 1;
setAttr ($gtCname+$mingzi+".sy") 1;
setAttr ($gtCname+$mingzi+".sz") 1;
setAttr ($gtCname+$mingzi+".rx") 0;
setAttr ($gtCname+$mingzi+".ry") 0;
setAttr ($gtCname+$mingzi+".rz") 0;
}

//////////////////////////////////////////////


if($selec==4){
curve -d 3 -p -1 1 0 -p 1 1 0 -p 1 1 0 -p 1 1 0 -p 1 -1 0 -p 1 -1 0 -p 1 -1 0 -p -1 -1 0 -p -1 -1 0 
-p -1 -1 0 -p -1 1 0 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 8 -k 8 -n ($gtCname+$mingzi);

select -r ($gtCname+$mingzi);

duplicate -rr -n ($gtCname+$mingzi+"_temp");
scale 1.1 1.1 1.1;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;
pickWalk -d down;

select -add ($gtCname+$mingzi);
parent -s -r;
delete ($gtCname+$mingzi+"_temp");

select -r ($gtCname+$mingzi);
scale 1.2 1.2 1.2;
makeIdentity -apply true -t 0 -r 1 -s 1 -n 0;


circle -ch 0 -o on -r 0.35 -n ($gtCname+$name);
string $b[]=`ls -sl`;
scale 1 0.75 1 $b[0];

setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");
select -r $b;
select -add ($gtCname+$mingzi);
parent;
string $tempN[]=`ls -sl`;
transformLimits -tx -1 1 -etx 1 1 ($tempN[0]);
transformLimits -ty -.5 .5 -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);
///////////////
circle -ch 0 -o on -r 0.35 -n ($gtCname+$name+"Up");
string $b[]=`ls -sl`;
move 0 0.5 0 $b[0];
select -r $b;
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;


select -r ($b[0]+".cv[5]") ;
move -r 0 0.225 0 ;
select -r ($b[0]+".cv[4:6]") ;
move -r 0 0.225 0 ;


setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");
select -r ($b);
select -add ($gtCname+$mingzi);
parent;
string $tempN[]=`ls -sl`;

transformLimits -tx -1 1 -etx 1 1 ($tempN[0]);
transformLimits -ty -.5 .5 -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);

///////////////////////////

circle -ch 0 -o on -r 0.35 -n ($gtCname+$name+"Down");
string $b[]=`ls -sl`;
move 0 -0.5 0 $b[0];
select -r ($b);
makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;

select -r ($b[0]+".cv[1]") ;
move -r 0 -0.225 0 ;
select -r ($b[0]+".cv[0:2]") ;
move -r 0 -0.225 0 ;

setAttr -lock true ($b[0]+".rx");
setAttr -lock true ($b[0]+".ry");
setAttr -lock true ($b[0]+".rz");
setAttr -lock true ($b[0]+".sx");
setAttr -lock true ($b[0]+".sy");
setAttr -lock true ($b[0]+".sz");
setAttr -lock true ($b[0]+".v");
setAttr -lock true ($b[0]+".tz");
select -r ($b);
select -add ($gtCname+$mingzi);
parent;
string $tempN[]=`ls -sl`;

transformLimits -tx -1 1 -etx 1 1 ($tempN[0]);
transformLimits -ty -.5 .5 -ety 1 1 ($tempN[0]);
transformLimits -tz 0 0  -etz 1 1 ($tempN[0]);
//////////////////////////////////////////

textCurves -ch 0 -f "Times New Roman|h-13|w400|c0" -t $name;
string $sel[]=`ls -sl`;
rename $sel[0] ($gtCname+$name+"temp");
string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;

for($i=0;$i<size($childs);$i++){
string $c[]=`listRelatives -fullPath -c ($childs[$i])`;
for($j=0;$j<size($c);$j++){
select -r ($c[$j]);
select -add ($gtCname+$name+"temp");
parent;
}
delete ($childs[$i]);
}

string $childs[]=`listRelatives -fullPath -c  ($gtCname+$name+"temp")`;
select -r $childs[0];
rename $name;
string $currentN[]=`ls -sl`;
for($i=1;$i<size($childs);$i++){
select -r ($childs[$i]);
makeIdentity -apply true -t 1 -r 1 -s 0 -n 0;
pickWalk -d down;
select -add $currentN[0];
parent -s -r;
delete ($childs[$i]);
}

select -r $currentN[0];
CenterPivot;
scale 0.75  0.75  0.75 ;
spaceLocator -p 0 0 0 -n ($name+"temp");
move 0 -1.5 0 ;
select -add $currentN[0];
delete `pointConstraint`;
delete ($name+"temp");
select -r $currentN[0];;
group -n ($xiaba+"faceConName");
CenterPivot;
select -add ($gtCname+$mingzi);
parent;
delete ($gtCname+$name+"temp");

select -r ($gtCname+$mingzi);
select -add ($gtCname+"faceFrame") ;
parent;
setAttr ($gtCname+$mingzi+".tx") 0;
setAttr ($gtCname+$mingzi+".ty") 0;
setAttr ($gtCname+$mingzi+".tz") 0;
setAttr ($gtCname+$mingzi+".sx") 1;
setAttr ($gtCname+$mingzi+".sy") 1;
setAttr ($gtCname+$mingzi+".sz") 1;
    }
}


 
 
 
 
 
 
//////////////完成表情控制面板////////////////////////////
global proc zxb_mianbanwancheng_proc(){
$teststring=`textFieldGrp -q -tx UI_head_mode `;

$gtCN=$teststring;

string $gtCname;
$gtCname=$gtCN+"_";
string $shape[]=`listRelatives  -s ($gtCname+"faceFrame")`;

for($j=0;$j<size($shape);$j++){
setAttr ($shape[$j]+".overrideEnabled") 1;
setAttr ($shape[$j]+".overrideColor") 22;
}

string $frameH[]=`listRelatives  -c -type "transform" ($gtCname+"faceFrame")`;
for($i=0;$i<size($frameH);$i++)
{

string $shape[]=`listRelatives  -c -s ($frameH[$i])`;
for($j=0;$j<size($shape);$j++)
 {
setAttr ($shape[$j]+".overrideEnabled") 1;
setAttr ($shape[$j]+".overrideDisplayType") 1;
  }

string $childs[]=`listRelatives -fullPath -c -type "transform" ($frameH[$i])`;
int $size=size($childs);

setAttr ($childs[($size-1)]+".overrideEnabled") 1;
setAttr ($childs[($size-1)]+".overrideDisplayType") 1;

for($j=0;$j<size($childs)-1;$j++)
     {
setAttr ($childs[$j]+".overrideEnabled") 1;
setAttr ($childs[$j]+".overrideColor") 22;
        }
    } 
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_bianji_button");   
zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_wancheng_button");   

zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_Add_button");
zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_Add_delete_button");
      
}

//////////////编辑面板//////////////////
global proc zxb_mianbanbianji_proc(){
$teststring=`textFieldGrp -q -tx UI_head_mode `;
$gtCN=$teststring;

string $gtCname;
$gtCname=$gtCN+"_";

string $frameH[]=`listRelatives -fullPath -c -type "transform"  ($gtCname+"faceFrame")`;
for($i=0;$i<size($frameH);$i++){

string $shape[]=`listRelatives -fullPath -c -s ($frameH[$i])`;
for($j=0;$j<size($shape);$j++){
setAttr ($shape[$j]+".overrideEnabled") 0;
setAttr ($shape[$j]+".overrideDisplayType") 0;
}

string $childs[]=`listRelatives -fullPath -c -type "transform"  ($frameH[$i])`;
int $size=size($childs);

setAttr ($childs[($size-1)]+".overrideEnabled") 0;
setAttr ($childs[($size-1)]+".overrideDisplayType") 0;

    }
    
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_wancheng_button"); 
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_Add_button");
zxb_zairufangfa_vsanniu_proc("hedemianbankuan_Add_delete_button");
zxb_zairufangfa_vsanniu_on_proc("hedemianbankuan_bianji_button");
}


//////////添加控制器面板////////////////////
global proc zxb_mianban_Addmianban_proc()
{
if(`window -ex zxb_ADD_mianbucon`) deleteUI  zxb_ADD_mianbucon;
window -wh 420 200 -t "添加控制器" zxb_ADD_mianbucon;
columnLayout -adjustableColumn 0; 
checkBox -l "默认方框 选中长条" -value 0 zxb_add_changtiao;
textFieldGrp  -cw2 100 130 -l "外控制器名字前缀大写"    W_con_name;
textFieldGrp  -cw2 100 130 -l "内控制器名字前缀小写"    N_con_name;
button -l  "添加控制器"  -c "zxb_mianban_Add_proc";
showWindow  ;
}


global proc zxb_mianban_Add_proc()
{
    int$aa=`checkBox -q -v zxb_add_changtiao`;
    string$teststring=`textFieldGrp -q -tx UI_head_mode `;
    string$con=`textFieldGrp -q -tx  UI_head_controller`;
    string$W_Neme=`textFieldGrp -q -tx W_con_name `;
    string$N_Neme=`textFieldGrp -q -tx N_con_name `;
    $head=$teststring+"_";
    int$bb=1;
    if($aa==0){$bb=1;}
    if($aa==1){$bb=2;}
    zxb_chuangjananniu_proc($bb,$N_Neme,0,$W_Neme);
    
    
    string$add_head_allcon="add_head_allcon";
    zxb_ADD_shuxing_string_proc($con,$add_head_allcon);
    string$conshuzu=`getAttr ($con+".add_head_allcon")`; 
    string$array_B[] = stringToStringArray($conshuzu, " ");//字符串转化数组
    int$ex=`objExists $array_B[0]`;
    string$addmingzi="";
    if($ex==1)
       {
         for ($i=0;$i<size($array_B);$i++)
              {
               string$temp_mingzxi=$array_B[$i];
               $addmingzi+=$temp_mingzxi+" "+$N_Neme+" ";
               //int$a=size($array_B)-1;
               
               }
       }else
             {
              string$n_neme=$N_Neme+" ";
             setAttr -type "string" ($con+".add_head_allcon") $n_neme  ;
    
             }
       
   if($ex==1){ setAttr -type "string" ($con+".add_head_allcon")  $addmingzi ;}
    
    /*string$dede=$head+$N_Neme;
    string$temp=`getAttr ($con+".Head_allcon")`;
    $temp+=$temp+$dede+" ";
    setAttr -type "string" ($con+".Head_allcon") $temp;*/
}



global proc zxb_mianban_Add_delete_proc()
{
    string$bianliang[]=`ls -sl`;
    string$con=`textFieldGrp -q -tx  UI_head_controller`;
    string$temp=`getAttr ($con+".Head_allcon")`;
    string$array[] = stringToStringArray($temp, " ");//字符串转化数组
    int$ex=`objExists $bianliang[0]`; 
    if($ex==0){ error "请选择表情控制框";}

   string $andbn[]=`listRelatives -c -fullPath  -type "transform" $bianliang[0]`;
   string $rrrrr[]=`listRelatives -c  -type "transform" $bianliang[0]`;
   string$mingzi="";
   for($j=0;$j<size($andbn);$j++)
   {
       string $tempss[]=`listRelatives -s   $andbn[$j]`;
       int$ex=`objExists $tempss[0]`;    ///判断
      if($ex==1){$mingzi=$rrrrr[$j];}
   }
   
 
    print $mingzi;
    string$all_name="";
    
    
   for ($y=0;$y<size($array);$y++)
        {
        string$name=$array[$y];
        if($name==$mingzi)
          {
              //$all_name+=$name+" ";
          $all_name=$name;
          }
        }

   //setAttr -type "string" ($con+".Head_allcon") $all_name ;
    print $all_name;
    int$ex=`objExists $all_name`; 
    if($ex==1){ error "选中的控制器是默认控制器";}else{ delete $bianliang[0];}
  
}




//////////////////////////////////////////
global proc zxb_open_reverse_proc()
{
 
   string$FKJaw_M_kongzhiqi=`textFieldGrp -q -tx UI_jaw_controller `;
    string$toubu=`textFieldGrp -q -tx UI_head_controller `;
   string$hean_mode=` getAttr ($toubu+".base_bs_mode")`;
   string $array[]= stringToStringArray($hean_mode, " ");//字符串转化数组
   
   string$hean_bs=` getAttr ($toubu+".base_bs_shuxing")`;
     
   string$open_reverse="open_reverse";
   select -r $FKJaw_M_kongzhiqi;
   zxb_ADD_shuxing_double_A_proc($FKJaw_M_kongzhiqi,$open_reverse);
   string$jiedian=($FKJaw_M_kongzhiqi+"_setRange");
   zxb_ADD_jiedian_proc($jiedian,"setRange");
   
   connectAttr -f ($FKJaw_M_kongzhiqi+".open_reverse") ($jiedian+".valueX");
   setAttr ($jiedian+".oldMaxX") 10;
   setAttr ($jiedian+".maxX") 1;
   
   string$erverse_jiedian=($FKJaw_M_kongzhiqi+"_erverse");
   
   zxb_ADD_jiedian_proc($erverse_jiedian,"reverse");
   
   connectAttr -f  ($jiedian+".outValueX") ($erverse_jiedian+".inputX");
   connectAttr -f ($erverse_jiedian+".outputX") ($hean_bs+"."+$array[0]);
   connectAttr -f ($jiedian+".outValueX") ($hean_bs+"."+$array[2]);
   button -e -en 0 hede_open_reverse_button;
   
}
/////////////////////////////////自动创建拉链嘴巴/////////////////////////////////////////////
global proc zxb_zuibalalian_all_proc() 
{
    string$Controller=`textFieldGrp -q -tx UI_head_controller `;//头部控制器
    string$lalian_modess=` getAttr ($Controller+".base_bs_lalian ")`;
    string $lalian_modes[]= stringToStringArray($lalian_modess, " ");//反向嘴巴模型
    string$qvxian_insidess=`textFieldGrp -q -tx  UI_mouth_inside_wire`;//
    string $qvxian_inside[]= stringToStringArray($qvxian_insidess, " ");//反向嘴巴模型
    
   string$repeated=$lalian_modes[1];
   textFieldGrp -e -tx  $lalian_modes[1] zxb_zairumode ;//载入反向模型
   button -e -en 0 lalian_button_fanxiang;
   
   
   select -r $qvxian_inside;
   string$open_qvxian_s=zxb_xuanzebutongmoxing_jiluxuanzhededian(0 , $lalian_modes[0]);
   textFieldGrp -e -tx  $open_qvxian_s UI_mouth_temp_wire ;//曲线
   button -e -en 0  lalian_button_zairuxian;
   
   string$aaaa=`zxb_zuiba_tiqv_lalian_open_proc`;
   string$bbbb=`zxb_zuiba_tiqv_lalian_close_proc`;
   string$cccc=`zxb_zuiba_tiqv_lalian_follow_proc`;
   
    string$temp_op=`textFieldGrp -q -tx  UI_mouth_zipper_wire_open_A`;
    string$temp_close=`textFieldGrp -q -tx  UI_mouth_zipper_wire_close_B`;
    string$temp_op_close=$temp_op+$temp_close;
    textFieldGrp -e -tx  $temp_op_close UI_mouth_zipper_wire_close_open ;//曲线
    button -e -en 0  UI_mouth_zipper_wire_close_open_button;
    button -e -en 0 zidong_button;
    
    
    zxb_dingweiqi_kongzhiqvxian;
    zxb_dingweiqi_gensuiqvxian;
    zxb_global_bolangzui;
    
    button -e -en 0 UI_mouth_zipper_follow_DD_button;
    button -e -en 0 UI_mouth_zipper_open_AABB_button;
    button -e -en 0  UI_mouth_zipper_Create_button;
    string$temp_qvxians=$aaaa+$bbbb+$cccc;
    string $all_qvxians[]= stringToStringArray($temp_qvxians, " ");//反向嘴巴模型
    string$Face_zipper_Group="Face_zipper_Group";
    zxb_ADD_kongzu_proc($Face_zipper_Group);
    parent $Face_zipper_Group "Face_Group";
    for ($i=0;$i<size($all_qvxians);$i++)
        { 
        string$qvxian=$all_qvxians[$i];
        parent $qvxian $Face_zipper_Group;
        }
   
}







///////////////////////////提取上下曲线方法////////////////////////////////////////////////////
global proc string zxb_zuiba_tiqvqvxianfangfa_proc(int$a,string$mingzi,string$qianzui,string$xian_A)
{
//int$a=1;
//string$mingzi="open";
//string$xian_Ass[]= stringToStringArray($xian_A, " ");//字符串转化数组
string$xian=$xian_A;
//string$modess=`textFieldGrp -q -tx  zxb_zairumode`;
//string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
 // string$Aqvxians[];
 // clear $Aqvxians;
 // int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$qianzui;


string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;//提取曲线名字


string$temp_qvxian[];
clear $temp_qvxian;
int $nemt=`tokenize $bianliang[0]"."  $temp_qvxian`;//分离字符串存到变量
string$moxing=$temp_qvxian[0];

select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;


      string$R_cv="";
      string$L_cv="";
     string$vtxs[]=$dingdian;
     float$dd=-100000000000000;
     float$xx=1000000000000000;
     string$dian_L="";
     string$dian_R="";
     for ($i=0;$i<size($vtxs);$i++)
          {
           string$vtx=$vtxs[$i];
           float$bn_pos[]=`xform -q -ws -t $vtx`;
           if($bn_pos[0]>$dd)
             {
             $dd=$bn_pos[0];
             $dian_L=$vtx;
             }
             if($bn_pos[0]<$xx)
             {
             $xx=$bn_pos[0];
             $dian_R=$vtx;
             }
             
           }
           
            $L_cv=$dian_L;   
     $R_cv=$dian_R;
 float $R_POS[]=`xform -q -ws -t $R_cv`; 
 string$qvxian_mingzi=$Axianxian+"_temp_curve";
  select -r $qvxianss;
  polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_mingzi;
 DeleteHistory;
 float$pamte=zxb_return_curve_U($R_POS[0],$R_POS[1],$R_POS[2],$qvxian_mingzi);
 select -r ($qvxian_mingzi+".u["+$pamte+"]") ;
float $tempp_POS[]=`xform -q -ws -t $dingdian[0]`; 
int$jisuan=size($dingdian)-1;
float $tempp_POS_A[]=`xform -q -ws -t $dingdian[$jisuan]`; 
float $R_POaS=$R_POS[0]+$R_POS[1]+$R_POS[2];
float $R_PObS=$tempp_POS[0]+$tempp_POS[1]+$tempp_POS[2];
if($R_POaS!=$R_PObS)
  {
    moveNurbsCurveSeam;
   }
 select -r ($qvxian_mingzi+".cv[0:999999999]");
 
 string $qvxian_A[]=`ls -sl -fl`;
 
 
string$dianLL="";
 //string$temp_cv=$dingdian[$i];
float $cv_pos[]=`xform -q -ws -t $L_cv`;
float$maga=1000000000000;
     
for($iii=0;$iii<size($qvxian_A);$iii++)
   { 
     string$mag_cv=$qvxian_A[$iii];
     float $mag_po[]=`xform -q -ws -t $mag_cv`;
     float $weizhi=mag(<<$cv_pos[0],$cv_pos[1],$cv_pos[2]>>-<< $mag_po[0] ,$mag_po[1] ,$mag_po[2]>>);////////计算距离
     if($weizhi<$maga){$maga=$weizhi;$dianLL=$mag_cv;}
     } 
    
//print $dianLL;
  string$ccv[];
  clear $ccv;
  int $nemt=`tokenize $dianLL"[" $ccv`;//分离字符串存到变量
   int $nemt=`tokenize $ccv[1]"]" $ccv`;//分离字符串存到变量
  string$shu=$ccv[0];
 
 
 int$qvxiancv_size=size($qvxian_A);
int$temp_a=$shu;

float$exa=0;
float$exb=0;


if($a==0)
{
select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
$exb=`zxb_qvfengshangzi`;

select -r ($qvxian_mingzi+".cv[0:999999999]");
select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
$exa=`zxb_qvfengshangzi`;
}
if($a==1)
 {
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $exa=zxb_normal_pingjunshu($moxing);
  
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $exb=`zxb_normal_pingjunshu($moxing)`;
  }

print $exa;
print $exb;
string$up_qvxiancvs[];
clear$up_qvxiancvs;
string$dw_qvxiancvs[];
clear$dw_qvxiancvs;



if($exb>$exa)
  {
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
 $dw_qvxiancvs =`ls -sl -fl`;
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $up_qvxiancvs =`ls -sl -fl`;
  }
if($exa>$exb)
  {
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $up_qvxiancvs =`ls -sl -fl`;
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $dw_qvxiancvs=`ls -sl -fl`;
   }

   
 //select -r $dingdian ;
//string $xiangliang[]=`ls -sl -fl`;
string$UP_zuijing="";
string$DW_zuijing="";


for($o=0;$o<2;$o++)
{
    string$temp_suzu[];
    clear$temp_suzu;
   if($o==0){$temp_suzu=$up_qvxiancvs;}
   if($o==1){$temp_suzu=$dw_qvxiancvs;}
   for($i=0;$i<size($temp_suzu);$i++)
    {
     string$temp_cv=$temp_suzu[$i];
     float $cv_pos[]=`xform -q -ws -t $temp_cv`;
     float$mag=1000000000000;
     string$dian="";
     for($ii=0;$ii<size($dingdian);$ii++)
        { 
         string$mag_cv=$dingdian[$ii];
         float $mag_po[]=`xform -q -ws -t $mag_cv`;
         float $weizhi=mag(<<$cv_pos[0],$cv_pos[1],$cv_pos[2]>>-<< $mag_po[0] ,$mag_po[1] ,$mag_po[2]>>);////////计算距离
         if($weizhi<$mag){$mag=$weizhi;$dian=$mag_cv+" ";}
         } 
     if($o==0){$UP_zuijing+=$dian;}
     if($o==1){$DW_zuijing+=$dian;}  
     }
    
 }   
       string$up_zuijingdw[]= stringToStringArray($UP_zuijing, " ");//字符串转化数组
       string$dw_zuijingdw[]= stringToStringArray($DW_zuijing, " ");//字符串转化数组 
       
string$head_qvxian=$Axianxian+"_"+$mingzi+"_UP";//open  

//select -r $up_zuijingdw;
//select -r $dw_zuijingdw; 
select -r $up_zuijingdw;
select -add $R_cv;
select -add $L_cv;
ConvertSelectionToContainedEdges;
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;

string$head_qvxian_b=$Axianxian+"_"+$mingzi+"_DW";//open
select -r $dw_zuijingdw;
select -add $R_cv;
select -add $L_cv;
ConvertSelectionToContainedEdges;
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;


string$temp_mingzi="";
$temp_mingzi+=$head_qvxian+" "+$head_qvxian_b+" ";
delete $qvxian_mingzi;



string$dian_LRA=$head_qvxian+".cv[0]";
float $pos_A[]=`xform -q -ws -t$dian_LRA`;
string$dian_LRB=$head_qvxian_b+".cv[0]";
float $pos_B[]=`xform -q -ws -t $dian_LRB`;

if($pos_A[0]!=$pos_B[0]){reverseCurve -ch 1 -rpo 1 $head_qvxian;}


 return $temp_mingzi;
}



//////////////定位器控制器曲线/////////////////////

global proc  zxb_dingweiqi_kongzhiqvxian()
{
//string $bianliang[]=`ls -sl`;//选中曲线D  没有历史记录的曲线
 string $bianliang_sss=`textFieldGrp -q -tx  UI_mouth_zipper_wire_follow_D`;
string $bianliang[]= stringToStringArray($bianliang_sss, " ");//字符串转化数组
string $qianzui=`textFieldGrp -q -tx UI_mouth_zipper_prefix `;


string$curve_temp="zxb_"+$qianzui+"_curve_follow__grp";

zxb_ADD_kongzu_proc($curve_temp);
parent $curve_temp "Face_Group";
for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian_A=$bianliang[$i];
    select -r ($qvxian_A+".cv[0:999999999999]");
    string  $cvs[]=`ls -sl -fl`;
    
    int $panduan=`objExists ($qvxian_A+"_locGrp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian_A+"_locGrp");
        }
     select -cl  ;
     group -empty -n ($qvxian_A+"_locGrp");
     setAttr ($qvxian_A+"_locGrp.visibility") 0;
     setAttr -lock true ($qvxian_A+"_locGrp"+".v");
     
     parent($qvxian_A+"_locGrp") $curve_temp ;
     int $panduanA=`objExists ($qvxian_A+"_gengsui_"+"nearestPointOnCurve")`;//查询这个物体是否纯在
     if($panduanA==1){ delete ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");}
     createNode nearestPointOnCurve -n  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");//创建曲线最近点节点
     string $qvxian_shp[]=`listRelatives -s $qvxian_A`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]")  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve.inputCurve");
       
    for($j=0;$j<size($cvs);$j++) 
    {
        string  $cvdian_bianliang=$cvs[$j];
       spaceLocator -p 0 0 0 -n($qvxian_A+"_loc_A_"+$j);
       spaceLocator -p 0 0 0 -n($qvxian_A+"_loc_B_"+$j);
       parent ($qvxian_A+"_loc_B_"+$j)  ($qvxian_A+"_loc_A_"+$j);
       
       select -r ($qvxian_A+"_loc_B_"+$j);
       group -n  ($qvxian_A+"_locgrp_"+$j);
       group -n  ($qvxian_A+"_locgrp_A"+$j);
       group -n  ($qvxian_A+"_locgrp_B"+$j);
       //parent  ($qvxian_A+"_locgrp_B"+$j) ($qvxian_A+"_loc_A_"+$j);
       parent  ($qvxian_A+"_loc_A_"+$j) ($qvxian_A+"_locGrp");
       float $poslist[]= `xform -q -ws -t  $cvdian_bianliang`;
       setAttr -type float3 ($qvxian_A+"_gengsui_"+"nearestPointOnCurve"+".inPosition") $poslist[0] $poslist[1] $poslist[2];
       float $poslist_A[]=`getAttr ($qvxian_A+"_gengsui_"+"nearestPointOnCurve"+".position")`;
      xform -ws -t    $poslist_A[0] $poslist_A[1] $poslist_A[2] ($qvxian_A+"_loc_A_"+$j);//定位器1的位置
       xform -ws -t  $poslist[0] $poslist[1] $poslist[2]($qvxian_A+"_loc_B_"+$j) ;//定位器1的位置
       string $loc_shp[]=`listRelatives -s ($qvxian_A+"_loc_B_"+$j)`;
       connectAttr -f ($loc_shp[0]+".worldPosition[0]") ($qvxian_shp[0]+".controlPoints["+$j+"]");
     }
     
     delete  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");
}

 button -e -en 0 UI_mouth_zipper_follow_DD_button;//
}

////////////////////////////曲线控制器定位器//////////////////////////////////////////

global proc  zxb_dingweiqi_gensuiqvxian()
{
//string $bianliang[]=`ls -sl`;//选中另外4条曲线
string $bianliang_sss=`textFieldGrp -q -tx  UI_mouth_zipper_wire_close_open`;
string $bianliang[]= stringToStringArray($bianliang_sss, " ");//字符串转化数组
string $qianzui=`textFieldGrp -q -tx UI_mouth_zipper_prefix `;

string$qvxianzu="zxb_"+$qianzui+"_curve_open_close_grp";

zxb_ADD_kongzu_proc($qvxianzu);
parent $qvxianzu "Face_Group";
 int $panduan_A=`objExists ("temp_qvxian_nearestPointOnCurve")`;//查询这个物体是否纯在
 if($panduan_A==1){delete ("temp_qvxian_nearestPointOnCurve"); }
createNode nearestPointOnCurve -n  ("temp_qvxian_nearestPointOnCurve");//创建曲线最近点节点

for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian=$bianliang[$i]; 
     string $qvxian_shp[]=`listRelatives -s $qvxian`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ("temp_qvxian_nearestPointOnCurve.inputCurve") ;
    
 
    
     int $panduan=`objExists ($qvxian+"_B_Grp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian+"_B_Grp");
        }
    
     select -cl  ;
     group -empty -n ($qvxian+"_B_Grp");
     setAttr ($qvxian+"_B_Grp.visibility") 0;
     setAttr -lock true ($qvxian+"_B_Grp"+".v");
     parent ($qvxian+"_B_Grp") $qvxianzu; 
     
    int $panduan=`objExists ($qvxian+"_A_Grp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian+"_A_Grp");
        }
     select -cl  ;
     group -empty -n ($qvxian+"_A_Grp");
     setAttr ($qvxian+"_A_Grp.visibility") 0;
     setAttr -lock true ($qvxian+"_A_Grp"+".v");
    parent ($qvxian+"_A_Grp") $qvxianzu; 
   select -r ($qvxian+".cv[0:99999999999]");
    string $cvs[]=`ls -sl -fl`;
    
  global string $gSelect;
global string $gMainProgressBar;
setToolTo $gSelect;
progressBar -e -st ("创建定位器...") -bp -ii 1 -min 0 -max `size($cvs)` $gMainProgressBar;
    for($j=0;$j<size($cvs);$j++) 
    {
         if(`progressBar -q -ic $gMainProgressBar`)
         break;
         progressBar -e -s 1 $gMainProgressBar;
         string $cv_dian=$cvs[$j];
        spaceLocator -p 0 0 0 -n ($qvxian+"_loc_A_"+$j);
        spaceLocator -p 0 0 0 -n ($qvxian+"_loc_B_"+$j);
        parent ($qvxian+"_loc_B_"+$j) ($qvxian+"_B_Grp");
        parent ($qvxian+"_loc_A_"+$j)  ($qvxian+"_A_Grp");
        float $pos_a[]=`xform -q -ws -t $cvs[$j]`;
        setAttr  -type float3 ("temp_qvxian_nearestPointOnCurve.inPosition")  $pos_a[0] $pos_a[1] $pos_a[2];
         addAttr -ln ("canshu")  -at double   -dv 0 -k  1 ($qvxian+"_loc_A_"+$j);//添加属性
        float $canshu=`getAttr "temp_qvxian_nearestPointOnCurve.parameter"`;
        setAttr  ($qvxian+"_loc_A_"+$j+".canshu") $canshu;
        setAttr -lock true ($qvxian+"_loc_A_"+$j+".canshu");
        
         int $panduan_A=`objExists ($qvxian+"_pointOnCurveInfo_loc_"+$j)`;//查询这个物体是否纯在
         if($panduan_A==1){delete ($qvxian+"_pointOnCurveInfo_loc_"+$j); }
        createNode "pointOnCurveInfo" -n ($qvxian+"_pointOnCurveInfo_loc_"+$j);//创建曲线信息节点
        connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".inputCurve");
        connectAttr -force ($qvxian+"_loc_A_"+$j+".canshu") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".parameter");
        connectAttr -force ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position") ($qvxian+"_loc_A_"+$j+".t");
        
        float $pos_c[]=`getAttr ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position")`;
         setAttr -type float3 ($qvxian+"_loc_B_"+$j+".t") $pos_c[0] $pos_c[1] $pos_c[2];
     }
     progressBar -e -ep $gMainProgressBar;
    
}
delete ("temp_qvxian_nearestPointOnCurve");


button -e -en 0 UI_mouth_zipper_open_AABB_button;
}






///////////////////////创建拉链效果/////////////////////////
global proc zxb_global_bolangzui(){

//string $bianliang[]=`ls -sl`;//选中默认曲线

string $openA_sss=`textFieldGrp -q -tx  UI_mouth_zipper_wire_open_A`;
string $openAs[]= stringToStringArray($openA_sss, " ");//字符串转化数组

string $close_sss=`textFieldGrp -q -tx  UI_mouth_zipper_wire_close_B`;
string $close_Bs[]= stringToStringArray($close_sss, " ");//字符串转化数组

 string $follow_sss=`textFieldGrp -q -tx  UI_mouth_zipper_wire_follow_D`;
string$follow_Ds[]= stringToStringArray($follow_sss, " ");//字符串转化数组

 string $qianzui_sss=`textFieldGrp -q -tx  UI_mouth_zipper_prefix`;
 string$qianzui_a[];
  clear $qianzui_a;
  int $nemt=`tokenize $qianzui_sss" " $qianzui_a`;//分离字符串存到变量
  string$qianzui=$qianzui_a[0];

string $bianliang[]=$close_Bs;
 int $fanxiang_a=`checkBox -q  -value fanxuan`;
 int $panduan_a=`objExists ($bianliang[0]+"_curveInfo")`;
 if($panduan_a==1){delete ($bianliang[0]+"_curveInfo");}
shadingNode -asUtility curveInfo -n ($bianliang[0]+"_curveInfo");

string $qvxian_shp[]=`listRelatives -c ($bianliang[0])`;
connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($bianliang[0]+"_curveInfo.inputCurve");

 int $panduan=`objExists ($bianliang[0]+".changdu")`;
if($panduan==0){addAttr -ln "changdu"  -at double  -dv 0 -k 1($bianliang[0]);}
setAttr -lock 0  ($bianliang[0]+".changdu");
connectAttr -force  ($bianliang[0]+"_curveInfo.arcLength") ($bianliang[0]+".changdu");
setAttr -lock 1  ($bianliang[0]+".changdu");


select -r  ($bianliang[0]+".cv[0:9999999999]") ;
string $qvxian_dian[]=`ls -sl -fl`;
int $qvxian_size=size($qvxian_dian);
float $pos_A[]=`xform -q -ws -t ($bianliang[0]+".cv[0]")`;
float $pos_B[]=`xform -q -ws -t ($bianliang[0]+".cv["+($qvxian_size-1)+"]")`;
float $pos_l_panduan[]=$pos_A;
float $pos_r_panduan[]=$pos_B;
if ( $pos_r_panduan[0]>$pos_l_panduan[0])
{
     $pos_l_panduan=$pos_B;
     $pos_r_panduan=$pos_A;
}

string$zuiba_loc_L=($bianliang[0]+"LL_ZUIBA_LOC");
string$zuiba_loc_R=($bianliang[0]+"RR_ZUIBA_LOC");
spaceLocator -p 0 0 0 -n $zuiba_loc_L;
spaceLocator -p 0 0 0 -n $zuiba_loc_R;
xform  -ws -t  $pos_l_panduan[0]  $pos_l_panduan[1]  $pos_l_panduan[2] $zuiba_loc_L;
xform  -ws -t  $pos_r_panduan[0]  $pos_r_panduan[1]  $pos_r_panduan[2] $zuiba_loc_R;


 int $panduan_b=`objExists ($zuiba_loc_L+".shuaijian")`;
 float $changdu=`getAttr ($bianliang[0]+".changdu")`;
 float $changduzhi= $changdu/5.0;
if($panduan_b==0)
{
addAttr -ln "shuaijian"  -at double  -dv $changduzhi -k 1 ($zuiba_loc_L);
setAttr -keyable false -channelBox true ($zuiba_loc_L+".shuaijian");
}

move -r  ($changduzhi*1.25) 0 0 ($zuiba_loc_L) ;
move -r  ($changduzhi*-1.25) 0 0 ($zuiba_loc_R) ;
//print `size($qvxian_dian)`;
for($j=0;$j<size($bianliang);$j++)
{
 

for($i=0;$i<size($qvxian_dian);$i++)
 {
     
     string $qvxian_B=$close_Bs[$j];
     string$qvxian_A= $openAs[$j];
     string$qvxian_D=$follow_Ds[$j];
     
     string$qvxian_loc=($qvxian_B+"_loc_A_"+$i);
     string$qvxian_locA=($qvxian_A+"_loc_A_"+$i);
     string$qvxian_locD=($qvxian_D+"_loc_A_"+$i);
    
         select -r $qvxian_loc ;
         select -add $qvxian_locA ;
         select -add $qvxian_locD;
     string $dianyuesu_bianliang[]=`pointConstraint`;
     
     
      int $panduan_C=`objExists ($qvxian_B+"_plusMinusAverage_L_"+$i)`;
      if($panduan_C==1){delete ($qvxian_B+"_plusMinusAverage_L_"+$i); }
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_L_"+$i);//创建加减节点
     connectAttr -force  ($zuiba_loc_L+".tx") ($qvxian_B+"_plusMinusAverage_L_"+$i+".input1D[0]");
     connectAttr -force  ($qvxian_locA+".tx") ($qvxian_B+"_plusMinusAverage_L_"+$i+".input1D[1]");
     setAttr ($qvxian_B+"_plusMinusAverage_L_"+$i+".operation") 2;
      
      int $panduan_F=`objExists ($qvxian_B+"setRange_A_"+$i)`;
      if($panduan_F==1){delete ($qvxian_B+"setRange_A_"+$i); }
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_A_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_A_"+$i+".maxX") 1;
     connectAttr -f ($zuiba_loc_L+".shuaijian")($qvxian_B+"setRange_A_"+$i+".oldMaxX");
     connectAttr -f ($qvxian_B+"_plusMinusAverage_L_"+$i+".output1D") ($qvxian_B+"setRange_A_"+$i+".valueX");
     
      
     int $panduan_D=`objExists ($qvxian_B+"_plusMinusAverage_R_"+$i)`;
     if($panduan_D==1){delete ($qvxian_B+"_plusMinusAverage_R_"+$i); }
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_R_"+$i);//创建加减节点
     connectAttr -force  ($zuiba_loc_R+".tx") ($qvxian_B+"_plusMinusAverage_R_"+$i+".input1D[1]");//中间减→→右边 右边数值是负数
     connectAttr -force  ($qvxian_locA+".tx") ($qvxian_B+"_plusMinusAverage_R_"+$i+".input1D[0]");
     setAttr ($qvxian_B+"_plusMinusAverage_R_"+$i+".operation") 2;
     
      int $panduan_F=`objExists ($qvxian_B+"setRange_B_"+$i)`;
      if($panduan_F==1){delete ($qvxian_B+"setRange_B_"+$i); }
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_B_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_B_"+$i+".maxX") 1;
     connectAttr -f ($zuiba_loc_L+".shuaijian")($qvxian_B+"setRange_B_"+$i+".oldMaxX");
     connectAttr -f ($qvxian_B+"_plusMinusAverage_R_"+$i+".output1D") ($qvxian_B+"setRange_B_"+$i+".valueX");
     
     
     int $panduan_E=`objExists ($qvxian_B+"_plusMinusAverage_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"_plusMinusAverage_M_"+$i);}
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_M_"+$i);//创建加减节点
     setAttr ($qvxian_B+"_plusMinusAverage_M_"+$i+".operation") 2;
     setAttr ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[0]") 2;
     connectAttr -f ($qvxian_B+"setRange_A_"+$i+".outValueX")  ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[1]");
     connectAttr -f ($qvxian_B+"setRange_B_"+$i+".outValueX")  ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[2]");



     int $panduan_E=`objExists ($qvxian_B+"setRange_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"setRange_M_"+$i);}
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_M_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_M_"+$i+".maxX") 1;
     setAttr ($qvxian_B+"setRange_M_"+$i+".oldMaxX") 1;
     connectAttr -f ($qvxian_B+"_plusMinusAverage_M_"+$i+".output1D") ($qvxian_B+"setRange_M_"+$i+".valueX");
     
     
      int $panduan_E=`objExists ($qvxian_B+"reverse_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"reverse_M_"+$i);}
     shadingNode -asUtility reverse -n($qvxian_B+"reverse_M_"+$i); //创建反向节点
     connectAttr -f ($qvxian_B+"setRange_M_"+$i+".outValueX") ($qvxian_B+"reverse_M_"+$i+".inputX");
     if($fanxiang_a==1)
        {
         connectAttr -f  ($qvxian_B+"setRange_M_"+$i+".outValueX") ($dianyuesu_bianliang[0]+"."+$qvxian_loc+"W0")  ;
          connectAttr -f  ($qvxian_B+"reverse_M_"+$i+".outputX") ($dianyuesu_bianliang[0]+"."+$qvxian_locA+"W1") ;
         }
        else{
          connectAttr -f  ($qvxian_B+"reverse_M_"+$i+".outputX") ($dianyuesu_bianliang[0]+"."+$qvxian_loc+"W0")  ;
          connectAttr -f   ($qvxian_B+"setRange_M_"+$i+".outValueX")($dianyuesu_bianliang[0]+"."+$qvxian_locA+"W1") ;
           }
        
 }
 
}
 
 
  button -e -en 0  UI_mouth_zipper_Create_button;
}
 
///////////////////////////生成包裹

global proc zxb_lalianbaoguo_poc()
 {
  string $lalian_modces=`textFieldGrp -q -tx  zxb_zairumodeA`;
  string $qvxianDs=`textFieldGrp -q -tx Dqvxian  `;
  string $zhangzuiqvxians=`textFieldGrp -q -tx zhangzuiqvxian  `;
  
  string$qvxianDss[]=stringToStringArray($qvxianDs, " ");
   string$zhangzuiqvxianss[]=stringToStringArray($zhangzuiqvxians, " ");
  string$mod[];
  clear $mod;
  int $nemt=`tokenize  $lalian_modces " " $mod`;//分离字符串存到变量
  string$lalian_modce=$mod[0];
  
for ($i=0;$i<size($qvxianDss);$i++)
    {
    string$qvxian=$qvxianDss[$i];
    string$qvxian_A=$zhangzuiqvxianss[$i];
    string$baoguoa[]=`wire -gw false -en 1.000000 -ce 0.000000 -li 0.000000 -w $qvxian $lalian_modce`;
    setAttr ($baoguoa[0]+".rotation") 0.2;
    setAttr ($baoguoa[0]+".dropoffDistance[0]") 10;
    select -r  $qvxian_A;
    select -add  $qvxian_A ($qvxian+"BaseWire");
    string$bs[]=`blendShape`;
    
    setAttr ($bs[0]+"."+$qvxian_A) 1;
    
    }


}





////////////////////////骨骼跟随曲线


global proc xiao_gugegengsuiqvxian_proc_columnLayout() 
{
if(`window -ex zxb_chibangWin_columnLayout`) deleteUI zxb_chibangWin_columnLayout; 

window -t "翅膀" zxb_chibangWin_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;

 
 text -l " 关节跟随曲线 " -h 25;
 text -l "  " -h 25;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;

textFieldGrp  -cw2 100 300 -l "曲线" -tx "曲线" -ed 0  qvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"qvxian"+"\")") ;


setParent ..; 

text -l "  " -h 25;
button -l "创建" -c "zxb_gugegengsuiqvxian_a_proc" ;
showWindow zxb_chibangWin_columnLayout; 
}
 


global proc zxb_gugegengsuiqvxian_a_proc()
{
      string $qvxianss=`textFieldGrp -q -tx  qvxian `;
      string$qvxian_s[]= stringToStringArray($qvxianss, " ");//关节
      
     string $bianliang[]=$qvxian_s;//

 int $panduan_A=`objExists ("temp_qvxian_nearestPointOnCurve")`;//查询这个物体是否纯在
 if($panduan_A==1){delete ("temp_qvxian_nearestPointOnCurve"); }
createNode nearestPointOnCurve -n  ("temp_qvxian_nearestPointOnCurve");//创建曲线最近点节点

for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian=$bianliang[$i]; 
     string $qvxian_shp[]=`listRelatives -s $qvxian`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ("temp_qvxian_nearestPointOnCurve.inputCurve") ;
    
     string$qvxian_grp=($qvxian+"_bn_Grp");
    
     int $panduan=`objExists $qvxian_grp`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete $qvxian_grp;
        }
     select -cl  ;
     group -empty -n $qvxian_grp;
     setAttr ($qvxian_grp+".visibility") 0;
    // setAttr -lock true ($qvxian_grp+".v");
     
  

   select -r ($qvxian+".cv[0:99999999999]");
    string $cvs[]=`ls -sl -fl`;
    
  global string $gSelect;
global string $gMainProgressBar;
setToolTo $gSelect;
progressBar -e -st ("创建骨骼...") -bp -ii 1 -min 0 -max `size($cvs)` $gMainProgressBar;
    for($j=0;$j<size($cvs);$j++) 
    {
         if(`progressBar -q -ic $gMainProgressBar`)
         break;
         progressBar -e -s 1 $gMainProgressBar;
         string $cv_dian=$cvs[$j];
         string$bn=($qvxian+"_bn_"+$j);
         select -cl  ;
         joint -p 0 0 0 -n $bn;
       
        parent $bn  $qvxian_grp;
        float $pos_a[]=`xform -q -ws -t $cvs[$j]`;
        setAttr  -type float3 ("temp_qvxian_nearestPointOnCurve.inPosition")  $pos_a[0] $pos_a[1] $pos_a[2];
         addAttr -ln ("canshu")  -at double   -dv 0 -k  1 $bn;//添加属性
        float $canshu=`getAttr "temp_qvxian_nearestPointOnCurve.parameter"`;
        setAttr  ($bn+".canshu") $canshu;
        setAttr -lock true ($bn+".canshu");
        
         int $panduan_A=`objExists ($qvxian+"_pointOnCurveInfo_loc_"+$j)`;//查询这个物体是否纯在
         if($panduan_A==1){delete ($qvxian+"_pointOnCurveInfo_loc_"+$j); }
        createNode "pointOnCurveInfo" -n ($qvxian+"_pointOnCurveInfo_loc_"+$j);//创建曲线信息节点
        connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".inputCurve");
        connectAttr -force ($bn+".canshu") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".parameter");
        connectAttr -force ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position") ($bn+".t");
        
        float $pos_c[]=`getAttr ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position")`;
        // setAttr -type float3 ($qvxian+"_loc_B_"+$j+".t") $pos_c[0] $pos_c[1] $pos_c[2];
     }
     progressBar -e -ep $gMainProgressBar;
    
}
delete ("temp_qvxian_nearestPointOnCurve");
      
      

}





////////////////////////////选择其他模型上的线
global proc string zxb_xuanzebutongmoxing_jiluxuanzhededian(int $panduan, string $mesh_name)
{
    
   //string $mesh_name="head_mesh_zuiba_nianlian";
   string $bianliang[]=`ls -sl -fl`;

 //int $panduan=0;
   string $dian="vtx";
   if($panduan==0)
    {
    $dian="e";
    }else
    {
     $dian="vtx";
     }

   select -cl  ;


  for ($ll=0;$ll<size($bianliang);$ll++)
  {
    string $temp_name[];
    int $chafen=`tokenize $bianliang[$ll] "[" $temp_name`;
    int $chafen=`tokenize $temp_name[1] "]" $temp_name`;
    int $xuhao=$temp_name[0];
    select -add ($mesh_name+"."+$dian+"["+$xuhao+"]");
   // print  $temp_name;
    
   }
   
   string$aaa="";
   string $qq[]=`ls -sl -fl`;
    for ($ll=0;$ll<size($qq);$ll++)
        {
         string$temp=$qq[$ll];
         $aaa+=$temp+" " ;
         }
   return $aaa;
}

global proc string zxb_zuiba_tiqv_lalian_open_proc()
{
    
    string$xian_AA=`textFieldGrp -q -tx  UI_mouth_temp_wire`;
    string $open_s_qvxian[]= stringToStringArray($xian_AA, " ");//提取的曲线名字
    string$Aqvxianss=`textFieldGrp -q -tx UI_mouth_zipper_prefix `;
    string$Aqvxians[];
    clear $Aqvxians;
    int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
    string$qianzui=$Aqvxians[0];
    
    string $qvxianA=zxb_zuiba_tiqvqvxianfangfa_proc(1,"open",$qianzui,$xian_AA);
    
    textFieldGrp -e -tx $qvxianA UI_mouth_zipper_wire_open_A ;
    button -e -en 0 UI_mouth_zipper_wire_open_A_button ;
    button -e -en 0 lalian_button_qvxianA ;
    return $qvxianA;
}
global proc string zxb_zuiba_tiqv_lalian_close_proc()
{
    string$Aqvxianss=`textFieldGrp -q -tx UI_mouth_zipper_prefix `;//曲线前缀
    string$Aqvxians[];
    clear $Aqvxians;
    int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;
    string$qianzui=$Aqvxians[0];
    
    string$xian_AA=`textFieldGrp -q -tx  UI_mouth_temp_wire`;
    string $open_s_qvxian[]= stringToStringArray($xian_AA, " ");//提取的曲线名字
    string$close_s_mode=`textFieldGrp -q -tx  zxb_zairumode`;//反向嘴巴模型
    select -r $open_s_qvxian;
    string$close_s_qvxian=zxb_xuanzebutongmoxing_jiluxuanzhededian(0 ,$close_s_mode);
    string $close_B=zxb_zuiba_tiqvqvxianfangfa_proc(1,"close",$qianzui,$close_s_qvxian);
    textFieldGrp -e -tx $close_B UI_mouth_zipper_wire_close_B ;
    button -e -en 0 UI_mouth_zipper_wire_close_B_button;
    button -e -en 0 lalian_button_qvxian ;
    return $close_B;
}


global proc string zxb_zuiba_tiqv_lalian_follow_proc()

{  
    string$xian_AA=`textFieldGrp -q -tx  UI_mouth_temp_wire`;
    string $open_s_qvxian[]= stringToStringArray($xian_AA, " ");//提取的曲线名字
    string$Aqvxianss=`textFieldGrp -q -tx UI_mouth_zipper_prefix `;
    string$Aqvxians[];
    clear $Aqvxians;
    int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
    string$qianzui=$Aqvxians[0];
    
   
    string $follow_A=zxb_zuiba_tiqvqvxianfangfa_proc(1,"follow",$qianzui,$xian_AA);//生成张嘴嘴巴曲线
    string $follow_s[]= stringToStringArray($follow_A, " ");//提取的曲线名字
    select -r $follow_s;
    DeleteHistory;
    textFieldGrp -e -tx $follow_A UI_mouth_zipper_wire_follow_D ;
    button -e -en 0 UI_mouth_zipper_wire_follow_D_button ;
    button -e -en 0 lalian_button_qvxianD ;
    
    return $follow_A;
}




/////////////////设置拉链驱动/////////////////////
global proc zxb_zd_sheziqvdong_poc()
{
  string $qvxians=`textFieldGrp -q -tx  zxb_zairukongzhiqi`;
  string$qvxianss[];
  clear $qvxianss;
  int $nemt=`tokenize  $qvxians " " $qvxianss`;//分离字符串存到变量
  string$qvxian=$qvxianss[0];
  
  string $locss=`textFieldGrp -q -tx zxb_dingweiqi  `;

  string$locs[]=stringToStringArray($locss, " ");
  
  for ($i=0;$i<size($locs);$i++)
  {
   
   string$loc=$locs[$i];
   int$a=0;
   string$rrll="";
      
   if($i==0){$a=1;$rrll="L";}else{$a=0;$rrll="R";}
   string$loc_b=$locs[$a];
   
   int $ex=`objExists ($qvxian+".lalian_L")`;//查询这个物体是否纯在
   if($ex==0){addAttr -ln "lalian_L"  -at double  -min 0 -max 10 -dv 0 -k  1 $qvxian;}//添加属性  
   
    $ex=`objExists ($qvxian+".lalian_R")`;//查询这个物体是否纯在
    if($ex==0){addAttr -ln "lalian_R"  -at double  -min 0 -max 10 -dv 0 -k  1 $qvxian;}//添加属性  
    
    float$loc_pos=`getAttr ($loc+".tx")`;
    float$loc_b_pos=`getAttr ($loc_b+".tx")`;
   setDrivenKeyframe -itt "linear" -ott "spline" -v $loc_pos -dv 0 -cd ($qvxian+".lalian_"+$rrll) ($loc+".tx");  
   setDrivenKeyframe -itt "linear" -ott "spline" -v $loc_b_pos -dv 10 -cd ($qvxian+".lalian_"+$rrll) ($loc+".tx");  
  }
}

/////////////////////////////////设置嘴巴波浪///////////////////////////
global proc zxb_bolangzui()
{

string $bianliang[]=`ls -sl `;//选中曲线D  

for($i=0;$i<size($bianliang);$i++)
{
   string $qvxian_D=$bianliang[$i];
   select -r $qvxian_D;
  duplicate -rr -n ($qvxian_D+"_bolang");
    string $grpchids[]=`listRelatives -c ($qvxian_D+"_locGrp")`;
    
    int $panduan=`objExists ($qvxian_D+"_bolanggrp") `;
    if ($panduan==0)
    {
        select -cl  ;
        group -empty -n ($qvxian_D+"_bolanggrp");
        setAttr ($qvxian_D+"_bolanggrp.visibility") 0;
        setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolanggrp.v");
     
     }
     
     string$boliang=($bianliang[0]+"_bolang_all");
     
    int $panduan=`objExists $boliang `;
    if ($panduan==0)
    {
        select -cl  ;
        group -empty -n $boliang ;
       setAttr ($boliang+".visibility") 0;
       setAttr -lock true -keyable false -channelBox false ($boliang+".v");
     
     }
     
     parent ($qvxian_D+"_bolanggrp")  $boliang;
     
     /////////////////////////复制曲线D的定位器   属性控制拉链嘴的组//////////////////////////////
   string $objloc_d[];//定义定位器的所有物体  复制出来的定位器的名字
   clear $objloc_d;
   for($j=0;$j<size($grpchids);$j++)
   {
     string $qvxian_D_locA= $grpchids[$j];
     string $loc_chids[]=`listRelatives -c  -type "transform" $qvxian_D_locA`;
     string $obj="";

     for($ii=0;$ii<size($loc_chids);$ii++)
       {
       int $panduan=`objExists ($loc_chids[$ii]+".offsetZ")`;
       if ($panduan==0){$obj=$loc_chids[$ii];}
       }
     select -r $obj ;
     duplicate -rr -n ($obj+"_bolang");
     parent ($obj+"_bolang") ($qvxian_D+"_bolanggrp");
     string $zu_zi[]=`listRelatives -c -ad  -type  "transform" -fullPath ($obj+"_bolang")`;
     string $zu_zi_A[]=`listRelatives -c -ad  -type  "transform" ($obj+"_bolang")`;
     string $bolangloc="";

     for($iii=0;$iii<size($zu_zi);$iii++)////重命名
      {
          string $ziwuti=$zu_zi[$iii];
          //select -r $ziwuti;
          rename  $ziwuti ($zu_zi_A[$iii]+"_bolang");
          string$loc_shap[]=`listRelatives -s ($zu_zi_A[$iii]+"_bolang")`;
          if($loc_shap[0]==""&&$iii==0){ delete($zu_zi_A[$iii]+"_bolang");}
          if($loc_shap[0]!="")
            {
             string$tepe_B=`nodeType $loc_shap[0]`;
            if($tepe_B=="locator"){$bolangloc=($zu_zi_A[$iii]+"_bolang");}
             }

         
         
        
    
       }
      string $loc_zu[]=`listRelatives -c  -type  "transform"  $obj`;
      string $lalian_loczu=$loc_zu[0];

     connectAttr -f ($bolangloc+".t") ($lalian_loczu+".t");
     select -r $bolangloc;
     print $bolangloc;
     $objloc_d[$j] = $bolangloc;//把定位器的名称保存到变量里   复制出来的定位器的名字
   }
  // print $objloc_d;
  
  
  
  ///////////////////创建曲线///////////////////
   float $kaishi_pos_A[]=`xform -q -ws -t  ($qvxian_D+".cv[0]")`;
   float $kaishi_pos_B[]=`xform -q -ws -t  ($qvxian_D+".cv[+"+size($grpchids)+"]")`;
    int $panduan=`objExists ($qvxian_D+"_bolang")`;
    if($panduan==1){ delete ($qvxian_D+"_bolang");}
    
  curve -d 1 -p $kaishi_pos_A[0] $kaishi_pos_A[1] $kaishi_pos_A[2] -p $kaishi_pos_B[0] $kaishi_pos_B[1] $kaishi_pos_B[2] -n($qvxian_D+"_bolang"); //创建曲线
  setAttr ($qvxian_D+"_bolang.visibility") 0;
  setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolang.v");
  rebuildCurve -ch 0 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 ($qvxian_D+"_bolang");//重建曲线
  /////////////创建曲线信息节点///////////////////////////
     int $panduan=`objExists ($qvxian_D+"qvxianzuijingdianjiedian")`;
     if($panduan==1){ delete ($qvxian_D+"qvxianzuijingdianjiedian");}
   createNode nearestPointOnCurve -n ($qvxian_D+"qvxianzuijingdianjiedian");//创建曲线最近点节点
   string $qvxian_D_shp[]=`listRelatives -s $qvxian_D`;
   connectAttr -force ($qvxian_D_shp[0]+".worldSpace[0]")  ($qvxian_D+"qvxianzuijingdianjiedian"+".inputCurve");//曲线链接到曲线信息节点

    
    /////////////////判断是否翻转曲线起始点/////////////////
    
    float $dian_temp_kaishi[]=`xform -q -ws -t ($qvxian_D+"_bolang.cv[0]")`;
    float $dian_temp_jiesu[]=`xform -q -ws -t ($qvxian_D+"_bolang.cv[4]")`;
    float $dian_temp_kaishi_A[]=`xform -q -ws -t ($qvxian_D+".cv[0]")`;
    float$dis=mag(<<$dian_temp_kaishi[0],$dian_temp_kaishi[1],$dian_temp_kaishi[2]>>-<<$dian_temp_kaishi_A[0],$dian_temp_kaishi_A[1],$dian_temp_kaishi_A[2]>>);
    float$dis_a=mag(<<$dian_temp_jiesu[0],$dian_temp_jiesu[1],$dian_temp_jiesu[2]>>-<<$dian_temp_kaishi_A[0],$dian_temp_kaishi_A[1],$dian_temp_kaishi_A[2]>>);

    if($dis>$dis_a){reverseCurve -ch 0 -rpo 1 ($qvxian_D+"_bolang");}
    parent ($qvxian_D+"_bolang") $boliang;
    
    //////////////////创建蔟//////////////
    int $cv_size=5;
    for($a=0;$a<$cv_size;$a++)//创建蔟
     {
      select -r ($qvxian_D+"_bolang.cv["+$a+"]"); 
       
     CreateCluster ;
     rename ($qvxian_D+"_bolang_cu_"+$a);
     spaceLocator -p 0 0 0 -n ($qvxian_D+"_bolang_cu_loc_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_D_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_C_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_B_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_A_"+$a);
     setAttr ($qvxian_D+"_bolang_cu_grp_A_"+$a+".visibility") 0;
     setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolang_cu_grp_A_"+$a+".v");
     delete`pointConstraint  ($qvxian_D+"_bolang_cu_"+$a) ($qvxian_D+"_bolang_cu_grp_A_"+$a)`;
     parent ($qvxian_D+"_bolang_cu_"+$a) ($qvxian_D+"_bolang_cu_loc_"+$a);
     parent ($qvxian_D+"_bolang_cu_grp_A_"+$a) $boliang;
      }
     
     ///////////////////////蔟控制复制出来定位器//////////////////////////////
     
     
      int $panduan_A=`objExists ($qvxian_D+"_bolanggrp"+"_A")`;
      if ($panduan_A==0)
      { select -cl  ;
        group -empty -n ($qvxian_D+"_bolanggrp"+"_A");
        setAttr ($qvxian_D+"_bolanggrp"+"_A"+".visibility") 0;
        setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolanggrp"+"_A"+".v");
       }
    string $qvxian_D_boliang_shp[]=`listRelatives -s ($qvxian_D+"_bolang")`;
   connectAttr -force ($qvxian_D_boliang_shp[0]+".worldSpace[0]")  ($qvxian_D+"qvxianzuijingdianjiedian"+".inputCurve");//曲线链接到曲线信息节点
   for($aa=0;$aa<size($objloc_d);$aa++)
   {
        string $loc_d=$objloc_d[$aa];
        float $pos[]=`xform -q -ws -t $loc_d`;
       setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $pos[0] $pos[1] $pos[2];
      float $weozh=`getAttr  ($qvxian_D+"qvxianzuijingdianjiedian.parameter")`;
      
      int $panduan_l=`objExists ($loc_d+"_pointOnCurveInfo_"+$aa)`;
      if($panduan_l==1){delete ($loc_d+"_pointOnCurveInfo_"+$aa); }
     createNode "pointOnCurveInfo" -n ($loc_d+"_pointOnCurveInfo_"+$aa);//创建曲线最近点节点
     connectAttr -force  ($qvxian_D_boliang_shp[0]+".worldSpace[0]")  ($loc_d+"_pointOnCurveInfo_"+$aa+".inputCurve");
     setAttr ($loc_d+"_pointOnCurveInfo_"+$aa+".parameter") $weozh;
     
     spaceLocator -p 0 0 0 -n ( $loc_d+"_A_loc_"+$a);
     connectAttr -force ($loc_d+"_pointOnCurveInfo_"+$aa+".position") ( $loc_d+"_A_loc_"+$a+".t");
     parent ( $loc_d+"_A_loc_"+$a) ($qvxian_D+"_bolanggrp"+"_A");
     pointConstraint -mo ( $loc_d+"_A_loc_"+$a)   $loc_d;
   }
  
   delete  ($qvxian_D+"qvxianzuijingdianjiedian");
   parent ($qvxian_D+"_bolanggrp"+"_A") $boliang;
   
   ///////////////////创建控制器////////////////////////
   
   string $qvxianname=($qvxian_D+"UP_bolangqvxian");
   if($i==1){$qvxianname=($qvxian_D+"DN_bolangqvxian");}
   float $kaishi_pos_A[]=`xform -q -ws -t  ($qvxian_D+".cv[0]")`;
   float $qvxian_MM_pos[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[2]")`;
   float $rsd= `abs($kaishi_pos_A[0]*0.2)`;
  circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $rsd -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $qvxianname; 
  group -n ($qvxianname+"_grp_B");
  group -n ($qvxianname+"_grp_A");
  select -r  ($qvxianname+".cv[0]") ($qvxianname+".cv[2]") ($qvxianname+".cv[4]") ($qvxianname+".cv[6]") ;
  scale -r -p 0cm 0cm 0cm 0.417937 0.417937 0.417937 ;
  if($i==0)
  {  
  move -r -os -wd 0 ($rsd*0.5) 0 ;
  select -r  ($qvxianname+".cv[0:99999999]");
  move -r -os -wd 0 ($rsd*0.5) ($rsd*1.5) ;
  }else
  {
  move -r -os -wd 0 ($rsd*-0.5) 0 ;
  select -r  ($qvxianname+".cv[0:99999999]");
  move -r -os -wd 0 ($rsd*-0.5) ($rsd*1.5) ;
  }
 
  xform  -ws -t $qvxian_MM_pos[0] $qvxian_MM_pos[1] $qvxian_MM_pos[2]($qvxianname+"_grp_A");
  
  string $shape[]=`listRelatives -s $qvxianname`;
    setAttr ($shape[0]+".overrideEnabled") 1;
    setAttr ($shape[0]+".overrideColor") 16;
  //parent   ($qvxianname+"_grp_A") $boliang;
    
    
    ////////////////////表达式//////////////////////////
   
    float $rsd= ($kaishi_pos_A[0]*0.35);
    float$aaaa= `abs ($rsd)`;
     float $temp=$aaaa;
    addAttr -ln "upty"  -at double  -dv 1 -k 1 $qvxianname;
    addAttr -ln "dnty"  -at double  -dv 1 -k 1 $qvxianname;
    addAttr -ln "pianyi"  -at double  -dv 0 -k 1 $qvxianname;
    addAttr -ln "upsl"  -at double  -dv $temp -k 1 $qvxianname;
    addAttr -ln "dntsl"  -at double  -dv ($temp*-1) -k 1 $qvxianname;
    setAttr -keyable false -channelBox true ($qvxianname+".upsl");
    setAttr -keyable false -channelBox true ($qvxianname+".dntsl");
    
    

    string $grp_C1=($qvxian_D+"_bolang_cu_grp_C_1");
    string $grp_C2=($qvxian_D+"_bolang_cu_grp_C_2");
    string $grp_C3=($qvxian_D+"_bolang_cu_grp_C_3");
    
    string $grp_B1=($qvxian_D+"_bolang_cu_grp_B_1");
    string $grp_B2=($qvxian_D+"_bolang_cu_grp_B_2");
    string $grp_B3=($qvxian_D+"_bolang_cu_grp_B_3");
   //select -r $grp_C3;
   // print $grp_C3;
    float $temp_[]=`xform -q -ws -t  $grp_C2`;
    move -rpr $temp_[0] $temp_[1] $temp_[2] ($grp_B3+".scalePivot") ($grp_B3+".rotatePivot") ;
    move -rpr $temp_[0] $temp_[1] $temp_[2] ($grp_B1+".scalePivot") ($grp_B1+".rotatePivot") ;
    string $exp="";
    $exp+=($grp_C1+".ty=clamp(("+$qvxianname+".dntsl*"+$qvxianname+".dnty),("+$qvxianname+".upsl*"+$qvxianname+".upty),("+$qvxianname+".ty*0.6+"+$qvxianname+".tx));\n");
    $exp+=($grp_C3+".ty=clamp(("+$qvxianname+".dntsl*"+$qvxianname+".dnty),("+$qvxianname+".upsl*"+$qvxianname+".upty),("+$qvxianname+".ty*0.6-"+$qvxianname+".tx));\n");
    $exp+=($grp_C2+".ty=("+$grp_C1+".ty+"+$grp_C3+".ty);\n");
    $exp+=($grp_C1+".tz="+$grp_C3+".tz=("+$qvxianname+".tz*0.5);\n");
    $exp+=($grp_B2+".tz=("+$grp_B1+".tz+"+$grp_B3+".tz);\n");
    $exp+=($grp_B1+".sx="+$grp_B3+".sx=("+$qvxianname+".sx);\n");
    $exp+=($grp_C1+".tx="+$grp_C2+".tx="+$grp_C3+".tx="+$qvxianname+".pianyi*0.1;\n");
    $exp+=($grp_B3+".rx="+$grp_B1+".rx="+$qvxianname+".rx;\n");
    $exp+=($grp_B3+".ry="+$grp_B1+".ry="+$qvxianname+".ry;\n");
    $exp+=($grp_B3+".rz="+$grp_B1+".rz="+$qvxianname+".rz;\n");
    //print $exp;
    
int$panduan_biaodashi=`objExists ($qvxian_D+"_biaodashi")`;
if($panduan_biaodashi==1){delete ($qvxian_D+"_biaodashi") ;}
expression -s $exp  -o ($qvxian_D+"_biaodashi") -ae 1 -uc all ;

}
}


///////////////////////////////嘴唇反转骨骼创建/////////////////////////////////////////////



global proc zxb_extract_Curves_lip()
 {
  string$qvxianss=`zxb_extract_Curves_proc_extract_WANQV`;
  string $head_qvxian=`textFieldGrp -q -tx UI_head_controller `;
  zxb_ADD_shuxing_string_proc($head_qvxian,"lip_Curves");
  setAttr -type "string" ($head_qvxian+".lip_Curves")$qvxianss;

  
  }

global proc zxb_extract_Curves_bs_lip()
{
    string $head_qvxian=`textFieldGrp -q -tx UI_head_controller `;
    string$names=`getAttr ($head_qvxian+".lip_Curves")`;
    zxb_extract_Curves_lipbs($names) ;
    
 }
global proc zxb_extract_Curves_lipbs(string$neme) 
 {
 
string$Array_s[]= stringToStringArray($neme, " ");//字符串转化数组


 string$Curves_Ws[];
 clear $Curves_Ws;//清除数组
 $Curves_Ws[0]=$Array_s[0]; $Curves_Ws[1]=$Array_s[1];
 string$Curves_Ns[];
 clear $Curves_Ns;//清除数组
 $Curves_Ns[0]=$Array_s[2]; $Curves_Ns[1]=$Array_s[3];
 string$Curves_ins[];
 clear$Curves_ins;//清除数组
 $Curves_ins[0]=$Array_s[4]; $Curves_ins[1]=$Array_s[5];
 string$Curves_outers[];
 clear$Curves_outers;//清除数组
 $Curves_outers[0]=$Array_s[6];$Curves_outers[1]=$Array_s[7];
 
 for($u=0;$u<size($Curves_Ws);$u++)
   {
   string$Curve_W=$Curves_Ws[$u];
   string$Curve_N=$Curves_Ns[$u];
   string$Curves_in=$Curves_ins[$u];
   string $Curves_outer=$Curves_outers[$u];
   
   
   

  
  
  
select -r   $Curves_in;
select -add $Curve_W;
string $bs_in[]=`blendShape -frontOfChain `;
$bs_W=$bs_in[0];


select -r $Curves_outer ;
select -add $Curve_N ;

string $bs_outer[]=`blendShape -frontOfChain `;
$bs_N=$bs_outer[0];



select -r $Curve_W ;

string $Curves_N_root=$Curve_N+"_root";
duplicate -rr -n$Curves_N_root; 


select -r $Curve_W ;
select -add  $Curve_N;
select -add  $Curves_N_root;
string $bs_root[]=`blendShape -frontOfChain `;
$bs_G=$bs_root[0];
int $ex=`objExists  "lip_Curve"`;//查询这个物体是否纯在
if($ex==0)
{
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n "lip_Curve";
group  -n "lip_Curve_grp_A";
group  -n "lip_Curve_grp_B";
group  -n "lip_Curve_grp_C";
float$bbobx_Max[]=`getAttr ($Curve_W+".boundingBoxMax")`;////绑定box节点   
setAttr "lip_Curve_grp_C.translateX" $bbobx_Max[0];
setAttr "lip_Curve_grp_C.translateY" $bbobx_Max[1];
setAttr "lip_Curve_grp_C.translateZ" $bbobx_Max[2];
 }

string$up_dw="";
if($u==0)
  {
      $up_dw="UP_";
 
  }
if($u==1)
  {
      $up_dw="DW_";
 
  }

string$shuxing_in=$up_dw+$Curves_in;
string$shuxing_outer=$up_dw+$Curves_outer;
string$shuxing_hensui=$up_dw+"gensui_M" ;
addAttr -ln $shuxing_in -at double  -min 0 -max 1 -dv 0 -k 1"lip_Curve";
addAttr -ln  $shuxing_outer  -at double  -min 0 -max 1 -dv 0 -k 1 "lip_Curve";
addAttr -ln $shuxing_hensui  -at double  -min 0 -max 1 -dv 1 -k 1  "lip_Curve";


connectAttr -f  ("lip_Curve."+$shuxing_in) ($bs_W+"."+ $Curves_in) ;
connectAttr -f  ("lip_Curve."+$shuxing_outer) ($bs_N+"."+ $Curves_outer) ;
connectAttr -f  ("lip_Curve."+$shuxing_hensui ) ($bs_G+"."+$Curve_W) ;

string$fanxiangjiedian=($Curve_W+"_reverse");
int $panduan=`objExists $fanxiangjiedian`;//查询这个物体是否纯在
if($panduan==1){delete $fanxiangjiedian;}
shadingNode -asUtility reverse -n $fanxiangjiedian ; //创建返向节点

connectAttr -f   ("lip_Curve."+$shuxing_hensui ) ($fanxiangjiedian+".inputX") ;
connectAttr -f    ($fanxiangjiedian+".output.outputX") ($bs_G+"."+$Curve_N) ;






select -r $Curves_N_root;
CenterPivot;

///////////////////创建关节  并控制关节的位移///////////////////////////////////
select -r ($Curves_N_root+".cv[0:999999999999]");
string$cvs[]=`ls -sl -fl`;
int$duanshu=size($cvs);
string$bn_root=($Curves_N_root+"_root");
int$ex=`objExists $bn_root`;
if($ex==0)
{
    select -cl  ;
    joint -n $bn_root;
    //delete`pointConstraint  $qvxian $bn_root`;
    setAttr ($bn_root+".drawStyle") 2;
    setAttr -l true { ($bn_root+".ds") };
    string $qvxian_fu[]=`listRelatives -p  $Curves_N_root`; 
    
    string $qvxian_grp=$qvxian_fu[0];
    int $ex=`objExists $qvxian_grp`;
    if($ex==1){parent $bn_root $qvxian_grp;}
    
}

select -r $Curves_N_root;
string$qvxian_A=($Curves_N_root+"_zhouxiang");
duplicate -rr -n $qvxian_A;
select -r $qvxian_A;
rebuildCurve -ch 0 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s $duanshu -d 3 -tol 0.01  $qvxian_A;

select -cl  ;

string$qvxianjiedian_xingxi=($Curves_N_root+"_nearestPointOnCurve");
int$panduan=`objExists $qvxianjiedian_xingxi`;
if($panduan==1){delete $qvxianjiedian_xingxi;}
createNode nearestPointOnCurve -n $qvxianjiedian_xingxi;//
string $qvxian_Shape[]=`listRelatives -s  $Curves_N_root`; 
string$qvxianShape=$qvxian_Shape[0];
connectAttr -f   ($qvxianShape+".worldSpace[0]")  ($qvxianjiedian_xingxi+".inputCurve");
string$all_bns="";
for($i=0;$i<size($cvs);$i++) 
{
    int$qvyu=$i%3;
    string $cv_dian=$cvs[$i];
    string$qvxian_bn=($Curves_N_root+"_bn_"+$i);
    $all_bns+=$qvxian_bn+" ";
    string$qvxianjiedian=($qvxian_bn+"_pointOnCurveInfo_"+$i);
    float $cv_pos_A[]=` xform -q -ws -t    $cv_dian`;
     select -r $bn_root;
     joint -p$cv_pos_A[0] $cv_pos_A[1] $cv_pos_A[2] -n $qvxian_bn;
     
     int$panduan=`objExists $qvxianjiedian`;
     if($panduan==1){delete $qvxianjiedian;}
     createNode pointOnCurveInfo -n $qvxianjiedian;//创建曲线信息节点
    setAttr -type float3 ($qvxianjiedian_xingxi+".inPosition") $cv_pos_A[0] $cv_pos_A[1] $cv_pos_A[2];
    float $param=`getAttr ($qvxianjiedian_xingxi+".parameter")`;
    setAttr  ($qvxianjiedian+".parameter") $param;
    connectAttr -f   ($qvxianShape+".worldSpace[0]")  ($qvxianjiedian+".inputCurve");
    connectAttr -f    ($qvxianjiedian+".position") ($qvxian_bn+".t");//连接位置
    
    select -r $qvxian_A;
    select -add $qvxian_bn;
   delete `tangentConstraint -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "scene"`;
   
    select -r $qvxian_bn;
    channelBoxCommand -freezeRotate;
    
   if($qvyu==0)
     {
         setAttr ($qvxian_bn+".radius") 0.2;
      }else{setAttr ($qvxian_bn+".radius") 0.1;}

}
delete $qvxianjiedian_xingxi;
   


string$all_bnss[]= stringToStringArray( $all_bns," ");//字符串转化数组
for($uu=0;$uu<size($all_bnss);$uu++) 
  {
  int$qvyu=$uu%3;
  string$bn=$all_bnss[$uu];
  select -add $bn;
  if($qvyu==0&&$uu>0)
    {
     int$kaishi=$uu-3;
     string$aaaa[]=`ls -sl`;
     zxb_fanzhuanzui_xniuqv_proc($aaaa);
     

     select -cl  ;
     select -add $bn;
     }
  }



   } 
  
  
  
 
  
/*select -r $Curves_Ws[0];
select -add $Curves_Ns[0];
string$up_Curves[]=`ls -sl `;
for ($j=0;$j<size($up_Curves);$j++)
{
string$qvxian=$up_Curves[$j];
select -r ($qvxian+".cv[0:99999]");
string$up_A[]=`ls -sl -fl`;
float$temp_pos=0;
string$zuigao_L="";
string$zuigao_R="";
string$cv_MM="";
for ($i=0;$i<size($up_A);$i++) 
     {
      string$cv=$up_A[$i];
      float$cv_pos_y[]=`xform -q -ws -t $cv`;
      if($cv_pos_y[1]>$temp_pos)
        {
         $temp_pos=$cv_pos_y[1];
         $zuigao_L=$cv;
        
         }
  
      float$temp=$cv_pos_y[0];
      float$abs=abs($temp);
      if($abs<0.00000001)
        {
        $cv_MM=$cv;
       
        }
      }
      
      


string$up_LL="";

float$cv_pos_ytemp[]=`xform -q -ws -t $zuigao_L`;
spaceLocator -p 0 0 0 -n "temp_loc";
setAttr -type float3 "temp_loc.translate" (-$cv_pos_ytemp[0]) $cv_pos_ytemp[1] $cv_pos_ytemp[2];

float$loc_pos[]=`xform -q -ws -t "temp_loc"`;
delete "temp_loc" ;
float$mag=100000000000;
for ($i=0;$i<size($up_A);$i++) 
     {
      string$cv=$up_A[$i];
       select -r $cv;
      float$cv_pos_y[]=`xform -q -ws -t $cv`;
      float $weizhi=mag(<<$loc_pos[0],$loc_pos[1],$loc_pos[2]>>-<< $cv_pos_y[0] ,$cv_pos_y[1] ,$cv_pos_y[2]>>);////////计算距离
      if($weizhi<$mag)
        {
          $mag=$weizhi;
         $zuigao_R=$cv;
         
         }
      }
 


for ($i=0;$i<size($up_A);$i++) 
    {
      string$cv=$up_A[$i];
      float$cv_pos_y[]=`xform -q -ws -t $zuigao_L`;

       float$cv_pos_yy[]=`xform -q -ws -t $cv`;
       

       if($cv_pos_yy[0]<$cv_pos_y[0])
        {
         select -add   $cv ;
         }
       if($cv_pos_yy[0]<0.0000001)
         {
             select -d  $cv;
          }
          
     
     }
select -d  $cv_MM;
string$bianliang_dian_A[]=`ls -sl -fl`;
string $IKS[]=$bianliang_dian_A;
         
        
string$all_bn[];
clear $all_bn;  
for($k=0;$k<size($IKS);$k++)
    {
      string$temp_bn=$IKS[$k];
      int$temp_a=size($IKS)-1-$k;
      $all_bn[$temp_a]=$temp_bn;
               
               
      }
          
          string$mingziss="";
 for($k=0;$k<size($all_bn);$k++)
     {
      string$temp=$all_bn[$k]+" ";
       $mingziss+=$temp;
       }
            
$bianliang_dian_A=stringToStringArray($mingziss, " ");//字符串转化数组
            





select -r $up_A ;

for ($i=0;$i<size($up_A);$i++) 
    {
      string$cv=$up_A[$i];
      float$cv_pos_y[]=`xform -q -ws -t $zuigao_R`;

       float$cv_pos_yy[]=`xform -q -ws -t $cv`;
       

       if($cv_pos_yy[0]<=$cv_pos_y[0])
        {
         select -d   $cv ;
         }
     if($cv_pos_yy[0]>0.0000001)
             {
              
             select -d  $cv;
              }
 
          
     
     }
select -d  $cv_MM;
string$bianliang_dian_B[]=`ls -sl -fl`;
select -r  $bianliang_dian_B[0];
select -add  $bianliang_dian_A[0];
int$ex=`objExists $bianliang_dian_A[0]`;
int$ssze=size($bianliang_dian_A);
 float$aa=0;
if($ex==1)
  {
   float$bbobx_Max[]=`getAttr ($Curves_Ws[0]+".boundingBoxMax")`;////绑定box节点   
   float$Curves_sizea=$bbobx_Max[0]/size($up_A)/2;
   for ($ii=0;$ii<size($bianliang_dian_B);$ii++) 
      {
       string$cv=$bianliang_dian_B[$ii];
       string$cv_b=$bianliang_dian_A[$ii];
       $aa=$Curves_sizea*$ii*3;
       float$weiyi=$Curves_sizea+$aa;
        select -r $cv;
       move -r -os -wd 0 $weiyi 0  ;
       select -r $cv_b;
        move -r -os -wd 0 $weiyi 0  ;

      }

      $Curves_sizea=$Curves_sizea*$ssze*3;
     select -r $cv_MM;
     move -r -os -wd 0  $Curves_sizea 0  ;
  } 
    
    
}  */ 


 
 }
 
 
 
global proc string zxb_extract_Curves_proc_extract_WANQV() 
{
       string $xiaba_bn_W=`textFieldGrp -q -tx  UI_mouth_outer_wire `;
       string $xiaba_bn_N=`textFieldGrp -q -tx   UI_mouth_oral_wire`;
       string$Curves_W=zxb_extract_Curves_proc(0,"Curves_W","place",$xiaba_bn_W);
       string$Curves_Ws[]= stringToStringArray($Curves_W, " ");//字符串转化数组
       string$Curves_N=zxb_extract_Curves_proc(0,"Curves_N","place",$xiaba_bn_N);
       string$Curves_Ns[]= stringToStringArray($Curves_N, " ");//字符串转化数组
       
       select -r ($Curves_Ws[0]+".cv[0:99999]") ;
       string$qvxians_A[]=`ls -sl -fl`;
              
       select -r ($Curves_Ns[0]+".cv[0:99999]") ;
       string$qvxians_B[]=`ls -sl -fl`;
       
       
       int $ex_a=size($qvxians_A);
       int $ex_b=size($qvxians_B);
       if($ex_b!=$ex_a)
         {
          select -r $Curves_Ns[0];
          rebuildCurve -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 1 -s $ex_a -d 1 -tol 0.001 $Curves_Ns[0];
          select -r $Curves_Ns[1];
          DeleteHistory;
          }
          
       select -r ($Curves_Ws[1]+".cv[0:99999]") ;
       string$qvxians_C[]=`ls -sl -fl`;
              
       select -r ($Curves_Ns[1]+".cv[0:99999]") ;
       string$qvxians_D[]=`ls -sl -fl`;
       
       
       int $ex_C=size($qvxians_C);
       int $ex_D=size($qvxians_C);  
        if($ex_D!=$ex_C)
         {
          select -r $Curves_Ns[1];
          rebuildCurve -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 1 -s $ex_C -d 1 -tol 0.001 $Curves_Ns[1];
          select -r $Curves_Ns[1];
          DeleteHistory;
          }
                
        select -r $Curves_Ws;
        DeleteHistory;
        select -r $Curves_Ns;
        DeleteHistory;


float $cv_pos_kaishi_a[]=` xform -q -ws -t   $qvxians_A[0]`;
float $cv_pos_kaishi_b[]=` xform -q -ws -t   $qvxians_B[0]`;
if($cv_pos_kaishi_a[0]<0)
  {
   select -r $Curves_Ws[0];
   reverseCurve -ch 0 -rpo 1 $Curves_Ws[0];
   select -r $Curves_Ws[1];
   reverseCurve -ch 0 -rpo 1 $Curves_Ws[1];
  }

 if($cv_pos_kaishi_b[0]<0)
  {
   select -r $Curves_Ns[0];
   reverseCurve -ch 0 -rpo 1 $Curves_Ns[0];
   select -r $Curves_Ns[1];
   reverseCurve -ch 0 -rpo 1 $Curves_Ns[1];
  } 
  
  
string$in_in="";
string$out_out="";
string$in_out="";
for($u=0;$u<size($Curves_Ws);$u++)
 {
string$Curve_W=$Curves_Ws[$u];
string$Curve_N=$Curves_Ns[$u];
  
select -r $Curve_W; 
string $Curves_in=$Curve_W+"_in";
duplicate -rr -n $Curves_in; 
select -r $Curve_N; 
string $Curves_outer=$Curve_N+"_outer";
duplicate -rr -n $Curves_outer; 
$in_out+=$Curves_in+" ";
$out_out+=$Curves_outer+" ";
  }

 $in_out+= $in_in+$out_out;
 string$fanhui=$Curves_Ws[0]+" "+$Curves_Ws[1]+" "+$Curves_Ns[0]+" "+$Curves_Ns[1]+" "+$in_out;
 return $fanhui;



  }
global proc string zxb_extract_Curves_proc(int$a,string$mingzi,string$qianzui,string$xian_A)//int 区分线段的平均值或者法线朝向 $mingzi名字 $qianzui前缀 $xian_A 线段名称
{

string$xian=$xian_A;
string$Axianxian=$qianzui;
string$mingzi=$mingzi;
string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;//提取曲线名字
string$temp_qvxian[];
clear $temp_qvxian;
int $nemt=`tokenize $bianliang[0]"."  $temp_qvxian`;//分离字符串存到变量
string$moxing=$temp_qvxian[0];
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;


      string$R_cv="";
      string$L_cv="";
     string$vtxs[]=$dingdian;
     float$dd=-100000000000000;
     float$xx=1000000000000000;
     string$dian_L="";
     string$dian_R="";
     for ($i=0;$i<size($vtxs);$i++)
          {
           string$vtx=$vtxs[$i];
           float$bn_pos[]=`xform -q -ws -t $vtx`;
           if($bn_pos[0]>$dd)
             {
             $dd=$bn_pos[0];
             $dian_L=$vtx;
             }
             if($bn_pos[0]<$xx)
             {
             $xx=$bn_pos[0];
             $dian_R=$vtx;
             }
             
           }
           
           
     $L_cv=$dian_L;   
     $R_cv=$dian_R;
 float $R_POS[]=`xform -q -ws -t $R_cv`; 
 string$qvxian_mingzi=$Axianxian+"_temp_curve";
  select -r $qvxianss;
  polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_mingzi;
 DeleteHistory;
 float$pamte=zxb_return_curve_U($R_POS[0],$R_POS[1],$R_POS[2],$qvxian_mingzi);
 select -r ($qvxian_mingzi+".u["+$pamte+"]") ;
float $tempp_POS[]=`xform -q -ws -t $dingdian[0]`; 
int$jisuan=size($dingdian)-1;
float $tempp_POS_A[]=`xform -q -ws -t $dingdian[$jisuan]`; 
float $R_POaS=$R_POS[0]+$R_POS[1]+$R_POS[2];
float $R_PObS=$tempp_POS[0]+$tempp_POS[1]+$tempp_POS[2];
if($R_POaS!=$R_PObS)
  {
    moveNurbsCurveSeam;
   }
 

 select -r ($qvxian_mingzi+".cv[0:999999999]");
 
 string $qvxian_A[]=`ls -sl -fl`;
 
 
string$dianLL="";
float $cv_pos[]=`xform -q -ws -t $L_cv`;
float$maga=1000000000000;
     
for($iii=0;$iii<size($qvxian_A);$iii++)
   { 
     string$mag_cv=$qvxian_A[$iii];
     float $mag_po[]=`xform -q -ws -t $mag_cv`;
     float $weizhi=mag(<<$cv_pos[0],$cv_pos[1],$cv_pos[2]>>-<< $mag_po[0] ,$mag_po[1] ,$mag_po[2]>>);////////计算距离
     if($weizhi<$maga){$maga=$weizhi;$dianLL=$mag_cv;}
     } 
    
//print $dianLL;
  string$ccv[];
  clear $ccv;
  int $nemt=`tokenize $dianLL"[" $ccv`;//分离字符串存到变量
   int $nemt=`tokenize $ccv[1]"]" $ccv`;//分离字符串存到变量
  string$shu=$ccv[0];
 
 
 int$qvxiancv_size=size($qvxian_A);
int$temp_a=$shu;

float$exa=0;
float$exb=0;


if($a==0)
{
select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
$exb=`zxb_qvfengshangzi`;

select -r ($qvxian_mingzi+".cv[0:999999999]");
select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
$exa=`zxb_qvfengshangzi`;
}
if($a==1)
 {
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $exa=zxb_normal_pingjunshu($moxing);
  
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $exb=`zxb_normal_pingjunshu($moxing)`;
  }

print $exa;
print $exb;
string$up_qvxiancvs[];
clear$up_qvxiancvs;
string$dw_qvxiancvs[];
clear$dw_qvxiancvs;



if($exb>$exa)
  {
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
 $dw_qvxiancvs =`ls -sl -fl`;
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $up_qvxiancvs =`ls -sl -fl`;
  }
if($exa>$exb)
  {
  select -r ($qvxian_mingzi+".cv[0:999999999]");
  select -d  ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $up_qvxiancvs =`ls -sl -fl`;
  select -r ($qvxian_mingzi+".cv[0:"+$temp_a+"]");
  $dw_qvxiancvs=`ls -sl -fl`;
   }
string$UP_zuijing="";
string$DW_zuijing="";


for($o=0;$o<2;$o++)
{
    string$temp_suzu[];
    clear$temp_suzu;
   if($o==0){$temp_suzu=$up_qvxiancvs;}
   if($o==1){$temp_suzu=$dw_qvxiancvs;}
   for($i=0;$i<size($temp_suzu);$i++)
    {
     string$temp_cv=$temp_suzu[$i];
     float $cv_pos[]=`xform -q -ws -t $temp_cv`;
     float$mag=1000000000000;
     string$dian="";
     for($ii=0;$ii<size($dingdian);$ii++)
        { 
         string$mag_cv=$dingdian[$ii];
         float $mag_po[]=`xform -q -ws -t $mag_cv`;
         float $weizhi=mag(<<$cv_pos[0],$cv_pos[1],$cv_pos[2]>>-<< $mag_po[0] ,$mag_po[1] ,$mag_po[2]>>);////////计算距离
         if($weizhi<$mag){$mag=$weizhi;$dian=$mag_cv+" ";}
         } 
     if($o==0){$UP_zuijing+=$dian;}
     if($o==1){$DW_zuijing+=$dian;}  
     }
    
 }   
string$up_zuijingdw[]= stringToStringArray($UP_zuijing, " ");//字符串转化数组
string$dw_zuijingdw[]= stringToStringArray($DW_zuijing, " ");//字符串转化数组       
string$head_qvxian=$Axianxian+"_"+$mingzi+"_UP";//open  
select -r $up_zuijingdw;
select -add $R_cv;
select -add $L_cv;
ConvertSelectionToContainedEdges;
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;

string$head_qvxian_b=$Axianxian+"_"+$mingzi+"_DW";//open
select -r $dw_zuijingdw;
select -add $R_cv;
select -add $L_cv;
ConvertSelectionToContainedEdges;
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;


string$temp_mingzi="";
$temp_mingzi+=$head_qvxian+" "+$head_qvxian_b+" ";
delete $qvxian_mingzi;



string$dian_LRA=$head_qvxian+".cv[0]";
float $pos_A[]=`xform -q -ws -t$dian_LRA`;
string$dian_LRB=$head_qvxian_b+".cv[0]";
float $pos_B[]=`xform -q -ws -t $dian_LRB`;

if($pos_A[0]!=$pos_B[0]){reverseCurve -ch 1 -rpo 1 $head_qvxian;}


 return $temp_mingzi;
}





global proc zxb_fanzhuanzui_xniuqv_proc(string $bns_name[])
{
////////////按顺序选中要控制与要被控制的关节 //////////////////////////
string $bns[]=$bns_name;
int$bnsize=size($bns);
string$bn_R= $bns[0];
string$bn_L= $bns[($bnsize-1)];
float$aa=1.0/($bnsize-1);



int$panduansb=1;


for($i=1;$i<($bnsize-1);$i++) 
{
    string$bn=$bns[$i];
    string$chengchu=($bn+"_multiplyDivide_"+$i+"_rx");
    string$chengchu_A=($bn+"_multiplyDivide_A"+$i+"_rx");
    string$chengchu_B=($bn+"_multiplyDivide_B"+$i+"_rx");

    string$fanxiang=($bn+"_reverse"+$i+"_rx");
    string$jianjian=($bn+"_plusMinusAverage"+$i+"_rx");
    
    
    float$ab=1-$aa*$i;
    float$sb=smoothstep (0,1,$ab);
     float$bb=$ab;
     if($panduansb==1)
     {
      $bb=$sb;
      }
     int$ex=`objExists ($bn+".rooweigth")`;
    if($ex==0)
    {
          addAttr -ln "rooweigth"  -at double  -min 0 -max 1 -dv $bb -k 1 $bn;
          setAttr -keyable false -channelBox true ($bn+".rooweigth");
    }
    
    
    
    
    int$ex=`objExists ($bn+".rooallx")`;
    if($ex==0)
    {
          addAttr -ln "rooallx"  -at double  -min 0 -max 2 -dv 1 -k 1 $bn;
          setAttr -keyable false -channelBox true ($bn+".rooallx");
    }
   
    int$ex=`objExists ($bn+".rooally")`;
    if($ex==0)
    {
          addAttr -ln "rooally"  -at double  -min 0 -max 2 -dv 1 -k 1 $bn;
          setAttr -keyable false -channelBox true ($bn+".rooally");
    }
    
     int$ex=`objExists ($bn+".rooallz")`;
    if($ex==0)
    {
          addAttr -ln "rooallz"  -at double  -min 0 -max 2 -dv 1 -k 1 $bn;
          setAttr -keyable false -channelBox true ($bn+".rooallz");
    }
    
    
    
    
   
    
    
  int$ex=`objExists $chengchu`;
  if($ex==1){delete  $chengchu;}
  shadingNode -asUtility multiplyDivide -n $chengchu;
  connectAttr -f ($bn_R+".r") ($chengchu+".input1");
  connectAttr -f ($bn+".rooweigth") ($chengchu+".input2X");
  connectAttr -f ($bn+".rooweigth") ($chengchu+".input2Y");
  connectAttr -f ($bn+".rooweigth") ($chengchu+".input2Z");

  
  
  int$ex=`objExists $chengchu_A`;
  if($ex==1){delete  $chengchu_A;}
  shadingNode -asUtility multiplyDivide -n $chengchu_A;
  connectAttr -f ($bn_L+".r") ($chengchu_A+".input1");

  
  int$ex=`objExists $fanxiang`;
  if($ex==1){delete  $fanxiang;}
  shadingNode -asUtility reverse -n $fanxiang; //创建返向节点
  
  connectAttr -f ($bn+".rooweigth") ($fanxiang+".inputX");
  connectAttr -f ($bn+".rooweigth") ($fanxiang+".inputY");
  connectAttr -f ($bn+".rooweigth") ($fanxiang+".inputZ");

  connectAttr -f ($fanxiang+".output") ($chengchu_A+".input2");
  
   
  int$ex=`objExists $jianjian`;
  if($ex==1){delete  $jianjian;}
 shadingNode -asUtility plusMinusAverage -n $jianjian;//创建加减节
  connectAttr -f ($chengchu+".output") ($jianjian+".input3D[0]");
 connectAttr -f ($chengchu_A+".output") ($jianjian+".input3D[1]");

  int$ex=`objExists $chengchu_B`;
  if($ex==1){delete  $chengchu_B;}
  shadingNode -asUtility multiplyDivide -n $chengchu_B;
  
connectAttr -f ($jianjian+".output3D") ($chengchu_B+".input1");
connectAttr -f ($bn+".rooallx") ($chengchu_B+".input2X");
connectAttr -f ($bn+".rooally") ($chengchu_B+".input2Y");
connectAttr -f ($bn+".rooallz") ($chengchu_B+".input2Z");

connectAttr -f  ($chengchu_B+".output") ($bn+".r")  ;


}
}














/////////////////////////////////初始化UI//////////////////////////////////////////////////////
zxb_suoyouxuyao_proc;
string$face_loc="zxb_face_loc";
int$ex=`objExists $face_loc`;    ///判断
if($ex==1)
  {
   zxb_ui_jiazai;
  }