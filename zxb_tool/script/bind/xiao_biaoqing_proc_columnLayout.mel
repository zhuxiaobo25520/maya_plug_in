global proc xiao_biaoqing_proc_columnLayout() 
{ 
if(`window -ex zxb_myTestWin_columnLayout`) deleteUI zxb_myTestWin_columnLayout; 

window -t "小波表情绑定插件" zxb_myTestWin_columnLayout; 
 
scrollLayout; 
columnLayout; 
columnLayout -adjustableColumn 0; 
// 第一种：可折叠边框 
// 你熟悉的Attribute Editor和Tool Settings等窗口就是用的这种边框 
frameLayout -label "嘴巴整体"   -collapsable 3 -cl 1   -labelWidth 20 -width 1000  ; // 可折叠 

 //frameLayout -label "手动1.张嘴"   -collapsable 1 -cl 1   -bgc  0.5 0.2 0.9 ; // 可折叠 
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------下巴-嘴巴--------------" -h 20  ;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;

text -l "选择下巴关节" ;
button -l "下巴绑定 " -c ("zxb_jiemao_xiaba_proc") ;
text -l "选中基础模型";
button -l "创建张嘴 嘴巴整体 反向闭合混合变形" -c ("zxb_hunhebianxing_proc");
text -l " 选中下巴控制器 或者指定控制器";
button -l "创建反向闭合属性" -c ("zxb_fanxiangzuiba_proc");
setParent ..; 
text -l "--------------拉链嘴巴--------------" -h 20  -bgc 0.3 0.7 0.3;
//Parent..;
rowColumnLayout -nc 2 -cw 1 440 -cw 2 340;
text -l "拉链嘴";
button -l "创建拉链效果" -c ("zxb_zuiba_tiqvqvxian_proc");






frameLayout -label "设置驱动"   -collapsable 3 -cl 1   -labelWidth 20 -width 1000  -bgc 0.5 0.1 0.0  ; // 可折叠 
rowColumnLayout -nc 2 -cw 1 440 -cw 2 340;
text -l "设置拉链驱动 （手动） ";
button -l "设置驱动" -c ("zxb_shezhiqvdong");

 text -l "设置拉链驱动 （自动） ";
button -l "设置驱动" -c ("zxb_shezhilalianqvdong_zidong_proc");
setParent ..; 
setParent ..; 
setParent ..; 

text -l "--------------嘴巴次级--------------" -h 20 -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 440 -cw 2 340;



text -l "选中嘴巴环形线";
button -l "提取上下曲线" -c ("zxb_qvxianchuangjian_proc");

text -l "选中自己创建的1次方曲线曲线";
button -l "嘴巴次级创建关节" -c ("zxb_zuibaciji_mianbna_proc");

text -l "选中簇创建控制器";
button -l "创建嘴巴次级控制器" -c ("zxb_maonang_qvxian_cijikongzhiqi_mianban_proc");


text -l "创建嘴巴次级混合变形 选中基础模型跟一个干净摸的模型";
button -l "创建嘴巴次级混合变形" -c ("zxb_hunhebianxing_zuibaciji_A_proc");


text -l "计算嘴巴次级权重";
button -l "算嘴巴次级权重" -c ("zxb_jisuanlianbu_ciji_proc");
setParent ..; 

setParent ..; 
text -l "--------------下巴整体--------------" -h 20 -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 440 -cw 2 340;
text -l "创建下巴整体混合变形";
button -l "创建下巴整体混合变形" -c ("zxb_hunhebianxing_xiabazhengti_A_proc");

setParent ..; 

setParent ..; 
setParent ..; 
frameLayout -label " 眼睛绑定"   -collapsable 1 -cl 1  -width 1000  ; // 可折叠 


columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------眼皮绑定--------------" -h 20  -bgc 0.3 0.7 0.3;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;

text -l "载入头部控制器" ;
button -l "眼皮绑定 " -c ("zxb_yanjing_guanjie_proc") ;
text -l "选中线段" ;
button -l "眼皮次级曲线提取 " -c ("zxb_yanjing_yanpi_qvxian_mioanban_proc") ;

text -l "眼皮碰撞" ;
button -l " 眼皮碰撞" -c ("zxb_yanpipengzhuang_proc") ;



text -l "瞳孔绑定" ;
button -l " 瞳孔绑定" -c ("zxb_tongkongsuofang_ciji_proc") ;

setParent ..; 
setParent ..; 
//frameLayout -label " 嘴部整体 简模转化需要刷权重的顶点" -labelAlign "top" -borderStyle "in" -width 900  -bgc  0.1 0.1 0.1 ; 
columnLayout; 
//button -l "选中两个模型先选简模" -c ("zxb_xuandian_lianbu_proc");
setParent ..; 
setParent ..; 



frameLayout -label " 检查工具 "   -collapsable 1 -cl 1  -width 1000  ; // 可折叠 
text -l "--------------检查工具--------------" -h 20  -bgc 0.3 0.7 0.3;
columnLayout; 

 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
text -l "检查模型位移旋转缩放坐标轴心" ;
button -l "检查模型" -c (" zxb_jianchamode_xuanzhuanweiyisuofang_proc") ;
button -l "检查" -c ("xiao_jiancha_proc_columnLayout") ;


setParent ..; 
setParent ..; 

setParent ..; 


 frameLayout -label "其他工具 "   -collapsable 1 -cl 1  -width 1000  ; // 可折叠 
text -l "--------------其他工具--------------" -h 20  -bgc 0.3 0.7 0.3;
columnLayout; 

rowColumnLayout -nc 5 -cw 1 200 -cw 2 200   -cw 3 200   -cw 4 200 -cw 5 200 ;

button -l "移动关键帧工具" -c ("craOffsetKeys") ;

button -l "批量导出OBJ" -c (" xiao_daochuwenjian_proc") ;
setParent ..; 
setParent ..; 

setParent ..; 


frameLayout -label "修改绑定"   -collapsable 1 -cl 1  -width 1000   ; // 可折叠 
text -l "--------------修改绑定--------------" -h 20  -bgc 0.3 0.7 0.3;

rowColumnLayout -nc 5 -cw 1 200 -cw 2 200   -cw 3 200   -cw 4 200 -cw 5 200 ;
//string $form=`rowColumnLayout -nc 3 -cw 1 300 -cw 2 300 -cw 3 300 `;
//string $form = `formLayout`; 
button -l "重新蒙皮" -c ("zxb_cchongxing_mengpi_proc") ;
button -l "修改控制器附着模型" -c ("zxb_tihuanfuzaho_mode_proc") ;
button -l "游戏引擎排除多余关节" -c ("zxb_youxiyingqing_gujia_proc");
button -l "智能选择蒙皮关节（待增加）" -c ("");
button -l "清除前缀为pasted_" -c ("xb_qingchuqianzui_pasted_proc");
button -l "ADV FK关节隐藏" -c ("zxb_ADV_FK_yingcang_proc");
button -l "选点拷贝权重" -c ("xb_xuandiankaobei");
button -l "自动权重" -c ("xiao_zidongshuaquanzhong");
setParent ..; 
setParent ..;









frameLayout -label "绑定工具"   -collapsable 1 -cl 1  -width 1000  ; // 可折叠 
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------绑定工具--------------" -h 20  -bgc 0.3 0.7 0.3;
columnLayout; 

rowColumnLayout -nc 5 -cw 1 200 -cw 2 200   -cw 3 200   -cw 4 200 -cw 5 200 ;
button -l "曲线创建关节" -c ("zxb_guanjie_chuangjianguanjie_mianban_proc") ;
button -l "曲面法线约束" -c ("zxb_guanjie_jihetiyuwse_proc") ;
button -l "关节绑定次级" -c ("zxb_guanjie_guanjiegensuiqvmian_proc");
button -l "选中顶点创建簇" -c ("zxb_chuangjiancu_bianxing");
button -l "编辑簇权重工具" -c ("gtClusterDeformToolEditWin");
button -l "簇权重绘制工具" -c ("gtClusterWeightPaintWin");
button -l "镜像簇权重工具" -c ("gtClusterDeformToolMirrorWin");
button -l "镜像拷贝簇权重绑定工具" -c ("gtClusterDeformToolMirrorCopyWin");
button -l "模型点约束物体" -c ("zxb_moxingdianyuesuwuti_proc");
button -l "动力学曲线绑定头发" -c ("zxb_donglixuetoufa_fangfa");
button -l "批量物体绑定工具" -c ("zxb_piliangwuti_obj_proc");
setParent ..; 
setParent ..; 
setParent ..; 

button -l "老船工具箱" -c ("");
button -l "鸟类绑定" -c ("xiao_chibang_proc_columnLayout");
button -l "蛇的绑定" -c ("xiao_she_proc_columnLayout");
showWindow zxb_myTestWin_columnLayout; 
} 






////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////自己固定程序绑定方法/////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////


///////载入文字//////////////////
global proc zxb_zairufangfa_A_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}


/////////显示按钮按钮并清空文字///////
global proc zxb_zairufangfa_C_proc(string$butt,string $tempname)
{

button -e -en 1 $butt;
textFieldGrp -e -tx "" $tempname;

}
/////////显示按钮按钮///////
global proc zxb_zairufangfa_vsanniu_proc(string$butt)
{

button -e -en 1 $butt;

}

////////////关闭按钮///////////////
global proc zxb_zairufangfa_vsanniu_on_proc(string$butt)
{

button -e -en 0 $butt;

}

////////////关闭按钮///////////////
global proc zxb_zairufangfa_D_proc(string$butt)
{

button -e -en 0 $butt;
}
/////////编辑文字并隐藏按钮///////
global proc zxb_zairufangfa_B_proc(string$tempname,string$butt)
{
string $sel[]=`ls -sl`;
textFieldGrp -e -tx $sel[0] $tempname;
button -e -en 0 $butt;
}


/////////////载入数组///////////////
global proc zxb_zairufangfa_suzu_proc(string$tempname,string$butt)
{
string $sel[]=`ls -sl -fl`;
string$suzu="";
for ($i=0;$i<size($sel);$i++)
    {
    $suzu+=$sel[$i]+" ";
    }
textFieldGrp -e -tx  $suzu $tempname;
button -e -en 0 $butt;
}
///////////////载入一堆字符//////////////
global proc zxb_zairufangfa_A_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}


///////////////载入一堆字符//////////////
global proc string zxb_array_to_stringproc(string$tempname[])
{

string $obj="";
for($i=0;$i<size($tempname);$i++)
    {
    $obj+=(" "+$tempname[$i]);
    }
 return $obj;
}

//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_string_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing  -dt "string";} 
}


//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_double_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing -at double   -dv 0 -k 1;} 
}

//////////////////添加属性/////////////////////
global proc zxb_ADD_shuxing_double_A_proc(string$kongzhiqi,string$shuxing)
{
  int$ex=`objExists ($kongzhiqi+"."+$shuxing)`;    ///判断
  select -r $kongzhiqi;
  if($ex==0){addAttr -ln $shuxing -at double  -min 0 -max 10  -dv 0 -k 1;} 
}



///////////////////////创建空组
global proc zxb_ADD_kongzu_proc(string$kongzu)
{  
 int$ex=`objExists $kongzu`; ///判断
 if($ex==0){ group -empty -n $kongzu;}
   
}
//////////选中物体创建空组//////////////
global proc zxb_ADD_kongzuA_proc(string$kongzu,string$wuti)
{  
 int$ex=`objExists $kongzu`; ///判断
 if($ex==0)
 { 
 select -r $wuti;
 group  -n $kongzu;
 }
   
}
/////////////////////////////////////////创建节点
global proc zxb_ADD_jiedian_proc(string$jiedian_name,string$jiedia)

{
   int$ex=`objExists $jiedian_name`;    ///判断
   if($ex==0){shadingNode -asUtility  $jiedia -n $jiedian_name;//创建范围节点
   }
   
}


/////////////////////////////////////////创建节点
global proc zxb_ADD_createNode_proc(string$jiedian_name,string$jiedia)

{
   int$ex=`objExists $jiedian_name`;    ///判断
   if($ex==0){createNode   $jiedia -n $jiedian_name;//创建范围节点
   }
   
}
/////////隐藏按钮并载入文字

global proc zxb_butt_tex_proc(string $butt,string $textFieldGrpa)
{

button -e -en 0 $butt;
zxb_zairufangfa_A_proc($textFieldGrpa);
}

//////////反向保存关节名称//////////////
global proc string zxb_baocunguanjie_mingzi_proc(string$mingzi, int$qunlujing)
{
         string $IKS[];
         clear$IKS;
         if($qunlujing==0){$IKS=`listRelatives -c -ad   -type "joint"$mingzi `; }
         if($qunlujing==1){$IKS=`listRelatives -c -ad    -type "joint"-pa $mingzi `; }
         string$all_bn[];
         clear $all_bn;  
         $all_bn[0]=$mingzi; 
        for($j=0;$j<size($IKS);$j++)
           {
               string$temp_bn=$IKS[$j];
               int$temp_a=size($IKS)-$j;
               $all_bn[$temp_a]=$temp_bn;
               
               
           }
           
          string$mingziss="";
         for($j=0;$j<size($all_bn);$j++)
             {
              string$temp=$all_bn[$j]+" ";
              $mingziss+=$temp;
              }
              
              
         return $mingziss;

}







///////////////////复制关节并重新命名////////////////////////////////////////

global proc string zxb_chongxingmingming_bn_mingzi_proc(string$bn,string$qianzui)
  {
  select -r $bn;
  string$mingzi=$bn+$qianzui+"temp";
  string$mingzi_a=$bn+$qianzui;
  duplicate -rr -n $mingzi ;
  string$pa_bn=zxb_baocunguanjie_mingzi_proc($mingzi,1);
  string$pa_bns[]= stringToStringArray($pa_bn, " ");//关节
  string$bn_name="";
  string$bn_namea="";
  for($ii=size($pa_bns)-1;$ii>=0;$ii--)
     {
            string$temp_bn=$pa_bns[$ii];
            string$name=$mingzi_a+$ii;
            select -r $temp_bn;
            rename $temp_bn $name;
            if($ii==0)
               {
                 $bn_namea=$name;
                 }
       }
  string$bn_name=zxb_baocunguanjie_mingzi_proc($bn_namea,0);   
  return  $bn_name;
   
   }
  
  
  
  
  
  //////////////////////////通过曲线返回U参数///////////////////////////////
  global proc float zxb_return_curve_U(float$x,float$y,float$z,string$qvxian)
{
    
float$u=0;
string$shangxiaqvxian_nearestPointOnCurve=$qvxian+"zxb_return_curve_U_nearestPointOnCurve";
string $xingjiedian[]=`listRelatives -s $qvxian`;
string$qvxian_shap=$xingjiedian[0];
zxb_ADD_createNode_proc($shangxiaqvxian_nearestPointOnCurve,"nearestPointOnCurve");
connectAttr -force ($qvxian_shap+".worldSpace[0]")  ($shangxiaqvxian_nearestPointOnCurve+".inputCurve");
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionX") $x;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionY") $y;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionZ") $z;
string$parameter=`getAttr ($shangxiaqvxian_nearestPointOnCurve+".parameter")`;
$u=$parameter;
return$u;
delete $shangxiaqvxian_nearestPointOnCurve;
}
  
  
//////////////////通过曲线返回U位置///////////////////////////
global proc float[]  zxb_return_curve_place(float$x,float$y,float$z,string$qvxian)
{
    

float$ee[];
clear $ee;
string$shangxiaqvxian_nearestPointOnCurve=$qvxian+"zxb_return_curve_U_nearestPointOnCurve";
string $xingjiedian[]=`listRelatives -s $qvxian`;
string$qvxian_shap=$xingjiedian[0];
zxb_ADD_createNode_proc($shangxiaqvxian_nearestPointOnCurve,"nearestPointOnCurve");
connectAttr -force ($qvxian_shap+".worldSpace[0]")  ($shangxiaqvxian_nearestPointOnCurve+".inputCurve");
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionX") $x;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionY") $y;
setAttr ($shangxiaqvxian_nearestPointOnCurve+".inPositionZ") $z;
string$parameter=`getAttr ($shangxiaqvxian_nearestPointOnCurve+".parameter")`;
$u=$parameter;
return$ee;
delete $shangxiaqvxian_nearestPointOnCurve;
}  




//////////////////////计算位置的平均值///////////////////////////
global proc float zxb_qvfengshangzi ()
{
string$tempString[]=`ls -sl -fl`;

float $tys[];
float $tysAverage;
for ($y=0;$y<size($tempString);$y++)
	{
	$pos=`xform -q -ws -t $tempString[$y]`;
	$tys[$y]=$pos[1];
	$tysAverage+=$tys[$y];
	}
$tysAverage=$tysAverage/size($tempString);
return $tysAverage;
}



///////////////////////计算Y轴法线的朝向///////////////////////////

global proc float zxb_normal_pingjunshu(string$mode)
{
string$tempString[]=`ls -sl -fl`;
string$temp_mode=$mode;

float$shu=0;
string$mode_shps[]=`listRelatives -s $temp_mode`; 
for ($y=0;$y<size($tempString);$y++)
	{
	string$mesh_OnMesh="Temp_closestPointOnMesh";
	zxb_ADD_createNode_proc($mesh_OnMesh, "closestPointOnMesh");
	connectAttr -force ($mode_shps[0]+".worldMesh[0]") ($mesh_OnMesh+".inMesh");
	string$temp_cv=$tempString[$y];
	float $cv_pos[]=`xform -q -ws -t $temp_cv`;
	setAttr -type float3 ($mesh_OnMesh+".inPosition") $cv_pos[0] $cv_pos[1] $cv_pos[2];
	float$a=getAttr ($mesh_OnMesh+".result.normal.normalY");
    $shu+=$a;
    delete $mesh_OnMesh;
	}
int$r=size($tempString);
float$pingjun=$shu/$r;
return $pingjun;
}





//////////////////////////创建FK控制器//////////////////////////////////////////////////
global proc  zxb_FK_controller_proc(string$head_bn)
{
string$temp_a_bn[];
 clear$temp_a_bn;
$temp_a_bn[0]=$head_bn;
string $bn[]=$temp_a_bn;
int $bnnum=size($bn);

for($jj=0;$jj<$bnnum;$jj++)
   {
    select -r ($bn[$jj]);
	string $sels[] = `ls -sl`;
	
	int $size=size($sels);	
	/////////////////////////////
	string $baseJoint = $sels[0];
	
	string $endJoint;
	
	string $childs[]=`listRelatives -c -ad $sels[0]`;
	int $num=size($childs);
	$endJoint=$childs[0];
	//////////////////////////////////////	
	string $typs=`nodeType  $baseJoint`;
	string $type=`nodeType  $endJoint`;
	if($typs!="joint")error "需要选择两个关节";
	if($type!="joint")error "需要选择两个关节";

	select -r  $baseJoint;
	
    for($a=($num-1);$a>0;$a--){
    
    select -add ($childs[$a]);
}

string $sel[]=`ls -sl`;

string $tokem[];
int $tonum=`tokenize ($sel[0]) "_" $tokem`;
string $side=$tokem[1];

for($i=0;$i<size($sel);$i++){
  circle -ch 0 -o on -nr 1 0 0 -r 1 -n ($sel[$i]+"Con") ;
  select -r ($sel[$i]+"Con");
  group -n ($sel[$i]+"ConGrp");
  group -n ($sel[$i]+"ConGrpA");
  select -r ($sel[$i]);
  select -add ($sel[$i]+"ConGrpA");
  delete `parentConstraint`;
  
  select -r ($sel[$i]+"Con");
  select -add ($sel[$i]);
  parentConstraint;
  //scaleConstraint; 
 
  setAttr -lock true ($sel[$i]+"Con.v");
  string $shape[]=`listRelatives -s ($sel[$i]+"Con")`;
    setAttr ($shape[0]+".overrideEnabled") 1;
  if($side=="l"){
    setAttr ($shape[0]+".overrideColor") 22;   
  }else if($side=="r"){
    setAttr ($shape[0]+".overrideColor") 13;   
  }else{
        setAttr ($shape[0]+".overrideColor") 6;     
  }  
}

for($i=0;$i<(size($sel)-1);$i++){
    $j=$i+1;
    select -r ($sel[$j]+"ConGrpA");
    select -add ($sel[$i]+"Con");
    parent;
}

int $size=size($sel);
/////////////////////
addAttr -ln "rotx"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "roty"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "rotz"  -at double -k 1 ($sel[$size-1]+"Con");
addAttr -ln "showCon"  -at bool -k 1 ($sel[$size-1]+"Con");

for($i=0;$i<size($sel);$i++){
    connectAttr -f ($sel[$size-1]+"Con.rotx") ($sel[$i]+"ConGrp.rotateX");
    connectAttr -f ($sel[$size-1]+"Con.roty") ($sel[$i]+"ConGrp.rotateY");
    connectAttr -f ($sel[$size-1]+"Con.rotz") ($sel[$i]+"ConGrp.rotateZ");    
}

for($i=0;$i<(size($sel)-1);$i++){
    string $shap[]=`listRelatives -s ($sel[$i]+"Con")`;

    connectAttr -f ($sel[$size-1]+"Con.showCon") ($shap[0]+".v");
        }
    }
}




////////////////////////////////////////关节创建曲线/////////////////////////////////////////////////////////////////
global proc  zxb_curve_establish_proc(string$cbns[],string$qvxian)
{
  string$mingzi="curve -d 3 ";
  for($jj=0;$jj<size($cbns);$jj++)
      {
          string$mingzi_bnn=$cbns[$jj];
          float $temp[]=`xform -q -ws -t $mingzi_bnn`;
          $mingzi+="-p "+$temp[0]+" "+$temp[1]+" "+$temp[2]+" ";
      }
   $mingzi+=" -n "+ $qvxian;
   eval($mingzi); 
}
       
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////初始化区域/////////////////////////////////////////////////////////////////////////////////////////



















/////////////////////////////////////选中复制简模的顶点///////////////////////////////////////////////////////////
global proc zxb_xuandian_lianbu_proc()
{

string $bianliangzu[]=`ls -sl`;//
string $mesh_A=$bianliangzu[0];
string $mesh_B=$bianliangzu[1];

int $panduan=`objExists "temp_zuiba_closestPointOnMesh"`;//查询这个物体是否纯在
if($panduan==1){delete "temp_zuiba_closestPointOnMesh"; }
createNode "closestPointOnMesh" -n "temp_zuiba_closestPointOnMesh";
string $mesh_B_shp[]=`listRelatives -s $mesh_B`;
connectAttr -f ($mesh_B_shp[0]+".worldMesh[0]") "temp_zuiba_closestPointOnMesh.inMesh";
select -r ($mesh_A+".vtx[0:99999999999]") ;
string $dian[]=`ls -sl -fl `;
string $dianmingzi[];
clear $dianmingzi;

global string $gSelect;
global string $gMainProgressBar;
setToolTo $gSelect;
progressBar -e -st ("查找顶点...") -bp -ii 1 -min 0 -max `size($dian)` $gMainProgressBar;
for ($i=0;$i<size($dian);$i++)
{
if(`progressBar -q -ic $gMainProgressBar`)
break;
progressBar -e -s 1 $gMainProgressBar;
float $pos[]=`xform -q -ws -t $dian[$i]`;
setAttr -typ float3 "temp_zuiba_closestPointOnMesh.inPosition" $pos[0] $pos[1] $pos[2];
int $index=`getAttr "temp_zuiba_closestPointOnMesh.result.closestVertexIndex"`;
$dianmingzi[$i]=($mesh_B+".vtx["+$index+"]");
}
progressBar -e -ep $gMainProgressBar;
select -r $dianmingzi ;

delete "temp_zuiba_closestPointOnMesh";
}

///////////////////////提取其他模型的曲线/////////////////////////////////////////
global proc zxb_xuanzebutongmoxing_jiluxuanzhededian_proc(int $panduan, string $mesh_name)
{
    
   //string $mesh_name="head_mesh_zuiba_nianlian";
   string $bianliang[]=`ls -sl -fl`;

 //int $panduan=0;
   string $dian="vtx";
   if($panduan==0)
    {
    $dian="e";
    }else
    {
     $dian="vtx";
     }

   select -cl  ;


  for ($ll=0;$ll<size($bianliang);$ll++)
  {
    string $temp_name[];
    int $chafen=`tokenize $bianliang[$ll] "[" $temp_name`;
    int $chafen=`tokenize $temp_name[1] "]" $temp_name`;
    int $xuhao=$temp_name[0];
    select -add ($mesh_name+"."+$dian+"["+$xuhao+"]");
   // print  $temp_name;
    
   }
}

global proc zxb_xuandian_lianbu_proc_zhixng()
{
      string$mode=`textFieldButtonGrp  -q -tx zxb_field_mode_lalianzui`;
      int $panduan=`checkBox -q -v zxb_field_panduan_lalianzui`;
      //print $mode;
      //print $panduan;
    zxb_xuanzebutongmoxing_jiluxuanzhededian_proc($panduan,$mode);
}

global proc zxb_xuandian_lianbu_proc_zhixng_zairumode()
{
 string $bianliangzu[]=`ls -sl`;//
 textFieldButtonGrp  -e -tx $bianliangzu[0]  zxb_field_mode_lalianzui;
}






/////////////////////////////////////////////////
global proc zxb_jiemao_xiaba_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建下巴关节" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建下巴--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 100 130 -l "载入下巴关节" -tx "关节" -ed 0  zxb_zairuguanjie;
string$guanjie="zxb_zairuguanjie";

button -l "载入下巴关节" -c ("zxb_zairufangfa_A_proc(\""+$guanjie+"\")") ;



setParent ..; 

button -l "创建绑定" -c "zxb_xiababangding_proc";


showWindow  ;
}




global proc zxb_xiababangding_proc()
{
  string $xiaba_bn=`textFieldGrp -q -tx  zxb_zairuguanjie`;
  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_bn " " $bns`;//分离字符串存到变量
  
  string$jaw_bn=$bns[0];
  select -r $jaw_bn ;
  string $jaw=($jaw_bn+"_BN");
  duplicate -rr -n $jaw;
  string$ziwuti[]=`listRelatives -c  -pa $jaw`;
  string $jaw_end=($jaw_bn+"_BN_end");
  rename $ziwuti[0] $jaw_end;
  
  string$grp=($jaw+"_grp");
  int$ex=`objExists $grp`;    ///判断
  if($ex==0)
     {
       group  -em  -n $grp;
     }
  parent $jaw $grp;
  string$bn_con=($jaw+"_com");
  string$qvxian_grpA=($bn_con+"_A");
  string$qvxian_grpB=($bn_con+"_B");
  string$qvxian_grpC=($bn_con+"_C");
  circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $bn_con ;
  group -n $qvxian_grpA;
  group -n $qvxian_grpB;
  group -n $qvxian_grpC;
  delete `pointConstraint $jaw_end $qvxian_grpC`;
  float$tx=`getAttr  ($jaw_end+".tx")`;
  select -r ($bn_con+".cv[0:9999]") ;
  //move -r -os -wd ($tx*0.3) 0 0 ;
  float$bn_pos[]=`xform -q -ws -t $jaw`;
  string$jaw_root=($jaw+"_root");
  select -cl  ;
  joint -p  $bn_pos[0] $bn_pos[1] $bn_pos[2] -n $jaw_root ;
  move -r 0 0 ($tx*-0.5) ;
   parent $jaw_root $grp;
  parent $jaw $jaw_root;
  
 // select -r $jaw_root;
  //SelectHierarchy;
  //joint -e  -oj xyz -secondaryAxisOrient yup -ch -zso;

  
  
  string$jaw_locA=($jaw+"_locA");
  string$loc_GRPA=($jaw_locA+"_A");
  string$loc_GRPB=($jaw_locA+"_B");

  spaceLocator -p 0 0 0 -n $jaw_locA ;
  group -n $loc_GRPA;
  group -n $loc_GRPB;
  
  delete `pointConstraint $jaw_bn $loc_GRPB`;
  parent $loc_GRPB $jaw_root;
  parent  $jaw $jaw_locA;
  
  
  
  
  string$jaw_locB=($jaw+"_locB");
  string$loc_GRPAA=($jaw_locA+"_AA");
  string$loc_GRPBB=($jaw_locA+"_BB");

  spaceLocator -p 0 0 0 -n $jaw_locB ;
  group -n $loc_GRPAA;
  group -n $loc_GRPBB;
  
  string$FUwuti[]=`listRelatives -p  $jaw_bn`;
  parent  $loc_GRPBB $FUwuti[0];
  delete`pointConstraint $jaw_bn $loc_GRPBB`;
  pointConstraint  $jaw_bn $jaw_locB;

 connectAttr -f ($jaw_bn+".rotate") ($jaw+".rotate");
  connectAttr -f ($jaw_locB+".t") ($jaw_locA+".t");
   
  setAttr ($grp+".visibility") 0;
  
    string$BUYIDONGZU="buyidongzu";
  int$ex=`objExists $BUYIDONGZU`;    ///判断
  if($ex==0)
     {
       group  -em  -n $BUYIDONGZU;
     }
  parent  $grp $BUYIDONGZU;
  
  
  select -r  $jaw_bn;
  string$zuiba_zhengti=($jaw_bn+"_zhengti");
  
  duplicate -rr -n $zuiba_zhengti;
  
  
    string$zhengti_grp=($jaw_bn+"_zhengti_grp");
  int$ex=`objExists $zhengti_grp`;    ///判断
  if($ex==0)
     {
       group  -em  -n $zhengti_grp;
     }
  
  string$ziwuti_A[]=`listRelatives -c  -pa $zuiba_zhengti`;
  string $jawzhengti_end=($zuiba_zhengti+"_BN_end");
  rename $ziwuti_A[0] $jawzhengti_end;
  move -r 0 ($tx*0.05) 0 ;
  
 
 transformLimits -tx -1 1 -etx 1 1 $bn_con;
 transformLimits -ty -1 1 -ety 1 1 $bn_con;
 transformLimits -tz -1 1 -etz 1 1 $bn_con;
 transformLimits -tz 0 0 -etz 1 1 $bn_con;
 
 transformLimits -ry 0 0 -ery 1 1 $bn_con;
 transformLimits -rx 0 0 -erx 1 1 $bn_con;
 transformLimits -rz -30 30 -erz 1 1 Jaw_M_BN_com;
 
 delete`pointConstraint  $zuiba_zhengti $zhengti_grp  `;
 parent $zhengti_grp $grp;
 parent $zuiba_zhengti $zhengti_grp;
 setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty");  
 setDrivenKeyframe -itt "linear" -ott "spline" -v -1 -dv -1 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
   
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd ($bn_con+".ty") ($zuiba_zhengti+".ty"); 
  
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 0 -cd ($bn_con+".ty") ($zuiba_zhengti+".sx"); 
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1.1 -dv 1 -cd ($bn_con+".ty") ($zuiba_zhengti+".sx"); 
   
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v -5 -dv 1 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 

  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 5 -dv -1 -cd ($bn_con+".tx") ($zuiba_zhengti+".ry");
  
  
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v 10 -dv 30 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx");  
  
  setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx"); 
  setDrivenKeyframe -itt "linear" -ott "spline" -v -10 -dv -30 -cd ($bn_con+".rz") ($zuiba_zhengti+".rx");  

}  





///////////////////////////////////////创建混合变形////////////////////////////////////////////////////////////////////

global proc zxb_hunhebianxing_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建混合变形" zxb_jisuanlianbu_ciji_Win;

columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建混合变形--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入混合变形基础" -tx "模型" -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;


setParent ..; 

button -l "创建混合变形" -c "zxb_hunhebianx_proc";


showWindow  ;
}









global proc zxb_hunhebianx_proc()
{
 string $xiaba_mode=`textFieldGrp -q -tx  zxb_zairumode`;
  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_mode" " $bns`;//分离字符串存到变量
  string$mode=$bns[0];
  string$zhangzui=($mode+"_zhangzui");
  string$zhengti=($mode+"_zhengti");
  string$fanxiang=($mode+"_fanxiang");
  select -r $mode;
  duplicate -rr -n $zhangzui;
  select -r $mode;
  duplicate -rr -n $zhengti;
  select -r $mode;
  duplicate -rr -n $fanxiang;
  select -r $zhangzui;
  select -add $zhengti;
  select -add $fanxiang;
  select -add $mode;
  string$bss[]=`blendShape`;
  
  rename $bss[0] "base_bs";
  
}





//////////////////////////创建反向闭合控制器////////////////////////////

global proc zxb_fanxiangzuiba_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建反向闭合" zxb_jisuanlianbu_ciji_Win;

columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建反向闭合--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入控制器" -tx "控制器" -ed 0  zxb_zairukongzhiqi;
string$kongzhiqi="zxb_zairukongzhiqi";
button -l "载入控制器" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;


textFieldGrp  -cw2 100 130 -l "载入基础模型" -tx "模型" -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载入基础模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;
setParent ..; 
button -l "反向嘴巴" -c "zxb_fanxiangzui_kongzhiqi_proc";


showWindow  ;
}







global proc zxb_fanxiangzui_kongzhiqi_proc()
{
 string $xiaba_kongzhiqi=`textFieldGrp -q -tx  zxb_zairukongzhiqi`;
  string$bns[];
  clear $bns;
  int $nemt=`tokenize  $xiaba_kongzhiqi " " $bns`;//分离字符串存到变量
  string$kongzhiqi=$bns[0];
  
   string $jichu_mode=`textFieldGrp -q -tx  zxb_zairumode`;
  string$modes[];
  clear $modes;
  int $nemt=`tokenize  $jichu_mode " " $modes`;//分离字符串存到变量
  string$mode=$modes[0];
  
    string$modesheps[]=`listRelatives -s $mode `;
    string$modeshep=$modesheps[0];
    string $shuxing[]=`listConnections -d 0 -s 1  ($modeshep+".inMesh")`;
  string$sttrs[]=`listAttr -k -m  $shuxing[0]`;//列出属性
  string$bs="";
  for($i=1;$i<(size($sttrs)-1);$i++)
     {
      $bs+=$sttrs[$i]+" ";
      }
  //print  $bs;
  string$array[]= stringToStringArray($bs, " ");//字符串转化数组
  
   int$ex=`objExists ($kongzhiqi+".fanxiang")`; 
   if($ex==0)
     {
       addAttr -ln "fanxiang"  -at double  -min 0 -max 10 -dv 0 -k 1 $kongzhiqi;
     }

  string$fanwei=$kongzhiqi+"zuiba_fanxiangzui_setRange";
   int$ex=`objExists $fanwei`; 
   if( $ex==1){delete $fanwei; }
  shadingNode -asUtility setRange -n  $fanwei;
  connectAttr -f ($kongzhiqi+".fanxiang") ($fanwei+".valueX");
  setAttr ($fanwei+".oldMaxX") 10;
  setAttr ($fanwei+".oldMinX") 0;
  setAttr  ($fanwei+".maxX") 1;
  setAttr ($fanwei+".minX") 0;
  
  string$fanxiang=$kongzhiqi+"zuiba_fanxiangzui_reverse";
  int$ex=`objExists $fanxiang`; 
  if( $ex==1){delete $fanxiang; }
  shadingNode -asUtility reverse -n $fanxiang;
  connectAttr -f ($fanwei+".outValueX") ($fanxiang+".inputX");
  connectAttr -f ($fanwei+".outValueX") ($shuxing[0]+"."+$array[0]);
  connectAttr -f ($fanxiang+".outputX ") ($shuxing[0]+"."+$array[2]);

}











global proc zxb_xuanzebutongmoxing_jiluxuanzhededian()
{
  int $panduan=`checkBox -q  -value panduan_dian`;
  string $fanxiang_modces=`textFieldGrp -q -tx  zxb_zairumode`;
  string$modess[];
  clear $modess;
  int $nemt=`tokenize  $fanxiang_modces " " $modess`;//分离字符串存到变量
  string$fanxiang_mode=$modess[0];
    
     string $mesh_name=$fanxiang_mode;
   //string $mesh_name="head_mesh_zuiba_nianlian";
   string $bianliang[]=`ls -sl -fl`;

 //int $panduan=0;
   string $dian="vtx";
   if($panduan==0)
    {
    $dian="e";
    }else
    {
     $dian="vtx";
     }

   select -cl  ;


  for ($ll=0;$ll<size($bianliang);$ll++)
  {
    string $temp_name[];
    int $chafen=`tokenize $bianliang[$ll] "[" $temp_name`;
    int $chafen=`tokenize $temp_name[1] "]" $temp_name`;
    int $xuhao=$temp_name[0];
    select -add ($mesh_name+"."+$dian+"["+$xuhao+"]");
   // print  $temp_name;
    
   }
}








//////////////////////////设置驱动/////////////////////////////////////////

global proc zxb_shezhiqvdong(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "设置驱动手动" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------设置驱动--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;





textFieldGrp  -cw2 100 130 -l "加载控制器驱动属性" -tx "属性" -ed 0  zxb_zairushuxing;
string$shuxing="zxb_zairushuxing";
button -l "加载属性" -c ("zxb_zairushuxingfangfa_A_proc(\""+$shuxing+"\")") ;


textFieldGrp  -cw2 100 130 -l "加载被驱动组属性" -tx "属性" -ed 0  zxb_zairushuxing_a;
string$shuxinga="zxb_zairushuxing_a";
button -l "加载属性" -c ("zxb_zairushuxingfangfa_A_proc(\""+$shuxinga+"\")") ;
setParent ..; 
button -l "设置驱动  驱动组 加选控制器" -c "zxb_shezhiqvdongz_chengxu";


showWindow  ;
}


global proc zxb_zairushuxingfangfa_A_proc(string$tempname)
{
string $sel[]=`channelBox -q -sma mainChannelBox`;


textFieldGrp -e -tx $sel[0] $tempname;
}




global proc  zxb_shezhiqvdongz_chengxu(){
    
string$shuxing=`textFieldGrp  -q -tx   zxb_zairushuxing`;
string$shuxinga=`textFieldGrp  -q -tx   zxb_zairushuxing_a`;
string$zhouxianga=$shuxing;
string$zhouxiangb=$shuxinga;

string $conAs[]=`ls -sl`;//驱动组 加选控制器
string$beiqbxong=$conAs[0];//被驱动
string$qvdong=$conAs[1];//驱动
float$weizhi=`getAttr ($qvdong+"."+$zhouxianga)`;
float$v=`getAttr($beiqbxong+"."+$zhouxiangb)`;
 setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($qvdong+"."+$zhouxianga) ($beiqbxong+"."+$zhouxiangb);  
 setDrivenKeyframe -itt "linear" -ott "spline" -v $v -dv $weizhi -cd ($qvdong+"."+$zhouxianga) ($beiqbxong+"."+$zhouxiangb);  

}
 
 
 
 

////////////////////////////////////////设置驱动 自动/////////////////////////////////////


global proc zxb_shezhilalianqvdong_zidong_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "设置驱动（自动）" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------设置驱动--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入控制器" -tx "控制器" -ed 0  zxb_zairukongzhiqi;
string$mkongzhiqi="zxb_zairukongzhiqi";
button -l "控制器" -c ("zxb_zairufangfa_A_proc(\""+$mkongzhiqi+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入定位器" -tx "定位器" -ed 0  zxb_dingweiqi;
string$dingweqi="zxb_dingweiqi";
button -l "定位器" -c ("zxb_zairufangfa_A_proc(\""+$dingweqi+"\")") ;



setParent ..; 


button -l "设置驱动" -c "zxb_zd_sheziqvdong_poc";


showWindow  ;
}




global proc zxb_zd_sheziqvdong_poc()
{
  string $qvxians=`textFieldGrp -q -tx  zxb_zairukongzhiqi`;
  string$qvxianss[];
  clear $qvxianss;
  int $nemt=`tokenize  $qvxians " " $qvxianss`;//分离字符串存到变量
  string$qvxian=$qvxianss[0];
  
  string $locss=`textFieldGrp -q -tx zxb_dingweiqi  `;

  string$locs[]=stringToStringArray($locss, " ");
  
  for ($i=0;$i<size($locs);$i++)
  {
   
   string$loc=$locs[$i];
   int$a=0;
   string$rrll="";
      
   if($i==0){$a=1;$rrll="L";}else{$a=0;$rrll="R";}
   string$loc_b=$locs[$a];
   
   int $ex=`objExists ($qvxian+".lalian_L")`;//查询这个物体是否纯在
   if($ex==0){addAttr -ln "lalian_L"  -at double  -min 0 -max 10 -dv 0 -k  1 $qvxian;}//添加属性  
   
    $ex=`objExists ($qvxian+".lalian_R")`;//查询这个物体是否纯在
    if($ex==0){addAttr -ln "lalian_R"  -at double  -min 0 -max 10 -dv 0 -k  1 $qvxian;}//添加属性  
    
    float$loc_pos=`getAttr ($loc+".tx")`;
    float$loc_b_pos=`getAttr ($loc_b+".tx")`;
   setDrivenKeyframe -itt "linear" -ott "spline" -v $loc_pos -dv 0 -cd ($qvxian+".lalian_"+$rrll) ($loc+".tx");  
   setDrivenKeyframe -itt "linear" -ott "spline" -v $loc_b_pos -dv 10 -cd ($qvxian+".lalian_"+$rrll) ($loc+".tx");  
  }
}



/////////////////////////////设置波浪嘴////////////////////////////////////////


global proc zxb_boliangzui_mianban_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "设置嘴巴波浪" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;
text -l "--------------设置嘴巴波浪--------------" -h 25  -bgc 0.3 0.7 0.3;


button -l "设置波浪 选中D曲线" -c "zxb_bolangzui";


showWindow  ;
}



global proc zxb_bolangzui()
{

string $bianliang[]=`ls -sl `;//选中曲线D  

for($i=0;$i<size($bianliang);$i++)
{
   string $qvxian_D=$bianliang[$i];
   select -r $qvxian_D;
  duplicate -rr -n ($qvxian_D+"_bolang");
    string $grpchids[]=`listRelatives -c ($qvxian_D+"_locGrp")`;
    
    int $panduan=`objExists ($qvxian_D+"_bolanggrp") `;
    if ($panduan==0)
    {
        select -cl  ;
        group -empty -n ($qvxian_D+"_bolanggrp");
        setAttr ($qvxian_D+"_bolanggrp.visibility") 0;
        setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolanggrp.v");
     
     }
     
     string$boliang=($bianliang[0]+"_bolang_all");
     
    int $panduan=`objExists $boliang `;
    if ($panduan==0)
    {
        select -cl  ;
        group -empty -n $boliang ;
       setAttr ($boliang+".visibility") 0;
       setAttr -lock true -keyable false -channelBox false ($boliang+".v");
     
     }
     
     parent ($qvxian_D+"_bolanggrp")  $boliang;
     
     /////////////////////////复制曲线D的定位器   属性控制拉链嘴的组//////////////////////////////
   string $objloc_d[];//定义定位器的所有物体  复制出来的定位器的名字
   clear $objloc_d;
   for($j=0;$j<size($grpchids);$j++)
   {
     string $qvxian_D_locA= $grpchids[$j];
     string $loc_chids[]=`listRelatives -c  -type "transform" $qvxian_D_locA`;
     string $obj="";

     for($ii=0;$ii<size($loc_chids);$ii++)
       {
       int $panduan=`objExists ($loc_chids[$ii]+".offsetZ")`;
       if ($panduan==0){$obj=$loc_chids[$ii];}
       }
     select -r $obj ;
     duplicate -rr -n ($obj+"_bolang");
     parent ($obj+"_bolang") ($qvxian_D+"_bolanggrp");
     string $zu_zi[]=`listRelatives -c -ad  -type  "transform" -fullPath ($obj+"_bolang")`;
     string $zu_zi_A[]=`listRelatives -c -ad  -type  "transform" ($obj+"_bolang")`;
     string $bolangloc="";

     for($iii=0;$iii<size($zu_zi);$iii++)////重命名
      {
          string $ziwuti=$zu_zi[$iii];
          //select -r $ziwuti;
          rename  $ziwuti ($zu_zi_A[$iii]+"_bolang");
          string$loc_shap[]=`listRelatives -s ($zu_zi_A[$iii]+"_bolang")`;
          if($loc_shap[0]==""&&$iii==0){ delete($zu_zi_A[$iii]+"_bolang");}
          if($loc_shap[0]!="")
            {
             string$tepe_B=`nodeType $loc_shap[0]`;
            if($tepe_B=="locator"){$bolangloc=($zu_zi_A[$iii]+"_bolang");}
             }

         
         
        
    
       }
      string $loc_zu[]=`listRelatives -c  -type  "transform"  $obj`;
      string $lalian_loczu=$loc_zu[0];

     connectAttr -f ($bolangloc+".t") ($lalian_loczu+".t");
     select -r $bolangloc;
     print $bolangloc;
     $objloc_d[$j] = $bolangloc;//把定位器的名称保存到变量里   复制出来的定位器的名字
   }
  // print $objloc_d;
  
  
  
  ///////////////////创建曲线///////////////////
   float $kaishi_pos_A[]=`xform -q -ws -t  ($qvxian_D+".cv[0]")`;
   float $kaishi_pos_B[]=`xform -q -ws -t  ($qvxian_D+".cv[+"+size($grpchids)+"]")`;
    int $panduan=`objExists ($qvxian_D+"_bolang")`;
    if($panduan==1){ delete ($qvxian_D+"_bolang");}
    
  curve -d 1 -p $kaishi_pos_A[0] $kaishi_pos_A[1] $kaishi_pos_A[2] -p $kaishi_pos_B[0] $kaishi_pos_B[1] $kaishi_pos_B[2] -n($qvxian_D+"_bolang"); //创建曲线
  setAttr ($qvxian_D+"_bolang.visibility") 0;
  setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolang.v");
  rebuildCurve -ch 0 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 2 -d 3 -tol 0.01 ($qvxian_D+"_bolang");//重建曲线
  /////////////创建曲线信息节点///////////////////////////
     int $panduan=`objExists ($qvxian_D+"qvxianzuijingdianjiedian")`;
     if($panduan==1){ delete ($qvxian_D+"qvxianzuijingdianjiedian");}
   createNode nearestPointOnCurve -n ($qvxian_D+"qvxianzuijingdianjiedian");//创建曲线最近点节点
   string $qvxian_D_shp[]=`listRelatives -s $qvxian_D`;
   connectAttr -force ($qvxian_D_shp[0]+".worldSpace[0]")  ($qvxian_D+"qvxianzuijingdianjiedian"+".inputCurve");//曲线链接到曲线信息节点
  
  //////////////////坐标中心点的位置保证在0的位置////////////////
  //float $temp_pos_A[]=`xform -q -ws -t  ($qvxian_D+"_bolang"+".cv[2]")`;
  //xform -ws -t 0  $temp_pos_A[1]  $temp_pos_A[2] ($qvxian_D+"_bolang"+".cv[2]");//中间点Z轴保证为0 

   


    
    ////////////点2的位置/////////////////////
     /* for($iii=0;$iii<10;$iii++)//点2的位置
   {
      float $temp_pos_D[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[2]")`;
      setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $temp_pos_D[0] $temp_pos_D[1] $temp_pos_D[2];
      float $qvxian_pos[]=`getAttr ($qvxian_D+"qvxianzuijingdianjiedian.position")`;
      xform -ws -t $qvxian_pos[0] $qvxian_pos[1] $qvxian_pos[2] ($qvxian_D+"_bolang.cv[2]");
    }
     
     
     ///////////点1的位置///////////
      float $temp_pos_B[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[0]")`;
     float $qvxian_MM_pos[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[2]")`;
    xform -ws -t (($temp_pos_B[0]+$qvxian_MM_pos[0])/2) (($temp_pos_B[1]+$qvxian_MM_pos[1])/2)  (($temp_pos_B[2]+$qvxian_MM_pos[2])/2) ($qvxian_D+"_bolang.cv[1]");
     float $temp_pos_D[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[1]")`;
   setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $temp_pos_D[0] $temp_pos_D[1] $temp_pos_D[2];
   float $qvxian_pos[]=`getAttr ($qvxian_D+"qvxianzuijingdianjiedian.position")`;
    xform -ws -t ($temp_pos_B[0]*0.5) $qvxian_pos[1] $qvxian_pos[2] ($qvxian_D+"_bolang.cv[1]");//点1的位置
    ///////////点3的位置//////////////
        float $temp_pos[]=`xform -q -ws -t ($qvxian_D+"_bolang.cv[1]")`;
    xform  -ws -t ($temp_pos[0]*-1) $temp_pos[1] $temp_pos[2]  ($qvxian_D+"_bolang.cv[3]");//对称的位置  点3的位置
    
    /////////////////判断是否翻转曲线起始点/////////////////
    */
    float $dian_temp_kaishi[]=`xform -q -ws -t ($qvxian_D+"_bolang.cv[0]")`;
    float $dian_temp_jiesu[]=`xform -q -ws -t ($qvxian_D+"_bolang.cv[4]")`;
    float $dian_temp_kaishi_A[]=`xform -q -ws -t ($qvxian_D+".cv[0]")`;
    float$dis=mag(<<$dian_temp_kaishi[0],$dian_temp_kaishi[1],$dian_temp_kaishi[2]>>-<<$dian_temp_kaishi_A[0],$dian_temp_kaishi_A[1],$dian_temp_kaishi_A[2]>>);
    float$dis_a=mag(<<$dian_temp_jiesu[0],$dian_temp_jiesu[1],$dian_temp_jiesu[2]>>-<<$dian_temp_kaishi_A[0],$dian_temp_kaishi_A[1],$dian_temp_kaishi_A[2]>>);

    if($dis>$dis_a){reverseCurve -ch 0 -rpo 1 ($qvxian_D+"_bolang");}
    parent ($qvxian_D+"_bolang") $boliang;
    
    //////////////////创建蔟//////////////
    int $cv_size=5;
    for($a=0;$a<$cv_size;$a++)//创建蔟
     {
      select -r ($qvxian_D+"_bolang.cv["+$a+"]"); 
       
     CreateCluster ;
     rename ($qvxian_D+"_bolang_cu_"+$a);
     spaceLocator -p 0 0 0 -n ($qvxian_D+"_bolang_cu_loc_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_D_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_C_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_B_"+$a);
     group -n ($qvxian_D+"_bolang_cu_grp_A_"+$a);
     setAttr ($qvxian_D+"_bolang_cu_grp_A_"+$a+".visibility") 0;
     setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolang_cu_grp_A_"+$a+".v");
     delete`pointConstraint  ($qvxian_D+"_bolang_cu_"+$a) ($qvxian_D+"_bolang_cu_grp_A_"+$a)`;
     parent ($qvxian_D+"_bolang_cu_"+$a) ($qvxian_D+"_bolang_cu_loc_"+$a);
     parent ($qvxian_D+"_bolang_cu_grp_A_"+$a) $boliang;
      }
     
     ///////////////////////蔟控制复制出来定位器//////////////////////////////
     
     
      int $panduan_A=`objExists ($qvxian_D+"_bolanggrp"+"_A")`;
      if ($panduan_A==0)
      { select -cl  ;
        group -empty -n ($qvxian_D+"_bolanggrp"+"_A");
        setAttr ($qvxian_D+"_bolanggrp"+"_A"+".visibility") 0;
        setAttr -lock true -keyable false -channelBox false ($qvxian_D+"_bolanggrp"+"_A"+".v");
       }
    string $qvxian_D_boliang_shp[]=`listRelatives -s ($qvxian_D+"_bolang")`;
   connectAttr -force ($qvxian_D_boliang_shp[0]+".worldSpace[0]")  ($qvxian_D+"qvxianzuijingdianjiedian"+".inputCurve");//曲线链接到曲线信息节点
   for($aa=0;$aa<size($objloc_d);$aa++)
   {
        string $loc_d=$objloc_d[$aa];
        float $pos[]=`xform -q -ws -t $loc_d`;
       setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $pos[0] $pos[1] $pos[2];
      float $weozh=`getAttr  ($qvxian_D+"qvxianzuijingdianjiedian.parameter")`;
      
      int $panduan_l=`objExists ($loc_d+"_pointOnCurveInfo_"+$aa)`;
      if($panduan_l==1){delete ($loc_d+"_pointOnCurveInfo_"+$aa); }
     createNode "pointOnCurveInfo" -n ($loc_d+"_pointOnCurveInfo_"+$aa);//创建曲线最近点节点
     connectAttr -force  ($qvxian_D_boliang_shp[0]+".worldSpace[0]")  ($loc_d+"_pointOnCurveInfo_"+$aa+".inputCurve");
     setAttr ($loc_d+"_pointOnCurveInfo_"+$aa+".parameter") $weozh;
     
     spaceLocator -p 0 0 0 -n ( $loc_d+"_A_loc_"+$a);
     connectAttr -force ($loc_d+"_pointOnCurveInfo_"+$aa+".position") ( $loc_d+"_A_loc_"+$a+".t");
     parent ( $loc_d+"_A_loc_"+$a) ($qvxian_D+"_bolanggrp"+"_A");
     pointConstraint -mo ( $loc_d+"_A_loc_"+$a)   $loc_d;
   }
  
   delete  ($qvxian_D+"qvxianzuijingdianjiedian");
   parent ($qvxian_D+"_bolanggrp"+"_A") $boliang;
   
   ///////////////////创建控制器////////////////////////
   
   string $qvxianname=($qvxian_D+"UP_bolangqvxian");
   if($i==1){$qvxianname=($qvxian_D+"DN_bolangqvxian");}
   float $kaishi_pos_A[]=`xform -q -ws -t  ($qvxian_D+".cv[0]")`;
   float $qvxian_MM_pos[]=`xform -q -ws -t  ($qvxian_D+"_bolang.cv[2]")`;
   float $rsd= `abs($kaishi_pos_A[0]*0.2)`;
  circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $rsd -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $qvxianname; 
  group -n ($qvxianname+"_grp_B");
  group -n ($qvxianname+"_grp_A");
  select -r  ($qvxianname+".cv[0]") ($qvxianname+".cv[2]") ($qvxianname+".cv[4]") ($qvxianname+".cv[6]") ;
  scale -r -p 0cm 0cm 0cm 0.417937 0.417937 0.417937 ;
  if($i==0)
  {  
  move -r -os -wd 0 ($rsd*0.5) 0 ;
  select -r  ($qvxianname+".cv[0:99999999]");
  move -r -os -wd 0 ($rsd*0.5) ($rsd*1.5) ;
  }else
  {
  move -r -os -wd 0 ($rsd*-0.5) 0 ;
  select -r  ($qvxianname+".cv[0:99999999]");
  move -r -os -wd 0 ($rsd*-0.5) ($rsd*1.5) ;
  }
 
  xform  -ws -t $qvxian_MM_pos[0] $qvxian_MM_pos[1] $qvxian_MM_pos[2]($qvxianname+"_grp_A");
  
  string $shape[]=`listRelatives -s $qvxianname`;
    setAttr ($shape[0]+".overrideEnabled") 1;
    setAttr ($shape[0]+".overrideColor") 16;
  //parent   ($qvxianname+"_grp_A") $boliang;
    
    
    ////////////////////表达式//////////////////////////
   
    float $rsd= ($kaishi_pos_A[0]*0.35);
    float$aaaa= `abs ($rsd)`;
     float $temp=$aaaa;
    addAttr -ln "upty"  -at double  -dv 1 -k 1 $qvxianname;
    addAttr -ln "dnty"  -at double  -dv 1 -k 1 $qvxianname;
    addAttr -ln "pianyi"  -at double  -dv 0 -k 1 $qvxianname;
    addAttr -ln "upsl"  -at double  -dv $temp -k 1 $qvxianname;
    addAttr -ln "dntsl"  -at double  -dv ($temp*-1) -k 1 $qvxianname;
    setAttr -keyable false -channelBox true ($qvxianname+".upsl");
    setAttr -keyable false -channelBox true ($qvxianname+".dntsl");
    
    

    string $grp_C1=($qvxian_D+"_bolang_cu_grp_C_1");
    string $grp_C2=($qvxian_D+"_bolang_cu_grp_C_2");
    string $grp_C3=($qvxian_D+"_bolang_cu_grp_C_3");
    
    string $grp_B1=($qvxian_D+"_bolang_cu_grp_B_1");
    string $grp_B2=($qvxian_D+"_bolang_cu_grp_B_2");
    string $grp_B3=($qvxian_D+"_bolang_cu_grp_B_3");
   //select -r $grp_C3;
   // print $grp_C3;
    float $temp_[]=`xform -q -ws -t  $grp_C2`;
    move -rpr $temp_[0] $temp_[1] $temp_[2] ($grp_B3+".scalePivot") ($grp_B3+".rotatePivot") ;
    move -rpr $temp_[0] $temp_[1] $temp_[2] ($grp_B1+".scalePivot") ($grp_B1+".rotatePivot") ;
    string $exp="";
    $exp+=($grp_C1+".ty=clamp(("+$qvxianname+".dntsl*"+$qvxianname+".dnty),("+$qvxianname+".upsl*"+$qvxianname+".upty),("+$qvxianname+".ty*0.6+"+$qvxianname+".tx));\n");
    $exp+=($grp_C3+".ty=clamp(("+$qvxianname+".dntsl*"+$qvxianname+".dnty),("+$qvxianname+".upsl*"+$qvxianname+".upty),("+$qvxianname+".ty*0.6-"+$qvxianname+".tx));\n");
    $exp+=($grp_C2+".ty=("+$grp_C1+".ty+"+$grp_C3+".ty);\n");
    $exp+=($grp_C1+".tz="+$grp_C3+".tz=("+$qvxianname+".tz*0.5);\n");
    $exp+=($grp_B2+".tz=("+$grp_B1+".tz+"+$grp_B3+".tz);\n");
    $exp+=($grp_B1+".sx="+$grp_B3+".sx=("+$qvxianname+".sx);\n");
    $exp+=($grp_C1+".tx="+$grp_C2+".tx="+$grp_C3+".tx="+$qvxianname+".pianyi*0.1;\n");
    $exp+=($grp_B3+".rx="+$grp_B1+".rx="+$qvxianname+".rx;\n");
    $exp+=($grp_B3+".ry="+$grp_B1+".ry="+$qvxianname+".ry;\n");
    $exp+=($grp_B3+".rz="+$grp_B1+".rz="+$qvxianname+".rz;\n");
    //print $exp;
    
int$panduan_biaodashi=`objExists ($qvxian_D+"_biaodashi")`;
if($panduan_biaodashi==1){delete ($qvxian_D+"_biaodashi") ;}
expression -s $exp  -o ($qvxian_D+"_biaodashi") -ae 1 -uc all ;

}
}







/////////////////////////////////////////嘴巴次级创建关节////////////////////////////////////////////////////




global proc zxb_zuibaciji_mianbna_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建嘴巴次级" zxb_jisuanlianbu_ciji_Win;

columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建嘴巴次级--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 130 130 -l "载入曲线:上下两条曲线" -tx "曲线" -ed 0  zxb_zairuqvxian;
string$qvxian="zxb_zairuqvxian";
button -l "载入曲线" -c ("zxb_zairufangfa_A_proc(\""+$qvxian+"\")") ;

text -l "   ";
checkBox -l "不创建放样曲线" -value 0 fangyangqvxian;

textFieldGrp  -cw2 100 130 -l "载入放样曲线" -tx "不创建则不载入" -ed 0  zxb_zairuqvxianA;
string$qvxianA="zxb_zairuqvxianA";
button -l "载入曲线" -c ("zxb_zairufangfa_A_proc(\""+$qvxianA+"\")") ;
setParent ..; 
button -l "创建嘴巴次级关节" -c "zxb_zuibajici_bn_proc";


showWindow  ;
}






global proc zxb_zuibajici_bn_proc()
{

  string $qvxianssa=`textFieldGrp -q -tx zxb_zairuqvxian `;
  string$qvxiansaa[]=stringToStringArray($qvxianssa, " ");
  string $bianliang[]=$qvxiansaa;//选中嘴巴曲线
  int$sssd=`checkBox -q -value  fangyangqvxian`;
  string $qvxianssb=`textFieldGrp -q -tx zxb_zairuqvxianA `;
  string$qvxiansbb[]=stringToStringArray($qvxianssb, " ");

  string $kongzhi_qvxianA= $qvxiansbb[0];
  string $kongzhi_qvxianB=$qvxiansbb[1];
  string $qvxian_kong[];
  clear$qvxian_kong;
  if($sssd==1)
    {
    select -cl  ;
   int $panduan=`objExists $kongzhi_qvxianA`;//查询这个物体是否纯在
   if($panduan==1){select -add $kongzhi_qvxianA;}
   int $panduan=`objExists $kongzhi_qvxianB`;//查询这个物体是否纯在
   if($panduan==1){select -add $kongzhi_qvxianB;}
   $qvxian_kong=`ls -sl`;//选中嘴巴曲线   
    
    }

int $size_qvxian=size ($qvxian_kong);

//print $bianliang;

string $temp_shuzzu[];
 clear $temp_shuzzu;
 
 int $cv_size;
for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian=$bianliang[$i];
     string $qvxian_AAA="";
     if($sssd==1){$qvxian_AAA=$qvxian_kong[$i];}   
     
    
   
    
    float $temp_pos_A[]=`xform -q -ws -t ($qvxian+".cv[0]")`;
    select -cl  ;
    ///////////////////////创建跟骨骼///////////////////////////
string$zuiba_bn_root=($bianliang[0]+"zuiba_bn_root");

 int $panduan=`objExists $zuiba_bn_root`;
    if($panduan==0)
    {
        joint -p 0 $temp_pos_A[1] $temp_pos_A[2] -n $zuiba_bn_root ;
        setAttr ($zuiba_bn_root+".drawStyle") 2;
        group -n ("zuiba_bn_grp");
        setAttr -l true { ($zuiba_bn_root+".ds") };
    }
    

    
/////////////////创建子关节///////////////////////////////////////
    select -r ($qvxian+".cv[0:9999999999999]") ;
    string $qvxian_cv[]=`ls -sl -fl`;//选中点
    
    string $bn=($qvxian+"_UPbn_");
    if($i==1){$bn=($qvxian+"_DWbn_");}
   
    string $qvmian_plane=($qvxian+"_UP_plane_");
    if($i==1){$qvmian_plane=($qvxian+"_DW_plane_");} 
    
    string $qvmian_clust=($qvxian+"_UP_clust_");
    if($i==1){$qvmian_clust=($qvxian+"_DW_clust_");} 
    
    string $qvmian_con=($qvxian+"_UP_con_");
    if($i==1){$qvmian_con=($qvxian+"_DW_con_");} 
    
     string $qvmian_qvxian=($qvxian+"_UP_qvxian_");
    if($i==1){$qvmian_qvxian=($qvxian+"_DW_qvxian_");} 
     
     
     string $xing_bn[];
     clear $xing_bn;
    for($ii=0;$ii<size($qvxian_cv);$ii++) 
    {
      string $CVdian= $qvxian_cv[$ii];
      string $qvxian_bn=($qvxian+$bn+$ii);
      float $temp_pos_B[]=`xform -q -ws -t $CVdian`;
      select -r  $zuiba_bn_root;
      joint -p $temp_pos_B[0] $temp_pos_B[1] $temp_pos_B[2]-n  $qvxian_bn ;
      $xing_bn[$ii]=$qvxian_bn;
    }
    
   // print  $xing_bn;
  //////////////////////////////////////////////创建曲线 //////////////////////////////////////////////////////
  
   if( $size_qvxian!=2)
   {
    string $qvxian_D = $qvxian;
    float $kaishi_pos_A[]=`xform -q -ws -t  ($qvxian_D+".cv[0]")`;
    float $kaishi_pos_B[]=`xform -q -ws -t  ($qvxian_D+".cv[+"+(size($qvxian_cv)-1)+"]")`;
    int $panduan=`objExists $qvmian_qvxian`;
    if($panduan==1){ delete $qvmian_qvxian;}
    
    curve -d 1 -p $kaishi_pos_A[0] $kaishi_pos_A[1] $kaishi_pos_A[2] -p $kaishi_pos_B[0] $kaishi_pos_B[1] $kaishi_pos_B[2] -n $qvmian_qvxian; //创建曲线
    rebuildCurve -ch 0 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 4 -d 3 -tol 0.01 $qvmian_qvxian;//重建曲线


  
  //////////////////坐标中心点的位置保证在0的位置////////////////
    float $temp_pos_A[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[3]")`;
    xform -ws -t 0  $temp_pos_A[1]  $temp_pos_A[2] ($qvmian_qvxian+".cv[3]");//中间点Z轴保证为0 
/////////////创建曲线信息节点///////////////////////////
     int $panduan=`objExists ($qvxian_D+"qvxianzuijingdianjiedian")`;
     if($panduan==1){ delete ($qvxian_D+"qvxianzuijingdianjiedian");}
     createNode nearestPointOnCurve -n ($qvxian_D+"qvxianzuijingdianjiedian");//创建曲线最近点节点
     string $qvxian_D_shp[]=`listRelatives -s $qvxian_D`;
     connectAttr -force ($qvxian_D_shp[0]+".worldSpace[0]")  ($qvxian_D+"qvxianzuijingdianjiedian"+".inputCurve");//曲线链接到曲线信息节点
   


    
    ////////////点3的位置/////////////////////
       for($iii=0;$iii<10;$iii++)//点3的位置
       {
        float $temp_pos_D[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[3]")`;
         setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $temp_pos_D[0] $temp_pos_D[1] $temp_pos_D[2];
         float $qvxian_pos[]=`getAttr ($qvxian_D+"qvxianzuijingdianjiedian.position")`;
          xform -ws -t 0 $qvxian_pos[1] $qvxian_pos[2] ($qvmian_qvxian+".cv[3]");
       }
     
     
     
     
     
     
     
     ///////////点2的位置///////////
       float $temp_pos_B[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[0]")`;
       float $qvxian_MM_pos[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[3]")`;
       xform -ws -t (($temp_pos_B[0]+$qvxian_MM_pos[0])/2) (($temp_pos_B[1]+$qvxian_MM_pos[1])/2)  (($temp_pos_B[2]+$qvxian_MM_pos[2])/2) ($qvmian_qvxian+".cv[2]");
       float $temp_pos_D[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[2]")`;
       setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $temp_pos_D[0] $temp_pos_D[1] $temp_pos_D[2];
       float $qvxian_pos[]=`getAttr ($qvxian_D+"qvxianzuijingdianjiedian.position")`;
       xform -ws -t $qvxian_pos[0] $qvxian_pos[1] $qvxian_pos[2] ($qvmian_qvxian+".cv[2]");//点1的位置
   
        spaceLocator -p 0 0 0 -n ("temp_A");
        spaceLocator -p 0 0 0 -n ("temp_B");
        spaceLocator -p 0 0 0 -n ("temp_C");
    
    
     //float $temp_pos_B[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[0]")`;
       float $qvxian_MM_pos[]=`xform -q -ws -t  ($qvmian_qvxian+".cv[2]")`;
     
       xform -ws -t ($temp_pos_B[0]) ($temp_pos_B[1])  ($temp_pos_B[2]) ("temp_A");
       xform -ws -t $qvxian_MM_pos[0] $qvxian_MM_pos[1] $qvxian_MM_pos[2]  ("temp_B");
      string $yuesu_TEMP[]=`parentConstraint  ("temp_A") ("temp_B") ("temp_C")`;
      setAttr ($yuesu_TEMP[0]+".temp_AW0") 0.666;
      setAttr ($yuesu_TEMP[0]+".temp_BW1") 0.333;
    
    
      float $temp_pos_D[]=`xform -q -ws -t  ("temp_C")`;
      setAttr -type float3  ($qvxian_D+"qvxianzuijingdianjiedian.inPosition") $temp_pos_D[0] $temp_pos_D[1] $temp_pos_D[2];
     float $qvxian_pos[]=`getAttr ($qvxian_D+"qvxianzuijingdianjiedian.position")`;
      xform -ws -t $qvxian_pos[0] $qvxian_pos[1] $qvxian_pos[2] ($qvmian_qvxian+".cv[1]");//点1的位置
   
      delete ("temp_A") ("temp_B")("temp_C");
   
   
  ///////////点4的位置//////////////
        float $temp_posG[]=`xform -q -ws -t ($qvmian_qvxian+".cv[2]")`;
        xform  -ws -t ($temp_posG[0]*-1) $temp_posG[1] $temp_posG[2]  ($qvmian_qvxian+".cv[4]");//对称的位置  点3的位置
    
    
    
    ///////////点5的位置//////////////
        float $temp_posG[]=`xform -q -ws -t ($qvmian_qvxian+".cv[1]")`;
        xform  -ws -t ($temp_posG[0]*-1) $temp_posG[1] $temp_posG[2]  ($qvmian_qvxian+".cv[5]");//对称的位置  点3的位置
    
      /////////////////判断是否翻转曲线起始点/////////////////
      //string $qvxian_D = $qvxian;
       float $dian_temp_kaishi[]=`xform -q -ws -t ($qvmian_qvxian+".cv[0]")`;
       float $dian_temp_jiesu[]=`xform -q -ws -t ($qvmian_qvxian+".cv[6]")`;
       if($dian_temp_jiesu[0]>$dian_temp_kaishi[0])
         {  
          reverseCurve -ch 0 -rpo 1 ($qvmian_qvxian);
          }
      delete ($qvxian_D+"qvxianzuijingdianjiedian");
    
   }else 
          { 
           rename $qvxian_AAA  ($qvmian_qvxian);
           }
  
   
  
   
   
   ///////////////////////////////////////////////////////////
   float $dian_temp_kaishi[];
   float$dian_temp_jiesu[];
   clear $dian_temp_kaishi  $dian_temp_jiesu;
   if( $size_qvxian!=2)
   { 
   select -r ($qvmian_qvxian+".cv[0:9999999999999]");
    string $qvxian_cv_eee[]=`ls -sl -fl`;//选中点
    float$size=size($qvxian_cv_eee);
    $dian_temp_kaishi=`xform -q -ws -t ($qvmian_qvxian+".cv[0]")`;
   $dian_temp_jiesu=`xform -q -ws -t ($qvmian_qvxian+".cv["+$size+"]")`;
   }
   else 
     { 
       
       select -r($qvmian_qvxian+".cv[0:9999999999999]"); 
   
       string $qvxian_cv_eee[]=`ls -sl -fl`;//选中点
       float$size=size($qvxian_cv_eee);
       $dian_temp_kaishi=`xform -q -ws -t ($qvmian_qvxian+".cv[0]")`;
       $dian_temp_jiesu=`xform -q -ws -t ($qvmian_qvxian+".cv["+$size+"]")`;
     
       if($dian_temp_jiesu[0]>$dian_temp_kaishi[0])
         { 
          reverseCurve -ch 0 -rpo 1 ($qvmian_qvxian);
          }
       select -r($qvmian_qvxian+".cv[0:9999999999999]"); 
     }
     
     ///////////////////////////////////放样曲面//////////////////////////////////////////////////////////////
    string $qvxian_cv_A[]=`ls -sl -fl`;//选中点
     $cv_size=size($qvxian_cv_A);


    $changdu=abs($dian_temp_kaishi[0]-$dian_temp_jiesu[0]);
 
   offsetCurve  -ch off -rn false -cb 2 -st true -cl true -cr 0 -d ($changdu*-0.01) -tol 0.01 -sd 5 -ugn false  ($qvmian_qvxian) ;
   rename ($qvmian_qvxian+"_A");
   offsetCurve  -ch off -rn false -cb 2 -st true -cl true -cr 0 -d ($changdu*0.01) -tol 0.01 -sd 5 -ugn false  ($qvmian_qvxian) ;
   rename ($qvmian_qvxian+"_B");
   loft -ch 0 -u 1 -c 0 -ar 1 -d 3 -ss 1 -rn 0 -po 0 -rsn true  -n $qvmian_plane ($qvmian_qvxian+"_A")  ($qvmian_qvxian+"_B") ;
    delete  ($qvmian_qvxian+"_A") ($qvmian_qvxian+"_B") ($qvmian_qvxian);
    
    
    
 //////////////////////////创建毛囊附着/////////////////////////////
   int $panduan=`objExists ($qvmian_plane+"_closestPointOnSurface_temp")`;//查询这个物体是否纯在
   if($panduan==1){ delete($qvmian_plane+"_closestPointOnSurface_temp");}

   createNode "closestPointOnSurface" -n ($qvmian_plane+"_closestPointOnSurface_temp") ;
  
   string $sheps[]=`listRelatives -s $qvmian_plane`;
   connectAttr -force ($sheps[0]+".worldSpace[0]")  ($qvmian_plane+"_closestPointOnSurface_temp.inputSurface");
      int $panduan=`objExists ($qvmian_plane+"_grp")`;//查询这个物体是否纯在
   if($panduan==0)
   {select -cl  ;
   group -empty -n ($qvmian_plane+"_grp");
   setAttr ($qvmian_plane+"_grp.visibility") 0;
   setAttr -lock true  ($qvmian_plane+"_grp.v");
   }
   parent  $qvmian_plane ($qvmian_plane+"_grp");
 

   string $plane_Shape= $sheps[0];
   
   for($iii=0;$iii<size($xing_bn);$iii++) 
   {
       string $zuiba_bn=$xing_bn[$iii];
       string $bn_maonang_shep=($zuiba_bn+"_maonang_Shape");
       spaceLocator -p 0 0 0 -n ($zuiba_bn+"_loc");
       delete`parentConstraint  $zuiba_bn ($zuiba_bn+"_loc") `;
       float $pos[]=`xform -q -ws -t $zuiba_bn `;
       setAttr -type float3 ($qvmian_plane+"_closestPointOnSurface_temp.inPosition") $pos[0] $pos[1]$pos[2];
       float $U=`getAttr ($qvmian_plane+"_closestPointOnSurface_temp.parameterU")`;
       float $V=`getAttr ($qvmian_plane+"_closestPointOnSurface_temp.parameterV")`;
       createNode "follicle" -n $bn_maonang_shep;//
       string $maonang[]=`listRelatives -p  $bn_maonang_shep`; //列出子物体 -c 列出子物体 -p  关节父物体-ad 所有子物体 - fullPath 全路径 -s 列出型节点
        string $bn_maonang=$maonang[0];
        parent  $bn_maonang ($qvmian_plane+"_grp");
        
        connectAttr -force ($plane_Shape+".local") ($bn_maonang_shep+".inputSurface");
        connectAttr -force ($plane_Shape+".worldMatrix[0]") ($bn_maonang_shep+".inputWorldMatrix");
        connectAttr -f ($bn_maonang_shep+".outRotate") ($bn_maonang+".rotate");
        connectAttr -f ($bn_maonang_shep+".outTranslate") ($bn_maonang+".translate");
        
        setAttr ($bn_maonang_shep+".parameterU") $U;
        setAttr ($bn_maonang_shep+".parameterV") $V;

       parent ($zuiba_bn+"_loc")$bn_maonang;
       parentConstraint ($zuiba_bn+"_loc") $zuiba_bn;//父子约束
   }
 
  // delete ($qvmian_plane+"_closestPointOnSurface_temp");
   
   ///////////////////////////创建曲面簇//////////////////////////////////////
    int $panduan=`objExists ($qvmian_plane+"_cu_grp")`;
    if($panduan==0)
    {
        select -cl  ;
        group -empty -n ($qvmian_plane+"_cu_grp");
        setAttr ($qvmian_plane+"_cu_grp.visibility") 0;
        setAttr -lock true  ($qvmian_plane+"_cu_grp.v");
    }
   
    for($iii=1;$iii<($cv_size-1);$iii++) 
    {
        string $qvmian_dian=($qvmian_plane+".cv["+$iii+"][0:3]");
        select -r  $qvmian_dian ;
        CreateCluster;
        string $cu=($qvmian_plane+"_Handle_"+$iii);
        rename $cu;
        parent  $cu($qvmian_plane+"_cu_grp");
     }
   
       $temp_shuzzu[$i]=$qvmian_plane;
  

}

select -cl  ;

for($j=0;$j<size($temp_shuzzu);$j++) 
   {
   string $qvmian=$temp_shuzzu[$j];
   select -add ($qvmian+".cv[0][0:3]");
    }
   CreateCluster;




string $cu_mingzi=($bianliang[0]+"__UP_plane_Handle_0");
rename $cu_mingzi;
parent  $cu_mingzi ($bianliang[0]+"_UP_plane__cu_grp");


select -cl  ;

for($j=0;$j<size($temp_shuzzu);$j++) 
{
   string $qvmian=$temp_shuzzu[$j];
   select -add ($qvmian+".cv["+($cv_size-1)+"][0:3]");
}
CreateCluster;

print $cv_size;
string $cu_mingzi=($bianliang[1]+"_DW_plane__Handle_0");
rename $cu_mingzi;
parent  $cu_mingzi ($bianliang[1]+"_DW_plane__cu_grp");




}




/////////////////////////////////创建次级控制器////////////////////////////////////////////////

global proc zxb_maonang_qvxian_cijikongzhiqi_mianban_proc(){

if(`window -ex zxb_maonang_qvxian_cijikongzhiqi_mianban`) deleteUI -window zxb_maonang_qvxian_cijikongzhiqi_mianban;
window -wh 420 200 -t "创建表情次级控制器" zxb_maonang_qvxian_cijikongzhiqi_mianban;
//scrollLayout gtmainBSL;

columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建次级控制器--------------" -h 50  -bgc 0.3 0.7 0.3;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 100 130 -l "附着模型" -tx "附着模型" -ed 0 zxb_biaoqingciji_mode;
button -l "载入附着模型" -c "zxb_maonangchauxnfuzhao_obj_mode" zxb_biaoqingciji_mode_But;

textFieldGrp  -cw2 100 130 -l "控制整体旋转物体" -tx "控制整体旋转物体" -ed 0 zxb_biaoqingciji_xuanzhuan_obj;
button -l "载入控制整体旋转物体" -c "zxb_maonangchauxnfuzhao_obj_xuanzhuan" zxb_biaoqingciji_xuanzhuan_objbut;


textFieldGrp  -cw2 100 130 -l "载入簇或者骨骼" -tx "簇或者骨骼" -ed 0 zxb_zuiba_ciji_bn;
string$zxb_zuiba_ciji_bn="zxb_zuiba_ciji_bn";
button -l "载入簇或者骨骼" -c ("zxb_zairufangfa_A_proc(\""+$zxb_zuiba_ciji_bn+"\")") ;


checkBox -l "控制旋转" -value 0 zxb_biaoqingciji_xuanzhuan_obj_panduan;
checkBox -l "控制器对称位移" -value 1 zxb_biaoqingciji_xuanzhuan_obj_panduan_a;
checkBox -l "定位器旋转反向" -value 0 zxb_biaoqingciji_xuanzhuan_obj_panduan_b;
checkBox -l "毛囊附着" -value 0 zxb_biaoqingciji_xuanzhuan_obj_panduan_c;


setParent ..; 



button -l "创建控制器 选中蔟或者骨骼" -c "zxb_chuangjianzuibaciji" ;
text -l "--------------创建次级跟随--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


text " ";
text "次级控制器跟随主控制器";

checkBox -l "位移" -value 1 zxb_biaoqingciji_gensui_obj_panduan_trs;
checkBox -l "旋转" -value 1 zxb_biaoqingciji_gensui_obj_panduan_rot;
checkBox -l "缩放" -value 1 zxb_biaoqingciji_gensui_obj_panduan_scl;
text " ";
setParent ..; 
button -l "加选控制物体" -c "zxb_ciji_gensui_proc_trs" ;


showWindow  zxb_maonang_qvxian_cijikongzhiqi_mianban;
}



global proc zxb_chuangjianzuibaciji()
{//////////////已知项//////////////////

int$xuanzhuan= `checkBox -q -value  zxb_biaoqingciji_xuanzhuan_obj_panduan`;
int$duicheng= `checkBox -q -value  zxb_biaoqingciji_xuanzhuan_obj_panduan_a`;
int$dingweiqi_fanxiang= `checkBox -q -value  zxb_biaoqingciji_xuanzhuan_obj_panduan_b`;
int$maonang_fuzhao= `checkBox -q -value  zxb_biaoqingciji_xuanzhuan_obj_panduan_c`;

string $toubu_boj=`textFieldGrp -q -tx zxb_biaoqingciji_mode`;//模型
string $fangxiang_bn =`textFieldGrp -q -tx  zxb_biaoqingciji_xuanzhuan_obj `;//骨骼

string $cijibn_sss=`textFieldGrp -q -tx zxb_zuiba_ciji_bn`;//模型
string$cijibn_ss[]=stringToStringArray($cijibn_sss, " ");
string $bianliang[]=$cijibn_ss;//选中簇
string $head_bn=$fangxiang_bn;//头部骨骼
string$mensh=$toubu_boj;//模型
int$maonang=$maonang_fuzhao;
int $ex;//判断
int $ex_A=$xuanzhuan;//判断是否控制簇的旋转
int $ex_B=$duicheng;//判断是否控制器左右对称的位移
int $x_C=$dingweiqi_fanxiang;//判断定位器是否反向控制器旋转
int$vis=`getAttr ($mensh+".v") `;

select -r $mensh;
channelBoxCommand -unlock ;
CBunlockAttr ($mensh+".v");
setAttr  ($mensh+".visibility") 1;
select -cl  ;
string $mash_zi_A[]=`listRelatives -s $mensh `; 
string $mash_shape_A=$mash_zi_A[0];
//////////////////////////////////////////
string $root_grp=($mensh+"_grp");//总组
string $qvxian_grp=($mensh+"_qvxian_grp");//总组


float $temp[]=`getAttr ($mensh+".boundingBoxSize")`;//头的BOX
float $con_size=$temp[0]/100.0;//半径

$ex=`objExists $root_grp`;
if($ex==0){group -empty -n $root_grp ;}//创建组

  $ex=`objExists $qvxian_grp`;
if($ex==0){group -empty -n $qvxian_grp ;}//创建组


for ($y=0;$y<size($bianliang);$y++)
{ //////////////////////////需要的变量/////////////////////////////////////
   string $cu=$bianliang[$y];//簇
  
   string $cu_loc_temp=($cu+"_loc");
   string $cu_loc_grp=($cu+"_loc_grp");
   string $cu_loc_grp_B=($cu+"_loc_grp_B");
   string $cu_loc_grp_A=($cu+"_loc_grp_A");
   string $cu_con=($cu+"_con");
   
   string $cu_con_Grp_A=($cu+"_con_grp_A");
   string $cu_con_Grp_B=($cu+"_con_grp_B");
   string $cu_con_Grp_C=($cu+"_con_grp_C");
   string $cu_con_Grp_D=($cu+"_con_grp_D");
   string $cu_con_Grp_E=($cu+"_con_grp_E");
   string $cu_con_Grp_F=($cu+"_con_grp_F");
   string $cu_con_Grp_G=($cu+"_con_grp_G");
   
   
   
   string $cu_con_Grp_ROT=($cu+"_con_grp_ROT");
   string $cu_con_Grp_REV=($cu+"_con_grp_REV");
   string $cu_con_Grp=($cu+"_con_grp");
   
   
    string$loc_rot=("head_ciji_loc_rot");
   string$loc_rot_grp=($loc_rot+"_grp");
    string$loc_follow=($loc_rot+"_follow");
    string$loc_follow_grp=($loc_rot+"_follow_grp");
   
   ///////////////创建控制簇的定位器  位置 缩放//////////////////////////////////
   spaceLocator -p 0 0 0 -n  $cu_loc_temp;
   group -n $cu_loc_grp;
   group -n $cu_loc_grp_B;
   group -n $cu_loc_grp_A;
   delete`pointConstraint $cu $cu_loc_grp_A`;

   
  ////////////控制整体旋转 缩放 位移 的定位器//////////////// 
   
    $ex=`objExists $loc_rot`;
   if($ex==0)
   {
    spaceLocator -p 0 0 0 -n  $loc_rot;
    group -n $loc_rot_grp;
    parent $loc_rot_grp $root_grp;
    setAttr ($loc_rot_grp+".visibility") 0;
    setAttr -lock true ($loc_rot_grp+".v");
    
    
    spaceLocator -p 0 0 0 -n  $loc_follow;
      int$temp_panduan=`objExists $loc_follow_grp`;
      if($temp_panduan==1){delete $loc_follow_grp;}
    group -n $loc_follow_grp;
    delete`pointConstraint $head_bn $loc_follow_grp`;
    parent $loc_follow_grp $head_bn;
    setAttr ($loc_follow_grp+".visibility") 0;
    setAttr -lock true ($loc_follow_grp+".v");
    parentConstraint $loc_follow $loc_rot;
     scaleConstraint $loc_follow $loc_rot;
     }
   /////////////////////创建控制器///////////////////////////////
   zxb_chuangjianqiuxingkongzhiqi($cu_con,$con_size);
   group -n $cu_con_Grp_A;
   group -n $cu_con_Grp_B;
   group -n $cu_con_Grp_C;
   group -n $cu_con_Grp_D;
   group -n $cu_con_Grp_E;
   group -n $cu_con_Grp_F;
   group -n $cu_con_Grp_G;
   group -n $cu_con_Grp_REV;
   group -n  $cu_con_Grp_ROT;
   group -n $cu_con_Grp;
   delete`parentConstraint $cu $cu_con_Grp`;
   parent $cu_con_Grp $root_grp;
   
   
   
   ///////////////////////被头部约束的定位旋转 缩放连接到控制器////////////////////////////////
    connectAttr -force ($loc_rot+".r") ($cu_con_Grp+".r");
    connectAttr -force ($loc_rot+".s") ($cu_con_Grp+".s");
    
    float $pos_temp[]=`xform -q -ws -t $cu_loc_temp`;
    if($ex_B==1)
    {
      if($pos_temp[0]<-0.001)
      {
       setAttr ($cu_con_Grp_ROT+".scaleX") -1;
       setAttr ($cu_loc_grp_B+".scaleX") -1;
      }   
    }
   
   
   /////////////////控制器的3个组连接簇的最上层组///////////////////////
   addAttr -ln "zhouxiangX"  -at double  -dv 0 -k 1  $cu_con;
   addAttr -ln "zhouxiangY"  -at double  -dv 0 -k 1  $cu_con;
   addAttr -ln "zhouxiangZ"  -at double  -dv 0 -k 1  $cu_con;
   setAttr -keyable false -channelBox true ($cu_con+".zhouxiangZ");
   setAttr -keyable false -channelBox true ($cu_con+".zhouxiangX");
   setAttr -keyable false -channelBox true ($cu_con+".zhouxiangY");
   connectAttr -force ($cu_con+".zhouxiangX")  ($cu_con_Grp_ROT+".rx");
   connectAttr -force ($cu_con+".zhouxiangY")  ($cu_con_Grp_ROT+".ry");
   connectAttr -force ($cu_con+".zhouxiangZ")  ($cu_con_Grp_ROT+".rz");

  if($x_C==1)
      {
          
          float$xuanzhuan_temp[]=`xform -q -ws -t $cu_loc_grp_B`;
          if($xuanzhuan_temp[0]<0)
             {
              string$xuanzhuan_multiplyDivide=($cu+"xuanzhuan_multiplyDivide_"+$y);
              int$exaa=`objExists $xuanzhuan_multiplyDivide`;
              if($exaa==1){delete $xuanzhuan_multiplyDivide;}
              shadingNode -asUtility multiplyDivide -n $xuanzhuan_multiplyDivide;//创建乘除节点 
              setAttr  -type float3 ($xuanzhuan_multiplyDivide+".input2") -1 -1 -1 ;
              connectAttr -force ($cu_con+".zhouxiangX") ($xuanzhuan_multiplyDivide+".input1X");
              connectAttr -force ($cu_con+".zhouxiangY") ($xuanzhuan_multiplyDivide+".input1Y");
              connectAttr -force ($cu_con+".zhouxiangZ") ($xuanzhuan_multiplyDivide+".input1Z");
              
              connectAttr -force  ($xuanzhuan_multiplyDivide+".outputX") ($cu_loc_grp_B+".rx");
              connectAttr -force  ($xuanzhuan_multiplyDivide+".outputY") ($cu_loc_grp_B+".ry");
              connectAttr -force  ($xuanzhuan_multiplyDivide+".outputZ")($cu_loc_grp_B+".rz");
            }else
                 {   connectAttr -force ($cu_con+".zhouxiangX")  ($cu_loc_grp_B+".rx");
                     connectAttr -force ($cu_con+".zhouxiangY")  ($cu_loc_grp_B+".ry");
                     connectAttr -force ($cu_con+".zhouxiangZ")  ($cu_loc_grp_B+".rz");
                 }

  
      }
        else{
              connectAttr -force ($cu_con+".zhouxiangX")  ($cu_loc_grp_B+".rx");
              connectAttr -force ($cu_con+".zhouxiangY")  ($cu_loc_grp_B+".ry");
              connectAttr -force ($cu_con+".zhouxiangZ")  ($cu_loc_grp_B+".rz");
               }
   
   ///////////////////////控制器的3个组 控制控制簇簇的定位器////////////////////////////////////
   
  
  
   
   string $jiajianjiedian_A=($cu+"plusMinusAverage_A"+$y);
   string $jiajianjiedian_B=($cu+"plusMinusAverage_B"+$y);
   string $jiajianjiedian_C=($cu+"plusMinusAverage_C"+$y);
    string $jiajianjiedian_D=($cu+"plusMinusAverage_D"+$y);
   string $jiajianjiedian_E=($cu+"plusMinusAverage_E"+$y);
   string $jiajianjiedian_F=($cu+"plusMinusAverage_F"+$y);
     string $jiajianjiedian_G=($cu+"plusMinusAverage_G"+$y);
     
    addAttr -ln "zhaodao_trs"  -at bool  -dv 0 -k 1  $cu_con;
    setAttr -keyable false -channelBox true ($cu_con+".zhaodao_trs");
    
    addAttr -ln "zhaodao_rot"  -at bool  -dv 0 -k 1  $cu_con;
    setAttr -keyable false -channelBox true ($cu_con+".zhaodao_rot");
    
    addAttr -ln "zhaodao_scl"  -at bool  -dv 0 -k 1  $cu_con;
    setAttr -keyable false -channelBox true ($cu_con+".zhaodao_scl");
    
  
   int $panduan_temp=`objExists $jiajianjiedian_A`;
   if($panduan_temp==1){delete $jiajianjiedian_A;}
   shadingNode -asUtility plusMinusAverage -n $jiajianjiedian_A;//创建加减节点
   
   int $panduan_temp=`objExists $jiajianjiedian_B`;
   if($panduan_temp==1){delete $jiajianjiedian_B;}
   shadingNode -asUtility plusMinusAverage -n $jiajianjiedian_B;//创建加减节点
   
   int $panduan_temp=`objExists $jiajianjiedian_C`;
   if($panduan_temp==1){delete $jiajianjiedian_C;}
   shadingNode -asUtility plusMinusAverage -n $jiajianjiedian_C;//创建加减节点
   
   
      

   
     addAttr -ln "zhaodao_trs"  -at bool  -dv 0  $jiajianjiedian_A;
     addAttr -ln "zhaodao_rot"  -at bool  -dv 0 $jiajianjiedian_B;
     addAttr -ln "zhaodao_scl"  -at bool  -dv 0  $jiajianjiedian_C;
    
     connectAttr -force ($cu_con+".zhaodao_trs") ($jiajianjiedian_A+".zhaodao_trs")  ;
     connectAttr -force ($cu_con+".zhaodao_rot") ($jiajianjiedian_B+".zhaodao_rot")  ;
     connectAttr -force ($cu_con+".zhaodao_scl") ($jiajianjiedian_C+".zhaodao_scl")  ;
   
   select -r $cu_con $cu_con_Grp_A  $cu_con_Grp_B  $cu_con_Grp_C $cu_con_Grp_D $cu_con_Grp_E  $cu_con_Grp_F $cu_con_Grp_G;
   string $bianliang_tempA[]=`ls -sl`;//
   
   for($i=0;$i<size($bianliang_tempA);$i++) 
   {
   string$temp_=$bianliang_tempA[$i];
   connectAttr -force ($temp_+".t")  ($jiajianjiedian_A+".input3D["+$i+"]");
   connectAttr -force ($temp_+".r")  ($jiajianjiedian_B+".input3D["+$i+"]");
   
   if($i==0)
     {
         connectAttr -force ($temp_+".s")  ($jiajianjiedian_C+".input3D["+$i+"]");  
   
      }else
      {
         int $panduan_temp=`objExists ($temp_+"_temp")`;
        if($panduan_temp==1){delete ($temp_+"_temp");}
        shadingNode -asUtility plusMinusAverage -n ($temp_+"_temp");//创建加减节点
        connectAttr -force ($temp_+".s")  ($temp_+"_temp.input3D[0]");  
        setAttr -type float3 ($temp_+"_temp.input3D[1]") 1 1 1;
        setAttr ($temp_+"_temp.operation") 2;
        connectAttr -force ($temp_+"_temp.output3D") ($jiajianjiedian_C+".input3D["+$i+"]");
      }

   }
   
   connectAttr -force  ($jiajianjiedian_C+".output3D") ($cu_loc_temp+".s");
   connectAttr -force  ($jiajianjiedian_B+".output3D") ($cu_loc_temp+".r");
   connectAttr -force  ($jiajianjiedian_A+".output3D") ($cu_loc_temp+".t");
   
   
   ///////////////////////曲线跟随脸/////////////////////////////////
   if($maonang==0)///////////////////////如果是曲线制控制器的组/////////////////////////////
     {
      string $qvxian_wangge=($cu+"curveFromMeshEdge_pos"+$y); 


      string $wangge_zuijingdian=($cu+"closestPointOnMesh"+$y);
      string $qvxian_A=($cu+"_qvxian_"+$y);
   
      string $mash_zi[]=`listRelatives -s $mensh `; 
      string $mash_shape=$mash_zi[0];
   
      int $panduan_temp=`objExists $qvxian_wangge`;
      if($panduan_temp==1){delete $qvxian_wangge;}
      createNode "curveFromMeshEdge" -n $qvxian_wangge;
   
      connectAttr -force ($mash_shape+".worldMesh[0]") ($qvxian_wangge+".inputMesh");
      curve -d 1 -p 0 0 0 -p 1 0 0 -k 0 -k 1 -n($qvxian_A);//创建曲线
      parent $qvxian_A $qvxian_grp;
      string $qvxian_shape[]=`listRelatives -s $qvxian_A `; 
      string $qvxian_A_shape=$qvxian_shape[0];
      connectAttr ($qvxian_wangge+".outputCurve") ($qvxian_A+".create");//网格连接到曲线



      int $panduan_temp=`objExists $wangge_zuijingdian`;
      if($panduan_temp==1){delete $wangge_zuijingdian;}

      createNode "closestPointOnMesh" -n $wangge_zuijingdian;//创建模型最近点节点
      connectAttr -force ($mash_shape+".worldMesh[0]") ($wangge_zuijingdian+".inMesh");
  
     float $temp_pos_BB[]=`xform -q -ws -t $cu_con_Grp`;
     setAttr -type float3 ($wangge_zuijingdian+".inPosition") $temp_pos_BB[0] $temp_pos_BB[1] $temp_pos_BB[2];
     int $inddex=`getAttr ($wangge_zuijingdian+".closestVertexIndex")`;
     string $dian_neme=($mensh+".vtx["+$inddex+"]");
     select -r  $dian_neme;
     ConvertSelectionToEdges;
     string $bianliang_B[]=`ls -sl -fl`;//
     string $temp_xian_a[];
     int $temp_shuzi=`tokenize  $bianliang_B[0]  "[" $temp_xian_a`;
     $temp_shuzi=`tokenize  $temp_xian_a[1]  "]" $temp_xian_a`;
     int $edge=$temp_xian_a[0];//提取到模型的边索引
     //setAttr ($qvxian_wangge+".edgeIndex[0]")  $edge;
 
     //select -r $cu_con;   
     addAttr -ln "edgeindex"  -at long  -dv $edge -k 1  $cu_con;//边索引报存到变量
     addAttr -ln "parameter"  -at double  -dv 0.5 -k 1  $cu_con;
     setAttr -keyable false -channelBox true ($cu_con+".edgeindex");
     setAttr -keyable false -channelBox true ($cu_con+".parameter");
     connectAttr -force ($cu_con+".edgeindex")  ($qvxian_wangge+".edgeIndex[0]") ;//曲线跟随网格
     
     //print  $dian_neme;
   //print  $temp_xian_a[0];
   
    int $panduan_temp=`objExists ($cu_con+"_pointOnCurveInfo_grppos")`;
    if($panduan_temp==1){delete ($cu_con+"_pointOnCurveInfo_grppos");}
    createNode "pointOnCurveInfo" -n ($cu_con+"_pointOnCurveInfo_grppos");//创建曲线最近点节点
    connectAttr -force ( $qvxian_A_shape+".worldSpace[0]") ($cu_con+"_pointOnCurveInfo_grppos.inputCurve");
    connectAttr -f  ($cu_con+"_pointOnCurveInfo_grppos.position") ($cu_con_Grp+".translate");//控制控制器的最上层的组
    
    setAttr ($cu_con+"_pointOnCurveInfo_grppos.turnOnPercentage") 1;
    connectAttr -force ($cu_con+".parameter")  ($cu_con+"_pointOnCurveInfo_grppos.parameter");//控制器的属性控制器曲线的parameter
      delete $wangge_zuijingdian;
  }
  else///////////////////////如果是毛囊控制控制器的组/////////////////////////////
      {//////////////////////创建毛囊连接到模型/////////////////////////
          string$maonang_name=($cu+$y+"_maonangShape");
         createNode "follicle" -n $maonang_name;//创建毛囊
         select -r $maonang_name;
         connectAttr -f ($mash_shape_A+".outMesh") ($maonang_name+".inputMesh");
         connectAttr -f ($mash_shape_A+".worldMatrix[0]") ($maonang_name+".inputWorldMatrix");
         string $mangnang_T[]=`listRelatives -p $maonang_name`; 
         string$mangnang_weiyi=$mangnang_T[0];
         connectAttr -f ($maonang_name+".outTranslate") ($mangnang_weiyi+".translate");
         connectAttr -f ($maonang_name+".outRotate") ($mangnang_weiyi+".rotate");
       
       /////////////////////////////////////
        string $wangge_zuijingdian=($cu+"closestPointOnMesh"+$y);
        int $panduan_temp=`objExists $wangge_zuijingdian`;
        if($panduan_temp==1){delete $wangge_zuijingdian;}

        createNode "closestPointOnMesh" -n $wangge_zuijingdian;//创建模型最近点节点
        connectAttr -force ($mash_shape_A+".worldMesh[0]") ($wangge_zuijingdian+".inMesh");
        
         
        spaceLocator -p 0 0 0 -n ($maonang_name+"_temp_loc");
        group -n ($maonang_name+"_temp_loc_A");
        delete`pointConstraint  $cu_con_Grp ($maonang_name+"_temp_loc_A")`;
        delete`normalConstraint $mensh ($maonang_name+"_temp_loc_A")`;
        delete`geometryConstraint $mensh ($maonang_name+"_temp_loc_A")`;
        setAttr ($maonang_name+"_temp_loc.translateX") 0.01;

        float$pos_temp_weizhi[]=`xform -ws -q -t  ($maonang_name+"_temp_loc")`;
        setAttr -type float3 ($wangge_zuijingdian+".inPosition") $pos_temp_weizhi[0] $pos_temp_weizhi[1] $pos_temp_weizhi[2];
        float$U=`getAttr ($wangge_zuijingdian+".parameterU")`;
        float$V=`getAttr ($wangge_zuijingdian+".parameterV")`;
        delete ($maonang_name+"_temp_loc_A");
        setAttr($maonang_name+".parameterV") $V;
        setAttr($maonang_name+".parameterU") $U;//给毛囊的uv赋值
        
        
        string$maonangzu=($mensh+"_maonang_grp");
        $ex=`objExists $maonangzu`;
        if($ex==0)
          {
              group -empty -n $maonangzu ;
              setAttr ($maonangzu+".visibility") 0;
              setAttr -lock true ($maonangzu+".v");
          }//创建组
       
        parent $mangnang_weiyi $maonangzu;
        connectAttr -f  ($mangnang_weiyi+".t")  ($cu_con_Grp+".translate") ;//控制控制器的最上层的组
          delete $wangge_zuijingdian;
       }
   int $panduan_temp=`objExists ($cu+"_temp_fanxiangA")`;
   if($panduan_temp==1){delete ($cu+"_temp_fanxiangA");}
    shadingNode -asUtility plusMinusAverage -n ($cu+"_temp_fanxiangA");//创建加减节点
    int $panduan_temp=`objExists ($cu+"_temp_fanxiangmultiplyDivideA")`;
    if($panduan_temp==1){delete ($cu+"_temp_fanxiangmultiplyDivideA");}
    shadingNode -asUtility multiplyDivide -n ($cu+"_temp_fanxiangmultiplyDivideA");//创建乘除节点
    setAttr -type float3($cu+"_temp_fanxiangmultiplyDivideA.input2") -1 -1 -1;
    connectAttr -force ($cu+"_temp_fanxiangA.output3D") ($cu+"_temp_fanxiangmultiplyDivideA.input1");
    connectAttr -force  ($cu+"_temp_fanxiangmultiplyDivideA.output") ($cu_con_Grp_REV+".t");

   for($i=0;$i<size($bianliang_tempA);$i++) 
   {
     connectAttr -force   ($bianliang_tempA[$i]+".t") ($cu+"_temp_fanxiangA.input3D["+$i+"]");
    }

   string $cu_t[]=`listRelatives -p  $cu`; 
   $ex=`objExists $cu_t[0]`;//查询这个物体是否纯在
   if($ex==1){parent $cu_loc_grp_A $cu_t[0];}
   //parent $cu  $cu_loc_temp;
   pointConstraint  $cu_loc_temp $cu ;
   scaleConstraint -mo  $cu_loc_temp $cu ;
   if($ex_A==1){ orientConstraint  $cu_loc_temp $cu ;}


 }
 setAttr ($mensh+".v") $vis ;
}



 

global proc zxb_chuangjianqiuxingkongzhiqi(string  $cu_con,float $con_size)
{

 ///////////////////////////////创建控制器//////////////////////////////////
   circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $con_size -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n$cu_con ; 
    string $qvxian_shape[]=`listRelatives -s  ($cu_con )`; 
    setAttr ($qvxian_shape[0]+".overrideEnabled") 1;
    setAttr ($qvxian_shape[0]+".overrideColor")22;
   duplicate -rr -n ($cu_con+"temp");
   duplicate -rr -n ($cu_con+"temp_A");
   select -r($cu_con+"temp_A");
   rotate -r -os -fo 0 0 90 ;
   FreezeTransformations;
    select -r($cu_con+"temp");
   rotate -r -os -fo 90 0 90 ;
   FreezeTransformations;
   string $qvxian_shape[]=`listRelatives -s  ($cu_con+"temp")`; 
   setAttr ($qvxian_shape[0]+".overrideEnabled") 1;
   setAttr ($qvxian_shape[0]+".overrideColor")22;
   select -r $qvxian_shape[0];
   select -add $cu_con;
   parent -r -s ;
   delete ($cu_con+"temp");
   string $qvxian_shape[]=`listRelatives -s  ($cu_con+"temp_A")`; 
   setAttr ($qvxian_shape[0]+".overrideEnabled") 1;
   setAttr ($qvxian_shape[0]+".overrideColor")22;
   select -r $qvxian_shape[0];
   select -add $cu_con;
   parent -r -s ;
   delete ($cu_con+"temp_A");
   select -r $cu_con;
   
   }
   
   
   
   
   


global proc zxb_maonangchauxnfuzhao_obj_mode()
{
  string $bianliang[]=`ls -sl`;//选中簇
  string$obj_name=$bianliang[0];
   textFieldGrp -e -tx $obj_name zxb_biaoqingciji_mode;
}
global proc zxb_maonangchauxnfuzhao_obj_xuanzhuan()
{
  string $bianliang[]=`ls -sl`;//选中簇
  string$obj_name=$bianliang[0];
   textFieldGrp -e -tx $obj_name zxb_biaoqingciji_xuanzhuan_obj;
}



 
global proc zxb_ciji_gensui_proc_trs(){    
//////////////控制器驱动//////////////////
string $bianliang[]=`ls -sl`;//选中控制器  最后选中主控制器
int $size_con=size($bianliang);
string $zuiba_con=$bianliang[($size_con-1)];//嘴角控制器
int $con_num=($size_con-1);
int$weiyi= `checkBox -q -value  zxb_biaoqingciji_gensui_obj_panduan_trs`;
int$xuanzhun= `checkBox -q -value  zxb_biaoqingciji_gensui_obj_panduan_rot`;
int$suofang= `checkBox -q -value  zxb_biaoqingciji_gensui_obj_panduan_scl`;

int$trs=$weiyi;
int$rot=$xuanzhun;
int$scl=$suofang;
int$ex;
for ($i=0;$i<$con_num;$i++)
{ 
   string $con=$bianliang[$i];
   select -r $con;
   string$weiyi="";
   
   ///////////////////位移//////////////////////////////////////
   if($trs==1)
   {
    $weiyi="weiyi";
    string $jianjianjiedian[]= `listConnections -d 1 -s 0 -scn 1($con+".zhaodao_trs")`;
    string$jiedian=$jianjianjiedian[0];
    string $kongzhiqi=$zuiba_con+$weiyi;
    string $kongzhiqi_X=$zuiba_con+$weiyi+"_X";
    string $kongzhiqi_Y=$zuiba_con+$weiyi+"_Y";
    string $kongzhiqi_Z=$zuiba_con+$weiyi+"_Z";
    
    
    $ex=`objExists ($con+"."+$kongzhiqi)`;
    if($ex==0){
    addAttr -ln $kongzhiqi -at bool  -dv 0 -k 1 $con;
    setAttr -lock true ($con+"."+$kongzhiqi);

    addAttr -ln $kongzhiqi_X -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Y -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Z -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    //setAttr -lock true ($con+"."+$kongzhiqi_X);
    //setAttr -lock true ($con+"."+$kongzhiqi_Y);
    //setAttr -lock true ($con+"."+$kongzhiqi_Z);
    setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_X);
   setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Y);
    setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Z);

    
     string $multiplyDivide_AA=($con+$kongzhiqi+"_multiplyDivide_AA");
    int $panduan=`objExists $multiplyDivide_AA`;
    if($panduan==1){delete $multiplyDivide_AA; }
    shadingNode -asUtility multiplyDivide -n $multiplyDivide_AA;//创建乘除节点
    connectAttr -force  ($con+"."+$kongzhiqi_X)  ($multiplyDivide_AA+".input1X");
    connectAttr -force  ($con+"."+$kongzhiqi_Y)  ($multiplyDivide_AA+".input1Y");
    connectAttr -force  ($con+"."+$kongzhiqi_Z)  ($multiplyDivide_AA+".input1Z");
    
    connectAttr -force  ($zuiba_con+".tx")  ($multiplyDivide_AA+".input2X");
    connectAttr -force  ($zuiba_con+".ty")  ($multiplyDivide_AA+".input2Y");
    connectAttr -force  ($zuiba_con+".tz")  ($multiplyDivide_AA+".input2Z");
    
    
     string $inpute3d[]= `listConnections -d 0 -s 1 -scn 1($jiedian+".input3D")`;
     int$index=size($inpute3d);
     
     connectAttr -force   ($multiplyDivide_AA+".output") ($jiedian+".input3D["+$index+"]");
     //string $a=($multiplyDivide_AA+".output"); 
    }
   }
   
   
   ///////////////////旋转//////////////////////////
   
    if($rot==1)
   {
    $weiyi="suofang";
    string $jianjianjiedian[]= `listConnections -d 1 -s 0 -scn 1($con+".zhaodao_rot")`;
    string$jiedian=$jianjianjiedian[0];
    string $kongzhiqi=$zuiba_con+$weiyi;
    string $kongzhiqi_X=$zuiba_con+$weiyi+"_X";
    string $kongzhiqi_Y=$zuiba_con+$weiyi+"_Y";
    string $kongzhiqi_Z=$zuiba_con+$weiyi+"_Z";
    
    
    $ex=`objExists ($con+"."+$kongzhiqi)`;
    if($ex==0){
    addAttr -ln $kongzhiqi -at bool  -dv 0 -k 1 $con;
    setAttr -lock true ($con+"."+$kongzhiqi);

    addAttr -ln $kongzhiqi_X -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Y -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Z -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
   // setAttr -lock true ($con+"."+$kongzhiqi_X);
    //setAttr -lock true ($con+"."+$kongzhiqi_Y);
    //setAttr -lock true ($con+"."+$kongzhiqi_Z);
    
   setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_X);
   setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Y);
   setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Z);
    
    
    string $multiplyDivide_AA=($con+$kongzhiqi+"_multiplyDivide_AA");
    int $panduan=`objExists $multiplyDivide_AA`;
    if($panduan==1){delete $multiplyDivide_AA; }
    shadingNode -asUtility multiplyDivide -n $multiplyDivide_AA;//创建乘除节点
    
    connectAttr -force  ($con+"."+$kongzhiqi_X)  ($multiplyDivide_AA+".input1X");
    connectAttr -force  ($con+"."+$kongzhiqi_Y)  ($multiplyDivide_AA+".input1Y");
    connectAttr -force  ($con+"."+$kongzhiqi_Z)  ($multiplyDivide_AA+".input1Z");
    
    
    
    
    
     string $plusMinusAverage_AA=($con+$kongzhiqi+"_plusMinusAverage_AA");
    int $panduan=`objExists $plusMinusAverage_AA`;
    if($panduan==1){delete $plusMinusAverage_AA; }
    shadingNode -asUtility plusMinusAverage -n $plusMinusAverage_AA;//创建加减节点
     connectAttr -force  ($zuiba_con+".s")  ($plusMinusAverage_AA+".input3D[0]");
     setAttr -type float3 ($plusMinusAverage_AA+".input3D[1]") 1 1 1;
     setAttr ($plusMinusAverage_AA+".operation") 2;
     connectAttr -force   ($plusMinusAverage_AA+".output3D") ($multiplyDivide_AA+".input2");


    
     string $inpute3d[]= `listConnections -d 0 -s 1 -scn 1($jiedian+".input3D")`;
     int$index=size($inpute3d);
     
     connectAttr -force   ($multiplyDivide_AA+".output") ($jiedian+".input3D["+$index+"]");
     //string $a=($multiplyDivide_AA+".output");
    }
   }
   
   
   /////////////////////////缩放///////////////////////////////
   
   
   
    if($scl==1)
   {
    $weiyi="xuanzhuan";
    string $jianjianjiedian[]= `listConnections -d 1 -s 0 -scn 1($con+".zhaodao_scl")`;
    string$jiedian=$jianjianjiedian[0];
    string $kongzhiqi=$zuiba_con+$weiyi;
    string $kongzhiqi_X=$zuiba_con+$weiyi+"_X";
    string $kongzhiqi_Y=$zuiba_con+$weiyi+"_Y";
    string $kongzhiqi_Z=$zuiba_con+$weiyi+"_Z";
    
    
    $ex=`objExists ($con+"."+$kongzhiqi)`;
    if($ex==0){
    addAttr -ln $kongzhiqi -at bool  -dv 0 -k 1 $con;
    setAttr -lock true ($con+"."+$kongzhiqi);

    addAttr -ln $kongzhiqi_X -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Y -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    addAttr -ln $kongzhiqi_Z -at double  -dv 0.5 -min -1 -max 2 -k 1 $con;
    //setAttr -lock true ($con+"."+$kongzhiqi_X);
    //setAttr -lock true ($con+"."+$kongzhiqi_Y);
   // setAttr -lock true ($con+"."+$kongzhiqi_Z);
    
    setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_X);
    setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Y);
   setAttr -keyable false -channelBox true ($con+"."+$kongzhiqi_Z);
    
     string $multiplyDivide_AA=($con+$kongzhiqi+"_multiplyDivide_AA");
    int $panduan=`objExists $multiplyDivide_AA`;
    if($panduan==1){delete $multiplyDivide_AA; }
    shadingNode -asUtility multiplyDivide -n $multiplyDivide_AA;//创建乘除节点
    connectAttr -force  ($con+"."+$kongzhiqi_X)  ($multiplyDivide_AA+".input1X");
    connectAttr -force  ($con+"."+$kongzhiqi_Y)  ($multiplyDivide_AA+".input1Y");
    connectAttr -force  ($con+"."+$kongzhiqi_Z)  ($multiplyDivide_AA+".input1Z");
    
    connectAttr -force  ($zuiba_con+".rx")  ($multiplyDivide_AA+".input2X");
    connectAttr -force  ($zuiba_con+".ry")  ($multiplyDivide_AA+".input2Y");
    connectAttr -force  ($zuiba_con+".rz")  ($multiplyDivide_AA+".input2Z");
    
    
     string $inpute3d[]= `listConnections -d 0 -s 1 -scn 1($jiedian+".input3D")`;
     int$index=size($inpute3d);
     
     connectAttr -force   ($multiplyDivide_AA+".output") ($jiedian+".input3D["+$index+"]");
     //string $a=($multiplyDivide_AA+".output");
     }
   }
   
   
   
   
    
}

}

////////////////////////////////////////////////创建嘴巴次级混合变形//////////////////////////////////////////////////


global proc zxb_hunhebianxing_zuibaciji_A_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建嘴巴次级混合变形" zxb_jisuanlianbu_ciji_Win;

columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建次级控制器--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入混合变形基础" -tx "模型" -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;



textFieldGrp  -cw2 100 130 -l "载入干净的模型" -tx "模型" -ed 0  zxb_zairumode_A;
string$modea="zxb_zairumode_A";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$modea+"\")") ;


setParent ..; 
button -l "创建混合变形" -c "zxb_hunhebianx_zuibaciji_proc";


showWindow  ;
}





global proc zxb_hunhebianx_zuibaciji_proc()
{
 string $xiaba_mode=`textFieldGrp -q -tx  zxb_zairumode`;
  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_mode" " $bns`;//分离字符串存到变量
  string$mode=$bns[0];
  
  
  
   string $xiaba_mode_A=`textFieldGrp -q -tx  zxb_zairumode_A`;
  string$modes[];
  clear $modes;
  int $nemt=`tokenize $xiaba_mode_A" " $modes`;//分离字符串存到变量
  string$modeA=$modes[0];
  
  string$zuibaciji=($mode+"_zuibaciji");
 
  select -r $modeA;
  duplicate -rr -n $zuibaciji;
  select -r $zuibaciji;
  DeleteHistory;
 string $org[]=`listRelatives -s $zuibaciji`; 
 int$sss=size($org);
 if($sss==2)
   { select -r $org[1];
   delete $org[1];
   }

  string$bss="";
  
   string$lishi[]=`listHistory   $mode`;
    for ($ll=0;$ll<size($lishi);$ll++)
        {
            select -r $lishi[$ll];
            string$temp[]=`ls -sl `;
            int$strSize=sizeBytes ($bss);//字符串有多少个字
            if($strSize>1)break;
            string$type=`nodeType  $temp[0]`;
            if($type=="blendShape")
              {
              $bss=$lishi[$ll];
              }
            
        }
  string$shuxing_A[]=`listAttr -k -m $bss`;//列出属性 
  string$bs_sizee[];
  clear$bs_sizee;
for ($ll=1;$ll<(size($shuxing_A)-1);$ll++)
    {
     int$size=size($bs_sizee);
     string$temp=$shuxing_A[$ll];
     $bs_sizee[$size]=$temp;
     }     
int$indxe=size($bs_sizee);
 blendShape -e  -t $mode $indxe $zuibaciji 1 $bss;
 setAttr ($bss+"."+$zuibaciji) 1;
  string $grpA[]=`listRelatives -p $mode`; 
  string $grpB[];
  clear$grpB;
  int$pp=size($grpA); 
  if($pp>0)
  {
  $grpB =`listRelatives -p $grpA[0]`;
  }
  int$qq=size($grpB); 
  if($qq>0)
  {
  parent $zuibaciji $grpB[0];
  }
  
}






/////////////////////////////
global proc zxb_jisuanlianbu_ciji_proc_zairuguge()
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) zxb_jisuanlianbu_ciji_guge_A;
}


global proc zxb_jisuanlianbu_ciji_proc_zairuguge_A()
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) zxb_jisuanlianbu_ciji_guge_B;
}


global proc zxb_jisuanlianbu_ciji_proc_zairuguge_B()
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) zxb_jisuanlianbu_ciji_guge_C;
}












global proc  zxb_zuiba_jisuanquanzhong()
{
//global int $zxb_i;
string$BNS_temp_s=`textFieldGrp -q -tx zxb_jisuanlianbu_ciji_guge_B`;
string$BNS_temp[]= stringToStringArray($BNS_temp_s, " ");


string$BNS_temp_MM=`textFieldGrp -q -tx zxb_jisuanlianbu_ciji_guge_A`;
string$BNS_temp_M[]= stringToStringArray($BNS_temp_MM, " ");


string $zxb_bns[]=$BNS_temp;//骨骼
string$zxb_zuiba;//要抢的权重
string $zxb_skinves[];


string$zxb_zuiba=$BNS_temp_M[0];//要抢的权重
string $qvxian_temp="qvxianzuiba_temp";//曲线  


    
ConvertSelectionToVertices;
string $bian[]=`ls -sl -fl `;
string $qvxian_temp_cv= ($qvxian_temp+".cv[0:999999999]");
select -r  $qvxian_temp_cv;


string $qvxian_temp_cvs[]=`ls -sl -fl `;
int $cvshu=size($qvxian_temp_cvs);//CV数量
int $bnsize=size($zxb_bns); //关节数量
if($cvshu!=$bnsize){error "关节数量 与曲线CV点的数量不一致";}


float $bnsatpos[]=`xform -q -ws -t $zxb_bns[0]`;
float $qvxiansatpos[]=`xform -q -ws -t  $qvxian_temp_cvs[0]`;
//float $bnsendpos[]=`xform -q -ws -t $zxb_bns[(size($zxb_bns)-1)]`;
float $qvxianendpos[]=`xform -q -ws -t  $qvxian_temp_cvs[(size($qvxian_temp_cvs)-1)]`;
float $kaishidis=mag(<< $bnsatpos[0], $bnsatpos[1], $bnsatpos[2]>>-<< $qvxiansatpos[0], $qvxiansatpos[1], $qvxiansatpos[2]>>);


float $enddis=mag(<< $bnsatpos[0], $bnsatpos[1], $bnsatpos[2]>>-<< $qvxianendpos[0],  $qvxianendpos[1],  $qvxianendpos[2]>>);


if ($kaishidis> $enddis)
{
    reverseCurve -ch 0 -rpo 1 $qvxian_temp;
}




string $poscv="";
float $dis=100000000;


 for ($i=0;$i<size($bian);$i++)
 {
     
     float $pos_A[]=`xform -q -ws -t $bian[$i]`;
   for ($ii=0;$ii<size($qvxian_temp_cvs);$ii++)
   {
    float $pos_B[]=`xform -q -ws -t $qvxian_temp_cvs[$ii]`;
    float $cdis=mag(<<$pos_A[0],$pos_A[1],$pos_A[2]>>-<<$pos_B[0],$pos_B[1],$pos_B[2]>>);
    
    if($cdis<$dis)
    {
     $dis=$cdis;
      $poscv=$qvxian_temp_cvs[$ii];
     }
    }
  }






string $qvxian_cv[];
//select -r $poscv;


int $aaaaaa=`tokenize $poscv "["  $qvxian_cv`;
int $aaaaaa=`tokenize $qvxian_cv[1] "]"  $qvxian_cv`;




int $zxb_i =$qvxian_cv[0];




string $bn= $zxb_bns[$zxb_i];
string $modetemp[];
int $temp_int=`tokenize $bian[0] "." $modetemp `;
string $modo=$modetemp[0];
string $sknclustet=`findRelatedSkinCluster $modo`;
//setAttr ($sknclustet+".normalizeWeights") 2;


 for ($ll=0;$ll<size($bian);$ll++)
 {
     int$size=size($zxb_skinves);
     string $temp_dingdian=$bian[$ll];
     $zxb_skinves[$size]=$bian[$ll];
     float$quznzhong=`skinPercent  -t $zxb_zuiba -q   $sknclustet $temp_dingdian`;
     if($quznzhong>0){skinPercent  -tv $bn  $quznzhong  $sknclustet $temp_dingdian;}


 
 }


doMenuComponentSelection ( $modo,"edge");
}








global proc  zxb_zuiba_jisuanquanzhong_chuangjianqvxian()
{
   int$panduan=` checkBox -q -v  zxb_jingxiang_qvxian`;
  

   if($panduan==1)
      {
    string $edge_bian[]=`ls -sl -fl `;
    for ($i=0;$i<size( $edge_bian);$i++)
    {
    float $bian_pos_A[]=`xform -q -ws -t  $edge_bian[$i]`;
    if($bian_pos_A[0]<-0.0001) {select -d  $edge_bian[$i];}
    if($bian_pos_A[3]<-0.0001) {select -d  $edge_bian[$i];}
    }
    
    $edge_bian=`ls -sl -fl `;
    polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n qvxianzuiba_temp;
    DeleteHistory;
    }else
         {
             string $edge_bian[]=`ls -sl `;
             rename $edge_bian[0] "qvxianzuiba_temp";


           }
    
}








global proc  zxb_zuiba_jisuanquanzhong_pinghua()
{
    
  string$BNS_temp_s=`textFieldGrp -q -tx zxb_jisuanlianbu_ciji_guge_B`;
  string$BNS_temp[]= stringToStringArray($BNS_temp_s, " ");
  string$BNS_temp_MM=`textFieldGrp -q -tx zxb_jisuanlianbu_ciji_guge_A`;
  string$BNS_temp_M[]= stringToStringArray($BNS_temp_MM, " ");
  
  string$BNS_temp_ROOT=`textFieldGrp -q -tx zxb_jisuanlianbu_ciji_guge_C`;
  string$BNS_temp_root[]= stringToStringArray($BNS_temp_ROOT, " ");
  string $zxb_bns[]=$BNS_temp;//骨骼 //按顺序选骨骼 上个程序的名字
  string$zxb_zuiba=$BNS_temp_M[0];//要抢的权重
  string $root=$BNS_temp_root[0];
  string $mode[]=`ls -sl`;//选中模型
  string $modo_name=$mode[0];//模型名字
  
  int$intpos=`checkBox -q -v zxb_jingxiang`;
  int$jingxiang=$intpos;
  string $sknclustet=`findRelatedSkinCluster  $modo_name`;




//setAttr ($sknclustet+".normalizeWeights") 2;
//select -r ($modo_name+".vtx[0:9999999999]");
//string $mode_dian_[]=`ls -sl -fl `;


/////////////////////////////主关节影响的权重顶点/////////////////////////////////////////
  int $mode_dian[]=`polyEvaluate -v   $modo_name`;
  
  string $dingdian_mode[];
  clear $dingdian_mode ;
  global string $gSelect;
  global string $gMainProgressBar;
  setToolTo $gSelect;
  progressBar -e -st ("查找顶点...") -bp -ii 1 -min 0 -max $mode_dian[0] $gMainProgressBar;
  for ($i=0;$i<$mode_dian[0];$i++)
    {
     if(`progressBar -q -ic $gMainProgressBar`)
     break;
    progressBar -e -s 1 $gMainProgressBar;  
    string $mode_dianxu=($modo_name+".vtx["+$i+"]");
    float$quznzhong=`skinPercent  -t $zxb_zuiba -q   $sknclustet $mode_dianxu`;
    if($quznzhong>0)
      {
      //skinPercent  -tv $bn  $quznzhong  $sknclustet $mode_dianxu;
      int$size=size($dingdian_mode);
      $dingdian_mode[$size]=$mode_dianxu;
      }


   }
    progressBar -e -ep $gMainProgressBar;
    select -r $dingdian_mode;
    
    /////////////////////////////次级关节影响的权重顶点/////////////////////////////////////////






  string $dingdian_mode_ciji[];
  clear $dingdian_mode_ciji ;
  global string $gSelect;
  global string $gMainProgressBar;
  setToolTo $gSelect;
  progressBar -e -st ("查找顶点...") -bp -ii 1 -min 0 -max `size($zxb_bns)` $gMainProgressBar;
  
  
  for ($j=0;$j<size($zxb_bns);$j++)
  {
    if(`progressBar -q -ic $gMainProgressBar`)
    break;
    progressBar -e -s 1 $gMainProgressBar;  
   string $ciji_bn=$zxb_bns[$j];
   for ($i=0;$i<$mode_dian[0];$i++)
    {


        string $mode_dianxu=($modo_name+".vtx["+$i+"]");
        float$quznzhong=`skinPercent  -t $ciji_bn -q   $sknclustet $mode_dianxu`;
        if($quznzhong>0)
        {
          //skinPercent  -tv $bn  $quznzhong  $sknclustet $mode_dianxu;
          int$size=size($dingdian_mode_ciji);
          $dingdian_mode_ciji[$size]=$mode_dianxu;
        }
    
   }


  } 
   progressBar -e -ep $gMainProgressBar;
   
   
   
   ////////////////////////////减选右边的顶点/////////////////////////////////
   select -r  $dingdian_mode;
   string $temp_dingdian[]=`ls -sl -fl `;
   
  global string $gSelect;
  global string $gMainProgressBar;
  setToolTo $gSelect;
  progressBar -e -st ("计算顶点顶点...") -bp -ii 1 -min 0 -max `size($temp_dingdian)` $gMainProgressBar;
    for ($a=0;$a<size($temp_dingdian);$a++)
    {
         if(`progressBar -q -ic $gMainProgressBar`)
         break;
          progressBar -e -s 1 $gMainProgressBar;  
        string $temp_diangdian=$temp_dingdian[$a];
        float $temp_pos_A[]=`xform -q -ws -t  $temp_diangdian`;
        if($temp_pos_A[0]<0.00001){select -d $temp_diangdian;}
    
    }
     progressBar -e -ep $gMainProgressBar;
     
     ///////////////////////备份总关节的模型权重///////////////////////////////
   
     
     int $ex=`objExists ($modo_name+"_temp")`;
     if($ex==0)
     {
          select -r  $modo_name;
           duplicate -rr -n  ($modo_name+"_temp");
            
           string $All_bn[]=`skinCluster -q  -inf  $sknclustet`;
           select -r  $All_bn ($modo_name+"_temp");
           skinCluster;
          
            select -r $modo_name ;
            select -add ($modo_name+"_temp");
            CopySkinWeights;
            print "蒙皮已备份";
            setAttr ($modo_name+"_temp.visibility") 0;


      }
    
     //////////////////平滑权重///////////////////////////////////
     
       select -r $dingdian_mode;
       
     for ($a=0;$a<10;$a++){weightHammerVerts;}
      select -r $mode;
      ///////////////////////////找到跟关节//////////////////////////////////
    string $sknclustet_temp_A=`findRelatedSkinCluster ($modo_name+"_temp")`;
    string $All_bn_A[]=`skinCluster -q  -inf $sknclustet_temp_A`;
    string $root_="";
    int $daixoa=0;
  global string $gSelect;
  global string $gMainProgressBar;
  setToolTo $gSelect;
  progressBar -e -st ("查找跟关节...") -bp -ii 1 -min 0 -max `size($All_bn_A)` $gMainProgressBar;
    for ($j=0;$j<size($All_bn_A);$j++)
    {
       if(`progressBar -q -ic $gMainProgressBar`)
    break;
    progressBar -e -s 1 $gMainProgressBar;  
   string$bn_a=$All_bn_A[$j];
   
   string $dangqian_dingdian[];
   clear $dangqian_dingdian;
     for ($i=0;$i<$mode_dian[0];$i++)
      {


           string $mode_dianxu=($modo_name+"_temp.vtx["+$i+"]");
           
           float$quznzhong=`skinPercent  -t $bn_a -q  $sknclustet_temp_A $mode_dianxu`;
           if($quznzhong>0)
            {
            
              int $size=size($dangqian_dingdian);
             $dangqian_dingdian[$size]=$mode_dianxu;
            }
    
      }
      int $size_a=size($dangqian_dingdian);
//print $daixoa;
//print $size_a;
      if($size_a>$daixoa)
      {  
        $root_=$bn_a;
         $root= $root_;
        $daixoa=$size_a;
     
       
       }
    }
  progressBar -e -ep $gMainProgressBar;


print $root_;






//////////////////////////跟关节的权重复制回去//////////////////////////////////////////
  global string $gSelect;
  global string $gMainProgressBar;
  setToolTo $gSelect;
  progressBar -e -st ("计算顶点顶点...") -bp -ii 1 -min 0 -max $mode_dian[0] $gMainProgressBar;
    
     for ($ll=0;$ll<$mode_dian[0];$ll++)
 {
      if(`progressBar -q -ic $gMainProgressBar`)
      break;
      progressBar -e -s 1 $gMainProgressBar;  
      string $mode_temp_dindian=($modo_name+"_temp.vtx["+$ll+"]");
     float$quznzhong=`skinPercent  -t $root -q  $sknclustet_temp_A $mode_temp_dindian`;
     if($quznzhong>0){skinPercent  -tv $root  $quznzhong  $sknclustet ($modo_name+".vtx["+$ll+"]");}


 
 }
 select -r $modo_name;
 if($jingxiang==1)
 { doMirrorSkinWeightsArgList( 2, { " -mirrorMode YZ -surfaceAssociation closestPoint -influenceAssociation oneToOne" } );


 }


   progressBar -e -ep $gMainProgressBar;
 delete ($modo_name+"_temp");


}


////////////////////////////////////提取嘴巴曲线///////////////////////////////////////////////////////////////////////////////






global proc zxb_zairufangfa_A_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}





/////////////////提取张嘴曲线///////////////////////////
global proc zxb_zuiba_tiqvqvxianfangfa_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;
string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];


string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
   print $R;
   print $L;
   select -cl  ; 
   select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
string$head_qvxian=$Axianxian+"UP_A";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;


select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
string$head_qvxian_b=$Axianxian+"DW_A";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;
}








/////////////////////提取闭嘴曲线//////////////////////
global proc zxb_zuiba_tiqvqvxianfangfa_bizui_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;

string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];

string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
 
 
 
 
select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
zxb_xuanzebutongmoxing_jiluxuanzhededian_a 0 $modess;

string$head_qvxian_c=$Axianxian+"UP";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_c;


select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
zxb_xuanzebutongmoxing_jiluxuanzhededian_a 0 $modess;
string$head_qvxian_d=$Axianxian+"DW";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_d;
 
 
}


///////////////////提取跟随曲线//////////////////////////
global proc zxb_zuiba_tiqvqvxianfangfa_gnesui_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;


string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];
  
string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
   print $R;
   print $L;
   select -cl  ; 
   select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
    string$head_qvxian=$Axianxian+"UP_D";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;
DeleteHistory;

select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
string$head_qvxian_b=$Axianxian+"DW_D";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;
DeleteHistory;
}












global proc zxb_xuanzebutongmoxing_jiluxuanzhededian_a(int $panduan, string $mesh_name)
{
    
   //string $mesh_name="head_mesh_zuiba_nianlian";
   string $bianliang[]=`ls -sl -fl`;

 //int $panduan=0;
   string $dian="vtx";
   if($panduan==0)
    {
    $dian="e";
    }else
    {
     $dian="vtx";
     }

   select -cl  ;


  for ($ll=0;$ll<size($bianliang);$ll++)
  {
    string $temp_name[];
    int $chafen=`tokenize $bianliang[$ll] "[" $temp_name`;
    int $chafen=`tokenize $temp_name[1] "]" $temp_name`;
    int $xuhao=$temp_name[0];
    select -add ($mesh_name+"."+$dian+"["+$xuhao+"]");
   // print  $temp_name;
    
   }
}


//////////////////////////////////////////////////////////////创建下巴整体混合变形////////////////////////////////////////////////////////////////////////




global proc zxb_hunhebianxing_xiabazhengti_A_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建嘴巴次级混合变形" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建下巴混合变形--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入混合变形基础" -tx " " -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;



textFieldGrp  -cw2 100 130 -l "载入干净的模型" -tx " " -ed 0  zxb_zairumode_A;
string$modea="zxb_zairumode_A";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$modea+"\")") ;

setParent ..; 
button -l "创建混合变形" -c "zxb_hunhebianx_xiabazhengti_proc";
showWindow  ;
}





global proc zxb_hunhebianx_xiabazhengti_proc()
{
 string $xiaba_mode=`textFieldGrp -q -tx  zxb_zairumode`;
  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_mode" " $bns`;//分离字符串存到变量
  string$mode=$bns[0];
  
  
  
   string $xiaba_mode_A=`textFieldGrp -q -tx  zxb_zairumode_A`;
  string$modes[];
  clear $modes;
  int $nemt=`tokenize $xiaba_mode_A" " $modes`;//分离字符串存到变量
  string$modeA=$modes[0];
  
  string$zuibaciji=($mode+"_xiabazhengti");
 
  select -r $modeA;
  duplicate -rr -n $zuibaciji;
  select -r $zuibaciji;
  DeleteHistory;
 string $org[]=`listRelatives -s $zuibaciji`; 
 int$sss=size($org);
 if($sss==2)
   { select -r $org[1];
   delete $org[1];
   }

  string$bss="";
  
   string$lishi[]=`listHistory   $mode`;
    for ($ll=0;$ll<size($lishi);$ll++)
        {
            select -r $lishi[$ll];
            string$temp[]=`ls -sl `;
            int$strSize=sizeBytes ($bss);//字符串有多少个字
            if($strSize>1)break;
            string$type=`nodeType  $temp[0]`;
            if($type=="blendShape")
              {
              $bss=$lishi[$ll];
              }
            
        }
  string$shuxing_A[]=`listAttr -k -m $bss`;//列出属性 
  string$bs_sizee[];
  clear$bs_sizee;
for ($ll=1;$ll<(size($shuxing_A)-1);$ll++)
    {
     int$size=size($bs_sizee);
     string$temp=$shuxing_A[$ll];
     $bs_sizee[$size]=$temp;
     }     
int$indxe=size($bs_sizee);
 blendShape -e  -t $mode $indxe $zuibaciji 1 $bss;
 setAttr ($bss+"."+$zuibaciji) 1;
  string $grpA[]=`listRelatives -p $mode`; 
  string $grpB[];
  clear$grpB;
  int$pp=size($grpA); 
  if($pp>0)
  {
  $grpB =`listRelatives -p $grpA[0]`;
  }
  int$qq=size($grpB); 
  if($qq>0)
  {
  parent $zuibaciji $grpB[0];
  }
  
}



////////////////////////////////////////////曲面法线约束物体///////////////////////////////////////////////////////////
global proc zxb_guanjie_jihetiyuwse_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "曲面约束关节" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------曲面约束关节--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 100 130 -l "曲面" -tx "  " -ed 0  zxb_qvmian;
string$zxb_qvmian="zxb_qvmian";
button -l "载曲面" -c ("zxb_zairufangfa_A_proc(\""+$zxb_qvmian+"\")") ;


textFieldGrp  -cw2 100 130 -l "所有关节" -tx "  " -ed 0  zxb_zairubn;
string$bn="zxb_zairubn";
button -l "所有被约束关节" -c ("zxb_zairufangfa_A_proc(\""+$bn+"\")") ;


 setParent..;
button -l "几何体约束" -c "zxb_guanjie_jihetiyuwse_fangfa_proc";

showWindow  ;
}




global proc zxb_guanjie_jihetiyuwse_fangfa_proc()
{
    
    
string$qvmian=`textFieldGrp -q -tx  zxb_qvmian`;
string$bnss=`textFieldGrp -q -tx  zxb_zairubn`;
string$qbns[]= stringToStringArray($bnss, " ");//字符串转化数组
string $din[]=$qbns;//关节存入变量
string $qvmianB=$qvmian;//曲面存入变量
for ($i=0;$i<size($din);$i++)
{
    string $d=$din[$i];
    select -r $qvmianB;
    select -add $d;
    //delete`geometryConstraint -weight 1`;//几何体约束
    delete`normalConstraint -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0`;
}
}



/////////////////////////////////关节绑定次级/////////////////////////////////////////////////////////////////////

global proc zxb_guanjie_guanjiegensuiqvmian_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "关节跟随曲面" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------关节跟随曲面--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 100 130 -l "曲面" -tx "  " -ed 0  zxb_qvmian;
string$zxb_qvmian="zxb_qvmian";
button -l "载曲面" -c ("zxb_zairufangfa_A_proc(\""+$zxb_qvmian+"\")") ;


textFieldGrp  -cw2 100 130 -l "所有关节" -tx "  " -ed 0  zxb_zairubn;
string$bn="zxb_zairubn";
button -l "所有被约束关节" -c ("zxb_zairufangfa_A_proc(\""+$bn+"\")") ;


 setParent..;
button -l "曲面约束定位器" -c "zxb_guanjie_qvmianyuesudingweiqi_fangfa_proc";
button -l "创建次级控制器" -c "zxb_guanjie_chuangjianguanjie_kongzhiqi_fangfa_proc";
showWindow  ;
}





global proc zxb_guanjie_qvmianyuesudingweiqi_fangfa_proc()
{
    
    
string$qvmian=`textFieldGrp -q -tx  zxb_qvmian`;
string$bnss=`textFieldGrp -q -tx  zxb_zairubn`;
string$qbns[]= stringToStringArray($bnss, " ");//字符串转化数组
string $din[]=$qbns;//关节存入变量
//string $qvmianB=$qvmian;//曲面存入变量

//string $din[]=`ls -sl`;//关节存入变量
string $qvmianb=$qvmian;//曲面存入变量
for ($i=0;$i<size($din);$i++)
{
    string $xb_guge=$din[$i];//关节名字变为变量
    spaceLocator -p 0 0 0 -n ($xb_guge+"posloc");//创建定位器
    delete`pointConstraint $xb_guge ($xb_guge+"posloc")`;//骨骼点约束定位器 并删除约束
  
    createNode "closestPointOnSurface" -n($xb_guge+"xb_xiuzi_zuijingdian");//曲面最近点节点
    connectAttr -force ($qvmianb+".worldSpace[0]") ($xb_guge+"xb_xiuzi_zuijingdian.inputSurface");//曲面世界空间链接到最近点节点输入
   
    float $poos[]=`getAttr ($xb_guge+"posloc.t")`;//把定位器的值保存
    setAttr -type float3 ($xb_guge+"xb_xiuzi_zuijingdian.inPosition") $poos[0] $poos[1] $poos[2];//把获取到的值输入位置会返回UV信息
    
    float $poU=`getAttr ($xb_guge+"xb_xiuzi_zuijingdian.parameterU")`;//把最近点节点U的值保存
    float $poV=`getAttr ($xb_guge+"xb_xiuzi_zuijingdian.parameterV")`;//把最近点节点V器的值保存
    
   addAttr -ln "paranU"  -at double  -dv $poU  ($xb_guge+"posloc");//新加一个属性并保存一个值
   addAttr -ln "paranV"  -at double  -dv $poV ($xb_guge+"posloc");//新加一个属性并保存一个值
   setAttr -lock true ($xb_guge+"posloc.paranU");//锁定
   setAttr -lock true ($xb_guge+"posloc.paranV");//锁定
   delete($xb_guge+"xb_xiuzi_zuijingdian");//删除最近点节点
   
   createNode "pointOnSurfaceInfo" -n($xb_guge+"xb_xiuzi_qvmian");//创建曲面节点
   connectAttr -force ($qvmianb+".worldSpace[0]") ($xb_guge+"xb_xiuzi_qvmian.inputSurface");//世界空间链接到曲面节点点输入
   connectAttr -force ($xb_guge+"posloc.paranU")  ($xb_guge+"xb_xiuzi_qvmian.parameterU");//定位器保存的u值链接到曲面信息的U值
   connectAttr -force ($xb_guge+"posloc.paranV")  ($xb_guge+"xb_xiuzi_qvmian.parameterV");//定位器保存的v值链接到曲面信息的v值
   connectAttr -force ($xb_guge+"xb_xiuzi_qvmian.position") ($xb_guge+"posloc.translate");//曲面信息的位置链接给定位器的位置
   
   createNode aimConstraint -n ($xb_guge+"XB_mubiaoyuesu");//创建目标约束
   parent  ($xb_guge+"XB_mubiaoyuesu")($xb_guge+"posloc");//目标约束与定位器做父子约束
   
   connectAttr -force ($xb_guge+"xb_xiuzi_qvmian.normal") ($xb_guge+"XB_mubiaoyuesu.target[0].targetTranslate");//法线链接给目标约束（这一步必须是程序手动连不上）
   connectAttr -force ($xb_guge+"xb_xiuzi_qvmian.tangentU") ($xb_guge+"XB_mubiaoyuesu.worldUpVector");//切线U方向链接到世界上方向向量
   setAttr ($xb_guge+"XB_mubiaoyuesu.aimVector") 0 1 0;//设置目标约束的轴向
   setAttr ($xb_guge+"XB_mubiaoyuesu.upVector") 0 0 -1;//设置目标约束的轴向
   
   connectAttr -force ($xb_guge+"XB_mubiaoyuesu.constraintRotate") ($xb_guge+"posloc.rotate");//目标约束旋转链接给定位器旋转
}

}



global proc zxb_guanjie_chuangjianguanjie_kongzhiqi_fangfa_proc()
{
    
    

string$bnss=`textFieldGrp -q -tx  zxb_zairubn`;
string$qbns[]= stringToStringArray($bnss, " ");//字符串转化数组
string $din[]=$qbns;//关节存入变量

//string $din[]=`ls -sl`;//关节存入变量
for ($i=0;$i<size($din);$i++)
{
   string $xb_bn= $din[$i];//关节名字
   circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1 -n ($xb_bn+"poscon"); objectMoveCommand;//创建圆环
   group -n ($xb_bn+"postA");//打组
   group -n ($xb_bn+"postB");
   group -n ($xb_bn+"postC");
   parentConstraint ($xb_bn+"posloc") ($xb_bn+"postC");//父子约束
   scaleConstraint ($xb_bn+"posloc")  ($xb_bn+"postA");//缩放约束
   //delete`parentConstraint ($xb_bn) ($xb_bn+"postB")`;
  // delete`orientConstraint ($xb_bn+"posloc")  $xb_bn`;//定位器方向约束关节
  // select -r $xb_bn;//关节
   //channelBoxCommand -freezeRotate;
  // makeIdentity -apply true -t 0 -r 1 -s 0 -n 0;
   parentConstraint -mo($xb_bn+"poscon") $xb_bn;//创建的控制器父子约束关节
   scaleConstraint -mo($xb_bn+"poscon") $xb_bn;//创建的控制器缩放约束关节

}

}





///////////////////////////////////////曲线创建关节////////////////////////////////////////////////////////


global proc zxb_guanjie_chuangjianguanjie_mianban_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "曲线创建关节" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------曲线创建关节--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;
checkBox -l    "cv点创建关节" -v 0 zxb_cv_chuangjian;
text -l " " ;
textFieldGrp  -cw2 100 130 -l "曲线" -tx "  " -ed 0  zxb_qvxian;
string$zxb_qvxian="zxb_qvxian";
button -l "载曲面" -c ("zxb_zairufangfa_A_proc(\""+$zxb_qvxian+"\")") ;


textFieldGrp  -cw2 100 130 -l "创建关节数量" -tx "  "   zxb_guanjiegenshu;
text -l " " ;
//string$bn="zxb_zairubn";
//button -l "所有被约束关节" -c ("zxb_zairufangfa_A_proc(\""+$bn+"\")") ;


 setParent..;
button -l "创建关节" -c "zxb_guanjie_chuangjianguanjie_fangfa_proc";

showWindow  ;
}






global proc zxb_guanjie_chuangjianguanjie_fangfa_proc(){
    
string$bnss=`textFieldGrp -q -tx  zxb_qvxian`;  
string$shu=`textFieldGrp -q -tx   zxb_guanjiegenshu`;
string$qbns[]= stringToStringArray($bnss, " ");//字符串转化数组
int$chuangjian=`checkBox -q -v zxb_cv_chuangjian`;

string $bianliang[]=$qbns;//关节存入变量
float $shuliang=$shu;
string $mingzi="bn_";
float $a= 1/$shuliang;
    string$ddd[];
    clear$ddd;
    if($chuangjian==1)
       {
           select -r ($bnss+".cv[0:999999999]");
           $ddd=`ls -sl -fl`;
        }
     int$eee=size($ddd);  
     if($chuangjian==1){$shuliang=$eee;}
     
     
     print  $shuliang;
for ($i=0;$i<size($bianliang);$i++)
{
   
       select -cl  ;
if($chuangjian==0)
   {
      for ($j=0;$j<$shuliang+1;$j++)
        {
        float $b=$j*$a;
        int$w=$j-1;
         joint   -n ($bianliang[$i]+$mingzi+$j);
         createNode motionPath -n ($bianliang[$i]+$mingzi+$j+"motinPath");  
         connectAttr -force ($bianliang[$i]+".worldSpace[0]") ($bianliang[$i]+$mingzi+$j+"motinPath.geometryPath");

         setAttr ($bianliang[$i]+$mingzi+$j+"motinPath.inverseFront") 1;
         setAttr ($bianliang[$i]+$mingzi+$j+"motinPath.fractionMode") (!false);
         setAttr ($bianliang[$i]+$mingzi+$j+"motinPath.uValue")  $b;//参数链接u
         connectAttr -force  ($bianliang[$i]+$mingzi+$j+"motinPath.allCoordinates") ($bianliang[$i]+$mingzi+$j+".translate");   
         disconnectAttr ($bianliang[$i]+$mingzi+$j+"motinPath.allCoordinates") ($bianliang[$i]+$mingzi+$j+".translate"); 
          select -r  ($bianliang[$i]+$mingzi+$j+"motinPath");
          doDelete;
         
         }  
    for ($j=0;$j<$shuliang;$j++)
        {
        int $e=$j+1;
         parent ($bianliang[$i]+$mingzi+$e) ($bianliang[$i]+$mingzi+$j);
        }
  }
  
  if($chuangjian==1)
    {
    for ($j=0;$j<$shuliang;$j++)
        {
         string$cvvv=$ddd[$j];
         float $cvs_pos[]=`xform -q -ws -t $cvvv`;
        select -cl  ;
        joint  -p $cvs_pos[0] $cvs_pos[1] $cvs_pos[2]  -n ($bianliang[$i]+$mingzi+$j);
        }
        
        
    for ($j=0;$j<$shuliang-1;$j++)
        {
        int $e=$j+1;
         parent ($bianliang[$i]+$mingzi+$e) ($bianliang[$i]+$mingzi+$j);
        }  
    
    }
}
}





/////////////////////////眼皮绑定//////////////////////////////////////////////////////////////////////////////

global proc zxb_yanjing_guanjie_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建眼睛关节" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建眼睛关节--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入眼睛关节" -tx " " -ed 0  zxb_zairubn;
string$bn="zxb_zairubn";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$bn+"\")") ;
textFieldGrp  -cw2 100 130 -l "载入头部控制器" -tx " " -ed 0  zxb_zairukongzhiqi;
string$kongzhiqi="zxb_zairukongzhiqi";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入头部关节" -tx " " -ed 0  zxb_zairutoububn;
string$toububn="zxb_zairutoububn";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$toububn+"\")") ;

//textFieldGrp  -cw2 100 130 -l "载入总控制器" -tx " " -ed 0  zxb_zairuzongkongzhiqi;
//string$zongkongzhiqi="zxb_zairuzongkongzhiqi";
//button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$zongkongzhiqi+"\")") ;

checkBox -l "镜像关节" -value 1 duicheng;

checkBox -l "镜像方式 方向" -value 1 xingwei;


//textFieldGrp  -cw2 100 130 -l "载入干净的模型" -tx " " -ed 0  zxb_zairumode_A;
//string$modea="zxb_zairumode_A";
//button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$modea+"\")") ;

setParent ..; 


button -l "创建眼睛关节" -c "zxb_chuangjianyanjingguyanjie_fangfa_proc";
text -l "--------------创建眼皮关节--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入最高点" -tx " " -ed 0  zxb_zairudian_a;
string$dian_a="zxb_zairudian_a";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$dian_a+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入最低点" -tx " " -ed 0  zxb_zairudian_b;
string$dian_b="zxb_zairudian_b";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$dian_b+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入眼睛控制器" -tx " " -ed 0  zxb_zairuyanjingkongzhiqi;
string$eye="zxb_zairuyanjingkongzhiqi";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$eye+"\")") ;

setParent ..; 
button -l "创建眼皮关节" -c "zxb_chuangjianyanpiguanjie_fangfa_proc";

showWindow  ;
}





global proc zxb_chuangjianyanjingguyanjie_fangfa_proc()
{
 string $xiaba_bn=`textFieldGrp -q -tx  zxb_zairubn`;
 string $toubukongzhiqi=`textFieldGrp -q -tx zxb_zairukongzhiqi `;
 string $toubuguanjie=`textFieldGrp -q -tx zxb_zairutoububn `;
 //string $zongkongzhiqi=`textFieldGrp -q -tx  zxb_zairuzongkongzhiqi`;

 int$xingwei=`checkBox -q  -value  xingwei`;
  int$duicheng_bn=`checkBox -q  -value   duicheng`;

  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_bn" " $bns`;//分离字符串存到变量
  string$bn=$bns[0];
  string$bn_p[]=`listRelatives -p $bn`;
  int$panduan_A=`objExists $bn_p[0]`;
  if($panduan_A==1)
  {  
  select -r $bn;
  parent -w;
  }


  string$bn_end[]=`listRelatives -c $bn`;
  float$temp_poss=`getAttr  ($bn_end[0]+".tx")`;
  float$bn_pos[]=`xform -q -ws -t $bn`;
  string$LLRR="";
  string$jingxiang="";
  string$array[];
  clear $array;
  if($bn_pos[0]>0.001)
    {
     $LLRR="L";  
     $jingxiang="R";
     $array= stringToStringArray($bn, $LLRR);//字符串转化数组
     int$size=size($array);


      if($size<=1){error "关节利面没有镜像名称";}
    select -r  $bn;
    if($duicheng_bn==1){
         if($xingwei==0)
         {
         mirrorJoint -mirrorYZ -mirrorBehavior -searchReplace $LLRR $jingxiang;
          }else
              {
                mirrorJoint -mirrorYZ -searchReplace $LLRR $jingxiang;
              }
    
         }
    }
    if($bn_pos[0]<0.001)
   {
     $LLRR="R";  
     $jingxiang="L";
     $array= stringToStringArray($bn, $LLRR);//字符串转化数组
     int$size=size($array);
     if($size<=1){error "关节利面没有镜像名称";}
      select -r  $bn;
    if($duicheng_bn==1)
      {
       if($xingwei==0)
          {
           mirrorJoint -mirrorYZ -mirrorBehavior -searchReplace $LLRR $jingxiang;
          }else
              {
                mirrorJoint -mirrorYZ -searchReplace $LLRR $jingxiang;
                }
       }
     }
    string$temp_bn=($array[0]+$jingxiang+$array[1]);
    select -r $bn; 
    if($duicheng_bn==1){select -add $temp_bn; }
   
   string$alleyebns[]=`ls -sl`;  
   string$kongzhiqi_D=($bn+"_eye_kongzhiqi_D");
   string$kongzhiqi_D_GRP_A=($bn+"_eye_kongzhiqi_D_grp_A");
   string$kongzhiqi_D_GRP_B=($bn+"_eye_kongzhiqi_D_grp_B");
   string$kongzhiqi_D_GRP_C=($bn+"_eye_kongzhiqi_D_grp_C"); 
   
   
   string$loc=$bn+"dingwei_loc";
   string$loc_grp_A=$bn+"dingwei_loc_grp_A";
   spaceLocator -p 0 0 0 -n $loc ;
   group -n $loc_grp_A;
   parent  $loc_grp_A $toubuguanjie;
   setAttr -type float3 ($loc_grp_A+".translate") 0 0 0;
   setAttr -type float3  ($loc_grp_A+".rotate") 0 0 0 ;

   delete`orientConstraint $bn $loc_grp_A` ;

   for ($i=0;$i<size($alleyebns);$i++)
       {
       string$temp_BN=$alleyebns[$i];
       string$BN=$temp_BN+"_zhengti";
       string$en_BN=$BN+"end";
       string$kongzhiqi_A=($temp_BN+"_eye_kongzhiqi_A");
       string$kongzhiqi_A_GRP_A=($temp_BN+"_eye_kongzhiqi_A_GRP_A");
       string$kongzhiqi_A_GRP_B=($temp_BN+"_eye_kongzhiqi_A_GRP_B");
       string$kongzhiqi_A_GRP_C=($temp_BN+"_eye_kongzhiqi_A_GRP_C");
       
       string$kongzhiqi_B=($temp_BN+"_eye_kongzhiqi_B");
       string$kongzhiqi_B_GRP_A=($temp_BN+"_eye_kongzhiqi_B_grp_A");
       string$kongzhiqi_B_GRP_B=($temp_BN+"_eye_kongzhiqi_B_grp_B");
       string$kongzhiqi_B_GRP_C=($temp_BN+"_eye_kongzhiqi_B_grp_C");
       
       string$kongzhiqi_C=($temp_BN+"_eye_kongzhiqi_C");
       string$kongzhiqi_C_GRP_A=($temp_BN+"_eye_kongzhiqi_C_grp_A");
       string$kongzhiqi_C_GRP_B=($temp_BN+"_eye_kongzhiqi_C_grp_B");
       string$kongzhiqi_C_GRP_C=($temp_BN+"_eye_kongzhiqi_C_grp_C");
       
     
       
       select -r  $temp_BN;
       duplicate -rr -n $BN ;
       string$BN_end[]=`listRelatives -c -pa $BN`;
       rename $BN_end[0]  $en_BN;
       select -r  $en_BN;
       move -r -os -wd 0 0 ($temp_poss*-0.5) ;
       //setAttr ($en_BN+".tx") ($temp_poss*0.5);
       circle -c 0 0 0 -nr 1 0 0 -sw 360 -r ($temp_poss*0.2) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $kongzhiqi_A; 
       group -n $kongzhiqi_A_GRP_A;
       group -n $kongzhiqi_A_GRP_B;    
       group -n $kongzhiqi_A_GRP_C;
      // string$qvxian_shap[]=`listRelatives -s $kongzhiqi_A`;
       setAttr ($kongzhiqi_A+".overrideEnabled") 1;
       setAttr  ($kongzhiqi_A+".overrideColor") 13;
       delete`parentConstraint $temp_BN  $kongzhiqi_A_GRP_C`;
       select -r ($kongzhiqi_A+".cv[0:999]") ;
       move -r -os -wd $temp_poss 0 0 ;
       parentConstraint  $kongzhiqi_A $BN ;
       
       circle -c 0 0 0 -nr 1 0 0 -sw 360 -r ($temp_poss*0.1) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $kongzhiqi_B; 
       group -n $kongzhiqi_B_GRP_A;
       group -n $kongzhiqi_B_GRP_B;    
       group -n $kongzhiqi_B_GRP_C;
       string$qvxian_shap_B[]=`listRelatives -s $kongzhiqi_B`;
       setAttr ($kongzhiqi_B+".overrideEnabled") 1;
       setAttr  ($kongzhiqi_B+".overrideColor") 17;
       delete`parentConstraint $temp_BN  $kongzhiqi_B_GRP_C`;
       select -r ($kongzhiqi_B+".cv[0:999]") ;
       move -r -os -wd $temp_poss 0 0 ;
       parentConstraint  $kongzhiqi_B $temp_BN ;

       //select -r ($kongzhiqi_B+".cv[1]") ($kongzhiqi_B+".cv[5]") ($kongzhiqi_B+".cv[3]")  ($kongzhiqi_B+".cv[7]");
       //scale -r -p 0.469494cm 14.99773cm 0.943909cm 0.2 0.2 0.2 ;


       string$bn_dingwei=$temp_BN+"_temp";
       select -r $temp_BN;
       duplicate -rr -n $bn_dingwei;
       select -r $bn_dingwei;
       move -r -os -wd ($temp_poss*3) 0 0 ;
       
       circle -c 0 0 0 -nr 1 0 0 -sw 360 -r ($temp_poss*0.2) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $kongzhiqi_C; 
       group -n $kongzhiqi_C_GRP_A;
       group -n $kongzhiqi_C_GRP_B;    
       group -n $kongzhiqi_C_GRP_C;
       setAttr ($kongzhiqi_C+".overrideEnabled") 1;
       setAttr  ($kongzhiqi_C+".overrideColor") 17;
       delete`parentConstraint $bn_dingwei  $kongzhiqi_C_GRP_C`;
      

      int$ex=`objExists $kongzhiqi_D`;
      if($ex==0)
         {  
       circle -c 0 0 0 -nr 1 0 0 -sw 360 -r ($temp_poss*2) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $kongzhiqi_D; 
       group -n $kongzhiqi_D_GRP_A;
       group -n $kongzhiqi_D_GRP_B;    
       group -n $kongzhiqi_D_GRP_C;
       setAttr ($kongzhiqi_D+".overrideEnabled") 1;
       setAttr  ($kongzhiqi_D+".overrideColor") 17;
       delete`parentConstraint $bn_dingwei  $kongzhiqi_D_GRP_C`;
       setAttr ($kongzhiqi_D_GRP_C+".translateX") 0;
        setAttr -type float3 ($kongzhiqi_D_GRP_C+".r") 0 -90 0;

       select -r ($kongzhiqi_D+".cv[0:7]" );
       scale -r -p 0cm 15.016791cm 1.866628cm 1 0.3 1 ;

          }
          
      delete $bn_dingwei;
      parent $kongzhiqi_A_GRP_C  $toubukongzhiqi;
      parent $kongzhiqi_B_GRP_C  $toubukongzhiqi;
      parent $kongzhiqi_C_GRP_C  $kongzhiqi_D;
      if($i==0){parent $kongzhiqi_D_GRP_C  $toubukongzhiqi;}
      parent  $temp_BN $toubuguanjie;
       parent  $BN $toubuguanjie ;
      select -r $kongzhiqi_C;
      select -add $kongzhiqi_B_GRP_B;
      aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject $loc;
      connectAttr -f ($kongzhiqi_B_GRP_B+".rotate") ($kongzhiqi_A_GRP_B+".rotate");
      connectAttr -f ($kongzhiqi_B_GRP_B+".t") ($kongzhiqi_A_GRP_B+".t");
      connectAttr -f ($kongzhiqi_A+".t") ($kongzhiqi_B_GRP_A+".t");
      connectAttr -f ($kongzhiqi_A+".r") ($kongzhiqi_B_GRP_A+".r");

      connectAttr -f ($kongzhiqi_A+".s") ($temp_BN+".s");
       connectAttr -f ($kongzhiqi_A+".s") ( $BN+".s");
       connectAttr -f ($kongzhiqi_A+".s") ( $kongzhiqi_B_GRP_B+".s");
       }
       
     
  
  /* string $xiaba_mode_A=`textFieldGrp -q -tx  zxb_zairumode_A`;
  string$modes[];
  clear $modes;
  int $nemt=`tokenize $xiaba_mode_A" " $modes`;//分离字符串存到变量
  string$modeA=$modes[0];*/
  
 
}





global proc zxb_chuangjianyanpiguanjie_fangfa_proc()
{
 string $xiaba_bn=`textFieldGrp -q -tx  zxb_zairubn`;
 string $toubukongzhiqi=`textFieldGrp -q -tx zxb_zairukongzhiqi `;
 string $toubuguanjie=`textFieldGrp -q -tx zxb_zairutoububn `;
  string $eye_con=`textFieldGrp -q -tx  zxb_zairuyanjingkongzhiqi`;
    string $eye_cons[]= stringToStringArray($eye_con, " ");//字符串转化数组

  string $diana=`textFieldGrp -q -tx zxb_zairudian_a`;
   string $dianb=`textFieldGrp -q -tx  zxb_zairudian_b`;
 //string $zongkongzhiqi=`textFieldGrp -q -tx  zxb_zairuzongkongzhiqi`;
  float$diana_pos[]=`xform -q -ws -t $diana`;
  float$dianb_pos[]=`xform -q -ws -t $dianb`;

 int$xingwei=`checkBox -q  -value  xingwei`;
  int$duicheng_bn=`checkBox -q  -value   duicheng`;
  
  
  string$bns[];
  clear $bns;
  int $nemt=`tokenize $xiaba_bn" " $bns`;//分离字符串存到变量
  string$bn=$bns[0];
  string$yanpi_UP_bn=$bn+"_UP_yanpi";
  string$yanpi_UP_bn_end=$bn+"_UP_yanpi_end";
   
  string$yanpi_DW_bn=$bn+"_DW_yanpi";
  string$yanpi_UP_DW_end=$bn+"_DW_yanpi_end";
  
  select -r  $bn;
  duplicate -rr -n $yanpi_UP_bn;
  string$bn_end[]=`listRelatives -c -pa -type "joint" $yanpi_UP_bn`;
  string$bn_end_a[]=`listRelatives -c -pa  $yanpi_UP_bn`;
  select -r $bn_end_a;
  select -d $bn_end[0];
  doDelete;
  
  rename $bn_end[0] $yanpi_UP_bn_end;
  float$temp_poss=`getAttr  ($yanpi_UP_bn_end+".tx")`;
  select -r $yanpi_UP_bn;
  move -r -os -wd 0 ($temp_poss*0.025) 0 ;
  
  
   select -r  $bn;
  duplicate -rr -n $yanpi_DW_bn;
  string$bn_end_dw[]=`listRelatives -c -pa -type "joint" $yanpi_DW_bn`;
  string$bn_end_dwa[]=`listRelatives -c -pa  $yanpi_DW_bn`;
  select -r $bn_end_dwa;
  select -d $bn_end_dw[0];
  doDelete;
  
  rename$bn_end_dw[0] $yanpi_UP_DW_end;
  float$temp_posd=`getAttr  ($yanpi_UP_DW_end+".tx")`;
  select -r $yanpi_DW_bn;
  move -r -os -wd 0 ($temp_posd*-0.025) 0 ;
  
  
  string $tepup_loc=$bn+"_temp_uploca";
  string $tepdw_loc=$bn+"_temp_dwloca";
  spaceLocator -p 0 0 0  -n $tepup_loc ;
  parent $tepup_loc $yanpi_UP_bn_end;
  setAttr -type float3 ($tepup_loc+".translate") 0 0 0;
  spaceLocator -p 0 0 0  -n $tepdw_loc ;
  
  parent $tepdw_loc $yanpi_UP_DW_end;
  setAttr -type float3 ($tepdw_loc+".translate") 0 0 0;
  
  float$diss=10000000;
   select -r  $yanpi_DW_bn ;
    select -add  $yanpi_UP_bn ;
   string $bianliang[]=`ls -sl`;
   float$rz=0;
   for ($i=0;$i<size($bianliang);$i++)
       {
        string$guge=$bianliang[$i];
        string$temp_zi[]=`listRelatives -c  $guge`;
        string$temp_loc[]=`listRelatives -c  $temp_zi[0]`;
        float$temp_po[];
        clear$temp_po;
        if($i==0){$temp_po=$diana_pos;}else{$temp_po=$dianb_pos;$diss=10000000; }
        for ($ii=0;$ii<360;$ii++)
            {
              setAttr ($guge+".rotateZ") $ii;
              float$pos[]=`xform -q -ws -t $temp_loc[0]`;
              float$cdiss=mag(<<$temp_po[0],$temp_po[1],$temp_po[2]>>-<<$pos[0],$pos[1],$pos[2]>>);
              if($cdiss<$diss)
                {
                $diss=$cdiss;
                $rz=$ii;
                }
             
             }
             //print $rz;
        setAttr ($guge+".rotateZ") $rz;
        }
        
        
   float$diss=10000000;
   select -r $yanpi_DW_bn ;
    select -add $yanpi_UP_bn;
   string $bianliang[]=`ls -sl`;
   float$rz=0;
   for ($i=0;$i<size($bianliang);$i++)
       {
        string$guge=$bianliang[$i];
        string$temp_zi[]=`listRelatives -c  $guge`;
        string$temp_loc[]=`listRelatives -c  $temp_zi[0]`;
        float$temp_po[];
        clear$temp_po;
        if($i==0){$temp_po=$diana_pos;}else{$temp_po=$dianb_pos;$diss=10000000; }
        for ($ii=0;$ii<360;$ii++)
            {
              setAttr ($guge+".rotateY") $ii;
              float$pos[]=`xform -q -ws -t $temp_loc[0]`;
              float$cdiss=mag(<<$temp_po[0],$temp_po[1],$temp_po[2]>>-<<$pos[0],$pos[1],$pos[2]>>);
              if($cdiss<$diss)
                {
                $diss=$cdiss;
                $rz=$ii;
                }
             
             }
             //print $rz;
        setAttr ($guge+".rotateY") $rz;
        }
             
     delete  $tepup_loc  $tepdw_loc;
     float$upry=` getAttr  ($yanpi_UP_bn+".ry")`;
     float$dwry=` getAttr  ($yanpi_DW_bn+".ry")`;
     float$rot=($upry+$dwry)*0.5;
     setAttr  ($yanpi_UP_bn+".ry")  $rot;
     setAttr  ($yanpi_DW_bn+".ry")  $rot;
     
     
     select -r  $yanpi_UP_bn $yanpi_DW_bn;
     FreezeTransformations;
     parent -w;

     
     string$root_bn=($bn+"_root_bn");
     float$temp_pos[]=`xform -q -ws -t $yanpi_UP_bn`;
     select -cl  ;
      joint -p 0 $temp_pos[1]  $temp_pos[2] -n $root_bn;
      
    
      
      
     
      string$AA="";
      string$bb="";
      string$R_bn="";
      if($duicheng_bn==1)
      {
      float$aa_pos[]=`xform -q -ws -t  $bn`;
      if($aa_pos[0]<0.001){$AA="R"; $bb="L";}else{$AA="L"; $bb="R";}
      string$zhuguanjioeS[]= stringToStringArray($bn, $AA);//字符串转化数组
      int$size=size($zhuguanjioeS);
      if($size<=1){error "关节利面没有镜像名称";}
     $R_bn=$zhuguanjioeS[0]+$bb+$zhuguanjioeS[1];
     }

     
     
      if($duicheng_bn==1)
     {
     select -r  $bn  $R_bn;
     }else
         {
             select -r  $bn;
         }
         
     string$rrlll[];
     clear $rrlll ;
     string $RL_bn[]=`ls -sl`;
     for ($i=0;$i<size($RL_bn);$i++)
     {
         
      string$c_bn=$RL_bn[$i];
      string$kongzu_A= $c_bn+"_ROOT_zu_A";
      string$kongzu_Aa= $c_bn+"_ROOT_zu_Aa";
      string$kongzu_B= $c_bn+"_ROOT_zu_B";
      string$kongzu_Bb= $c_bn+"_ROOT_zu_Bb";
      select -cl  ;
      group -empty -n  $kongzu_A;
      group -n $kongzu_Aa;
      delete`parentConstraint $c_bn $kongzu_Aa`;
      parent   $kongzu_Aa  $c_bn;
      
      select -cl  ;
      group -empty -n  $kongzu_B;
      group -n $kongzu_Bb;
      delete`parentConstraint  $c_bn $kongzu_Bb`;
      parent  $kongzu_Bb $toubuguanjie;
      orientConstraint  $kongzu_A $kongzu_B ;
      
      
     string$root_gensui_bn_root=($c_bn+"_gensui_root_bn");
     float$temp_pos[]=`xform -q -ws -t $yanpi_UP_bn`;
     select -cl  ;
     joint -p 0 0 0 -n $root_gensui_bn_root;
     $rrlll[$i]=$root_gensui_bn_root;
     delete`parentConstraint  $c_bn  $root_gensui_bn_root`;
     select -r $root_gensui_bn_root;
     makeIdentity -apply true -t 0 -r 1 -s 0 -n 0 -pn 1;

     parent $root_gensui_bn_root $root_bn;
     connectAttr -f   ($kongzu_B+".r")   ($root_gensui_bn_root+".r");
      //parent $root_gensui_bn  $toubuguanjie;
     }
    string$LLRR="";
    string$jingxiang="";
    string$array[];
    clear $array;
    string$up[];
    clear$up;
    string$dw[];
    clear$dw;
  for ($i=0;$i<size($bianliang);$i++)
      {
       string$temp_bn=$bianliang[$i];
      float$bn_pos[]=`xform -q -ws -t $temp_bn`; 
     

    if($bn_pos[0]>0.001)
      {
       $LLRR="L";  
       $jingxiang="R";
      
       $array= stringToStringArray($temp_bn, $LLRR);//字符串转化数组
        if($i==0){$dw=$array;}else{$up=$array;}
       int$size=size($array);


       if($size<=1){error "关节利面没有镜像名称";}
       select -r  $temp_bn;
       if($duicheng_bn==1)
         {
           
           mirrorJoint -mirrorYZ -mirrorBehavior -searchReplace $LLRR $jingxiang;
           
    
         } 
    }
    if($bn_pos[0]<0.001)
      {
     $LLRR="R";  
     $jingxiang="L";
     $array= stringToStringArray($bn, $LLRR);//字符串转化数组
     if($i==0){$dw=$array;}else{$up=$array;}

     int$size=size($array);
     if($size<=1){error "关节利面没有镜像名称";}
      select -r  $bn;
    if($duicheng_bn==1)
      {
       
           mirrorJoint -mirrorYZ -mirrorBehavior -searchReplace $LLRR $jingxiang;
         
       }
     }
  }

  string$shang_bn=$dw[0]+$jingxiang+$dw[1];
  string$xia_bn=$up[0]+$jingxiang+$up[1];
 if($duicheng_bn==1) 
    { 
    select -r $yanpi_DW_bn  $yanpi_UP_bn $shang_bn $xia_bn ;
    }else
       {
           select -r $yanpi_DW_bn  $yanpi_UP_bn;
        }

 string $RL_BNS[]=`ls -sl`;
 string$jiajian_s[];
 clear $jiajian_s;
  string$fk_c[];
 clear $fk_c;
   string$fk_gensui[];
 clear $fk_gensui;
 
    string$Fk_[];
 clear $Fk_;
 for ($i=0;$i<size($RL_BNS);$i++)
     {
      string$temp_bn=$RL_BNS[$i];
      string$upik=$temp_bn+"_IK";
      string$upik_end=$temp_bn+"_IK_end";
      string$upfk=$temp_bn+"_FK";
      string$upfk_end=$temp_bn+"_FK_end";
      string$lik_loc=$temp_bn+"_ik_loc"+$i;
       string$lik_loc_grp=$lik_loc+"_grp";
      
  
     select -r $temp_bn;
     duplicate -rr -n $upik;
     setAttr ($upik+".visibility") 0;
     string$bn_up_end_ik[]=`listRelatives -c -pa  $upik`;
     rename $bn_up_end_ik[0] $upik_end;
  
     select -r $yanpi_DW_bn;
     duplicate -rr -n $upfk;
     setAttr ($upfk+".visibility") 0;
     string$bn_up_end_fk[]=`listRelatives -c -pa  $upfk`;
     rename $bn_up_end_fk[0] $upfk_end;
     
     string$jiajianjiedian=($temp_bn+"_plusMinusAverage_eye_A");
     int $ex=`objExists $jiajianjiedian`;//查询这个物体是否纯在
     if($ex==1){delete $jiajianjiedian;}
      shadingNode -asUtility plusMinusAverage -n $jiajianjiedian;//创建加减节点
      $jiajian_s[$i]=$jiajianjiedian;
      connectAttr -f ($upik+".rotateZ") ($jiajianjiedian+".input3D[0].input3Dz");
      connectAttr -f ($upfk+".rotate") ($jiajianjiedian+".input3D[1]");

      connectAttr -f ($jiajianjiedian+".output3D") ($temp_bn+".rotate");
      
      spaceLocator -p 0 0 0 -n $lik_loc ;
      group -n  $lik_loc_grp;
      parent $upik $root_bn;
      parent $upfk $root_bn;
      select -r $upik;
      select -add $upik_end;
     string$ikhade[]=`ikHandle`;
     delete`parentConstraint  $ikhade[0]  $lik_loc_grp`;
     select -r $lik_loc_grp;
     move -r -os -wd 0.02 0 0 ;
     select -r $lik_loc;
     select -add $ikhade[0];
     poleVectorConstraint -weight 1;
     float$rx=`getAttr ($temp_bn+".rx")`;
     if($i<=1)
       {
        if($rx>0){$rx=$rx*-1;}else{float$abs=abs($rx);$rx=$abs;}
        }
     
     setAttr ($ikhade[0]+".twist") $rx;
     // parent $temp_bn $root_bn; 
     //select -add $yanpi_UP_bn;
     
      string$upfk_C=$temp_bn+"_FK_C";
      string$upfkC_end=$temp_bn+"_FK_end_C";
      select -r $temp_bn;
      duplicate -rr -n $upfk_C;  
      setAttr ($upfk_C+".visibility") 0;
      string$bn_up_end_fkC[]=`listRelatives -c -pa  $upfk_C`;
      rename $bn_up_end_fkC[0] $upfkC_end;
      
      string$upfk_gensui=$temp_bn+"_FK_gensui";
      string$upfk_gensui_end=$temp_bn+"_FK_end_gensui";
      select -r $temp_bn;
      duplicate -rr -n $upfk_gensui;  
      setAttr ($upfk_gensui+".visibility") 0;
      string$bn_upfk_gensui[]=`listRelatives -c -pa  $upfk_gensui`;
      rename $bn_upfk_gensui[0] $upfk_gensui_end;
      
      
      orientConstraint   $upfk_gensui  $upfk_C;
      string $fk_qvxian=$temp_bn+"_fk_com";
      string$fk_qvxian_grp_A=$fk_qvxian+"_A";
      string$fk_qvxian_grp_B=$fk_qvxian+"_B";

      /*circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $fk_qvxian;
      group -n  $fk_qvxian_grp_A;
      group -n  $fk_qvxian_grp_B;
      delete`parentConstraint $upfk_gensui $fk_qvxian_grp_B `;
       orientConstraint $fk_qvxian  $upfk_gensui;*/
      parent  $upfk_C $root_bn;
      string$rrll_bn="";
      if($i<=1){$rrll_bn=$rrlll[0];}else{$rrll_bn=$rrlll[1];}
      parent  $upfk_gensui  $rrll_bn ;
      $fk_c[$i]=$upfk_C;
     $fk_gensui[$i]=$upfk_gensui;
     $Fk_[$i]=$upfk;
  }
  
 for ($i=0;$i<size($eye_cons);$i++)
   {

      int$a=0;
      int$b=1;
      if($i==1){$a=2; $b=3;}
      
       string$con=$eye_cons[$i];
       addAttr -ln "shang"  -at double  -dv 0 -k 1 $con ;
       addAttr -ln "xia"  -at double   -dv 0 -k 1 $con ;
       addAttr -ln "biyan"  -at double   -dv 0 -k 1 $con ;
       addAttr -ln "beishu"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
       addAttr -ln "shangxia"  -at double   -dv 0 -k 1 $con ;
       
       
     addAttr -ln "gensui_rx_up"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     addAttr -ln "gensui_ry_up"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     addAttr -ln "gensui_rz_up"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     
     addAttr -ln "gensui_rx_dw"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     addAttr -ln "gensui_ry_dw"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     addAttr -ln "gensui_rz_dw"  -at double  -min 0 -max 1 -dv 0.5 -k 1 $con ;
     
     setAttr -keyable false -channelBox true($con+".gensui_rx_up");
     setAttr -keyable false -channelBox true($con+".gensui_ry_up");
     setAttr -keyable false -channelBox true($con+".gensui_rz_up");
     setAttr -keyable false -channelBox true($con+".gensui_rx_dw");
     setAttr -keyable false -channelBox true($con+".gensui_ry_dw");
     setAttr -keyable false -channelBox true($con+".gensui_rz_dw");
     
     
     setAttr -keyable false -channelBox true($con+".beishu");
     string$chengchu_A=$con+"_multiplyDivide_A";
     string$chengchu_B=$con+"_multiplyDivide_B";
     
      string$chengchu_C=$con+"_multiplyDivide_C";
     
     string$chengchu_D=$con+"_multiplyDivide_D";
      string$chengchu_E=$con+"_multiplyDivide_E";
     string$chengchu_F=$con+"_multiplyDivide_F";
     int $ex=`objExists $chengchu_A`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_A;}
     shadingNode -asUtility multiplyDivide -n $chengchu_A;//创建乘除节点
     
     int $ex=`objExists $chengchu_B`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_B;}
     shadingNode -asUtility multiplyDivide -n $chengchu_B;//创建乘除节点
     
      int $ex=`objExists $chengchu_C`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_C;}
     shadingNode -asUtility multiplyDivide -n $chengchu_C;//创建乘除节点
     
     int $ex=`objExists $chengchu_D`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_D;}
     shadingNode -asUtility multiplyDivide -n $chengchu_D;//创建乘除节点
     
     
     int $ex=`objExists $chengchu_E`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_E;}
     shadingNode -asUtility multiplyDivide -n $chengchu_E;//创建乘除节点
     
     int $ex=`objExists $chengchu_F`;//查询这个物体是否纯在
     if($ex==1){delete $chengchu_F;}
     shadingNode -asUtility multiplyDivide -n $chengchu_F;//创建乘除节点
     
     
    connectAttr -f   ($con+".biyan") ($chengchu_A+".input1X");
    connectAttr -f   ($con+".beishu") ($chengchu_A+".input2X");
    connectAttr -f ($chengchu_A+".outputX") ($jiajian_s[$b]+".input3D[2].input3Dz");
    setAttr ($chengchu_B+".input2X") -1;
    connectAttr -f   ($con+".biyan") ($chengchu_B+".input1X");
    connectAttr -f ($chengchu_B+".outputX") ($jiajian_s[$a]+".input3D[2].input3Dz");
    
    
    connectAttr -f($con+".shang")  ($chengchu_C+".input1X");
    connectAttr -f($con+".xia")  ($chengchu_D+".input1X");
    setAttr  ($chengchu_D+".input2X") -1;

    connectAttr -f ($chengchu_C+".outputX") ($jiajian_s[$b]+".input3D[3].input3Dz");
    connectAttr -f ($chengchu_D+".outputX") ($jiajian_s[$a]+".input3D[3].input3Dz");

    connectAttr -f ($con+".shangxia")  ($jiajian_s[$b]+".input3D[4].input3Dz");
    connectAttr -f ($con+".shangxia")  ($jiajian_s[$a]+".input3D[4].input3Dz");
    
    connectAttr -f ($con+".gensui_rx_up")  ($chengchu_E+".input1X");
    connectAttr -f ($con+".gensui_ry_up")  ($chengchu_E+".input1Y");
    connectAttr -f ($con+".gensui_rz_up")  ($chengchu_E+".input1Z");
    
    connectAttr -f ($fk_c[$a]+".r")     ($chengchu_E+".input2");
    connectAttr -f ($chengchu_E+".output") ($Fk_[$a]+".r")   ; 
    
    
     connectAttr -f ($con+".gensui_rx_dw")  ($chengchu_F+".input1X");
    connectAttr -f ($con+".gensui_ry_dw")  ($chengchu_F+".input1Y");
    connectAttr -f ($con+".gensui_rz_dw")  ($chengchu_F+".input1Z");
    
    connectAttr -f ($fk_c[$b]+".r")     ($chengchu_F+".input2");
    connectAttr -f ($chengchu_F+".output") ($Fk_[$b]+".r")   ; 
     // parent $yanpi_UP_bn  $root_bn;
     // parent $yanpi_DW_bn  $root_bn;
 }
 
} 
 

/////////////////////////////////////////重新蒙皮工具////////////////////////////////////////////////////////////////////////////、
global proc zxb_cchongxing_mengpi_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "重新蒙皮" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------重新蒙皮--------------" -h 25  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入模型" -tx " " -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;

setParent ..; 
button -l "重新蒙皮" -c "zxb_zuiba_tiaozhengkongzhiqi_zaimengpi_pinghua";

showWindow  ;
}





global proc  zxb_zuiba_tiaozhengkongzhiqi_zaimengpi_pinghua(){
string $modes=`textFieldGrp -q -tx  zxb_zairumode`;
string$array[]= stringToStringArray($modes," ");//字符串转化数组
string$meshe_s[]=$array;//选中要重新蒙皮的模型
  for ($i=0;$i<size($meshe_s);$i++)
  {
      string$mode=$meshe_s[$i];
      string $skinCluster=`findRelatedSkinCluster $mode` ;//访问蒙皮节点
      string$mode_temp=($mode+"_temp_skinkaobei_"+$i);
      string $All_bn[]=`skinCluster -q  -inf  $skinCluster`;//查询蒙皮的所有关节
      setAttr ($skinCluster+".envelope") 0;
      select -r $mode;
      duplicate -rr -n $mode_temp;
      select -r $All_bn;
      select -add $mode_temp;
      skinCluster;
      select -r $mode;
      select -add $mode_temp;
      CopySkinWeights;
      
      
      delete $skinCluster;
      select -r $All_bn;
      select -add $mode;
      skinCluster;
      select -r $mode_temp ;
      select -add $mode;
      CopySkinWeights;
      
      delete $mode_temp;
     
      
  }
 select -r $meshe_s;
 }




/////////////////////////////////////////////////替换次级控制器附着模型///////////////////////////////////////////////////
global proc zxb_tihuanfuzaho_mode_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "替换附着模型" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------替换附着模型--------------" -h 25  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


checkBox -l "替换控制旋转缩放的控定位器的组" -v 0 zxb_xiayanpi;
text "  ";
textFieldGrp  -cw2 100 130 -l "载入控制旋转缩放的关节" -tx "关节" -ed 0  zxb_BN;
string$mode="zxb_BN";
button -l "载入控制旋转缩放的关节" -c (" zxb_zairufangfa_proc(\""+$mode+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入跟随模型" -tx "模型" -ed 0  zxb_mode_A;
string$mode_A="zxb_mode_A";
button -l "载入跟随模型" -c (" zxb_zairufangfa_proc(\""+$mode_A+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入控制器的组" -tx "控制器的组" -ed 0  zxb_grp;
string$grp="zxb_grp";
button -l "载入控制器的组" -c (" zxb_zairufangfa_proc(\""+$grp+"\")") ;

//textFieldGrp  -cw2 100 130 -l "载入所有次级骨骼" -tx "载入所有次级骨骼" -ed 0  zxb_jisuanlianbu_ciji_guge_B;
//button -l "载入所有次级骨骼" -c "zxb_jisuanlianbu_ciji_proc_zairuguge_A" ;

//textFieldGrp  -cw2 100 130 -l "载入最大权重骨骼" -tx "载入最大权重骨骼" -ed 0  zxb_jisuanlianbu_ciji_guge_C;
//button -l "载入最大权重骨骼" -c "zxb_jisuanlianbu_ciji_proc_zairuguge_B" ;
//text "   ";

//checkBox -l "镜像整体权重" -v 0 zxb_jingxiang;

setParent ..; 
button -l "替换" -c "zxb_tihuanfuzhaomode_proc";


//button -l "计算整体权重(选中模型)" -c "zxb_zuiba_jisuanquanzhong_pinghua";


showWindow  ;
}


global proc zxb_zairufangfa_proc(string$tempname)
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) $tempname;
}







global proc zxb_tihuanfuzhaomode_proc()
{


string$head_bn=`textFieldGrp -q -tx  zxb_BN`;
string$gensui_mode=`textFieldGrp -q -tx  zxb_mode_A`;

string$grps=`textFieldGrp -q -tx  zxb_grp`;
int$rot=`checkBox -q -v  zxb_xiayanpi`;
string$GRP[]=stringToStringArray($grps, " ");
string $mode_shapes[]=`listRelatives -s $gensui_mode`; 
string $mode_shape=$mode_shapes[0];
for($i=0;$i<size($GRP);$i++)
    {
       string$grp=$GRP[$i];
       string$shuxing_A[]=`listConnections -d 0 -s 1 ($grp+".t")`;
       int$ex=`objExists $shuxing_A[0]`;
       if($ex==0)continue;
       string$type=`nodeType  $shuxing_A[0]`;
       int$qvxian_maonang=1;
       if($type=="pointOnCurveInfo")
          {
           $qvxian_maonang=0;
           }
           //print$qvxian_maonang
       if($qvxian_maonang==0)
           {
           string$shuxing_B[]=`listConnections -d 0 -s 1 ($shuxing_A[0]+".inputCurve")`;
           string$qvxiannode=$shuxing_B[0];
           string$input_type=`nodeType $qvxiannode`;
           string$qvxianshap=$qvxiannode;
           if($input_type=="transform")
              {
               string $qvxian_shapes[]=`listRelatives -s $qvxiannode`; 
               $qvxianshap=$qvxian_shapes[0];
              }
           string$input_type_A=`nodeType   $qvxianshap`;
           if($input_type_A=="nurbsCurve")
             { 
             string$shuxing_C[]=`listConnections -d 0 -s 1 ($qvxianshap+".create")`;
             string$shuxing_D[]=`listConnections -d 0 -s 1 ($shuxing_C[0]+".inputMesh")`;
              string$aa=(" "+$shuxing_D[0]);
             if($aa!=$gensui_mode)
                 {
                 connectAttr -force ($mode_shape+".worldMesh[0]") ($shuxing_C[0]+".inputMesh");
                 }
                 
                 
               string$locs[]=`listConnections -d 0 -s 1 ($grp+".r")`;
               string$yuesu[]=`listConnections -d 0 -s 1 ($locs[0]+".tx")`;
               string$loc_A[]=`listConnections -d 0 -s 1 ($yuesu[0]+".target[0].targetTranslate")`;
               string $zu[]=`listRelatives -p $loc_A[0]`; 
               string$bbb=(" "+$zu[0]);
                if($rot==1)
                      {
                      int$ex=`objExists $head_bn`;
                      if($ex==1)
                         {
                             if($bbb!=$head_bn)
                             {
                               parent $zu[0]$head_bn;
                             }
                          }
                        }
            
             }
           //string$shuxing_D[]=`listConnections -d 0 -s 1 ($shuxing_C[0]+".inputMesh")`;
          
 
            }else
                {
                 string$shuxing_B[]=`listConnections -d 0 -s 1 ($shuxing_A[0]+".translate")`;
                 string$maonang_T=$shuxing_B[0];
                 string$input_type=`nodeType   $maonang_T`;
                 string$maonangshap=$maonang_T;
                 if($input_type=="transform")
                   {
                    string $qvxian_shapes[]=`listRelatives -s $maonangshap`; 
                    $maonangshap=$qvxian_shapes[0];
                    }
                 string$input_type_A=`nodeType   $maonangshap`;
                 if($input_type_A=="follicle")
                    {
                     string$shuxing_D[]=`listConnections -d 0 -s 1 ($maonangshap+".inputWorldMatrix")`;
                    string$aa=(" "+$shuxing_D[0]);
                     if($aa!=($gensui_mode))
                        {
                            
                         connectAttr -force ($mode_shape+".worldMatrix[0]") ($maonangshap+".inputWorldMatrix");
                         connectAttr -force ($mode_shape+".outMesh") ($maonangshap+".inputMesh");
                         }
                    string$locs[]=`listConnections -d 0 -s 1 ($grp+".r")`;
                    string$yuesu[]=`listConnections -d 0 -s 1 ($locs[0]+".tx")`;
                    string$loc_A[]=`listConnections -d 0 -s 1 ($yuesu[0]+".target[0].targetTranslate")`;
                    string $zu[]=`listRelatives -p $loc_A[0]`; 
                    string$bbb=(" "+$zu[0]);
                    if($rot==1)
                      {
                      int$ex=`objExists $head_bn`;
                      if($ex==1)
                         {
                             if($bbb!=$head_bn)
                             {
                               parent $zu[0]$head_bn;
                             }
                          }
                        }
                    }

                 }
           
     }
}    





///////////////////////////////////////////////////////提取眼皮次级曲线//////////////////////////////////////////////////////////////////////////////////////////////////




global proc zxb_yanjing_yanpi_qvxian_mioanban_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建眼皮曲线" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------创建眼皮曲线--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入循环边" -tx " " -ed 0  zxb_zairumian;
string$mian="zxb_zairumian";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$mian+"\")") ;
textFieldGrp  -cw2 100 130 -l "曲线前缀" -tx "yanpiqvxian_"   zxb_mingzi;
string$kongzhiqi="zxb_mingzi";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;
text -l "  " ;
textFieldGrp  -cw2 70 70 -l "曲线偏移" -tx "0.1"   pianyi;
checkBox -l "默认左眼皮（切换生成眼皮必选）" -value 1 duicheng;

setParent ..; 
button -l "创建眼皮曲线" -c "zxb_yanjing_yanpi_qvxian_fangfa_proc";







columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------曲面控制曲线--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 340 -cw 2 140;
textFieldGrp  -cw2 200 130 -l "载入曲线HH" -tx " " -ed 0  zxb_zairuqvxian;
string$xian="zxb_zairuqvxian";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$xian+"\")") ;
textFieldGrp  -cw2 200 130 -l "簇曲面(HH曲线跟随曲面)" -tx "" -ed 0  zxb_qvmianqiu;
string$qvmianqiu="zxb_qvmianqiu";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$qvmianqiu+"\")") ;

setParent ..; 
button -l "曲面控制曲线" -c "zxb_qvmiankongzhiqvxian_proc";





columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "-------------曲线跟随眼球曲面--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 340 -cw 2 140;
textFieldGrp  -cw2 200 130 -l "载入曲线D" -tx " " -ed 0  zxb_zairuqvxian_jichu;
string$xian_jichu="zxb_zairuqvxian_jichu";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$xian_jichu+"\")") ;
textFieldGrp  -cw2 200 130 -l "载入曲线CC" -tx " " -ed 0  zxb_zairuqvxian_c;
string$xian_c="zxb_zairuqvxian_c";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$xian_c+"\")") ;

textFieldGrp  -cw2 200 130 -l "曲面球" -tx "" -ed 0  zxb_qvmianqiu_c;
string$qvmianqiu_c="zxb_qvmianqiu_c";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$qvmianqiu_c+"\")") ;

setParent ..; 
button -l "曲线跟随眼球曲面" -c "zxb_yanjing_yanpi_qvxiangensuiqiuti_fangfa_proc";



columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "-------------创建关节--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 340 -cw 2 140;
textFieldGrp  -cw2 200 130 -l "所有DD曲线" -tx " " -ed 0  zxb_zairuqvxian_qvxian_D;
string$qvxian_D="zxb_zairuqvxian_qvxian_D";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$qvxian_D+"\")") ;

textFieldGrp  -cw2 200 130 -l "载入眼睛控制器" -tx " " -ed 0  zxb_zairu_kongzhiqi;
string$kongzhiqi="zxb_zairu_kongzhiqi";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;

textFieldGrp  -cw2 200 130 -l "曲面球" -tx "" -ed 0  zxb_qvmianqiu_q;
string$qvmianqiu_q="zxb_qvmianqiu_q";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$qvmianqiu_q+"\")") ;
checkBox -l "默认左眼皮（切换生成眼皮必选）" -value 1 duichengA;

setParent ..; 
button -l "创建关节" -c "zxb_yanjing_yanpichuangjian_guanjie_fangfa__proc";

text -l "-------------完成后设置拉链跟波浪嘴--------------" -h 50  -bgc 0.3 0.7 0.3;
showWindow  ;
}



global proc zxb_yanjing_yanpi_qvxian_fangfa_proc()

{
     string $mnianss=`textFieldGrp -q -tx  zxb_zairumian`;
     string $mnians[]= stringToStringArray($mnianss, " ");//字符串转化数组
     string $qvxianss=`textFieldGrp -q -tx  zxb_mingzi`;
     string $pianyis=`textFieldGrp -q -tx  pianyi`;
     float$pianyi=$pianyis;
     string$qvxians[];
     clear $qvxians;
     int $nemt=`tokenize $qvxianss " " $qvxians`;//分离字符串存到变量
     string$qvxian=$qvxians[0];
     int$duicheng_bn=`checkBox -q  -value   duicheng`;




     select -r $mnians;
     PolySelectConvert 3;
     string$vtxs[]=`ls -sl -fl `;
     float$dd=-100000000000000;
     float$xx=1000000000000000;
     string$dian_L="";
     string$dian_R="";
     for ($i=0;$i<size($vtxs);$i++)
          {
           string$vtx=$vtxs[$i];
           float$bn_pos[]=`xform -q -ws -t $vtx`;
           if($bn_pos[0]>$dd)
             {
             $dd=$bn_pos[0];
             $dian_L=$vtx;
             }
             if($bn_pos[0]<$xx)
             {
             $xx=$bn_pos[0];
             $dian_R=$vtx;
             }
             
           }
           
           
           
       select -r   $dian_L $dian_R;  
       
       
        string$LR[]=`ls -sl -fl `;
        
        //string$aaa[];
       // clear$aaa;
        string$upS[];
        clear $upS;
        string$dwS[];
        clear $dwS;
        for ($i=0;$i<size($LR);$i++)
            {
             string$aaa[];
             clear$aaa;
             string$vtx=$LR[$i];
             select -r $vtx;
             PolySelectConvert 2;
             PolySelectConvert 3;
              string$temp_dian[]=`ls -sl -fl `;
              for ($ii=0;$ii<size($vtxs);$ii++)
                   {
                   string$Dian=$vtxs[$ii];
                   for ($j=0;$j<size($temp_dian);$j++)
                       {
                        string$temp=$temp_dian[$j];
                        if($Dian==$temp)
                           {
                            int$size=size($aaa);
                            $aaa[$size]=$Dian;
                            }
                        }
                   }
                   
            select -r $aaa; 
            select -d   $vtx;   
            string$temp_dianA[]=`ls -sl -fl `;
            for ($aa=0;$aa<size($temp_dianA);$aa++)  
                {
                string$tempe_yy=$temp_dianA[$aa];
                float$dian_pos_A[]=`xform -q -ws -t $vtx`;
                float$dian_pos_B[]=`xform -q -ws -t $tempe_yy`;
                if($dian_pos_A[1]<$dian_pos_B[1])
                   {
                    int$size=size($upS);
                    $upS[$size]=$tempe_yy;
                    }
                
                 if($dian_pos_A[1]>$dian_pos_B[1])
                   {
                    int$size=size($dwS);
                    $dwS[$size]=$tempe_yy;
                    }
                
                
                }   
             
           

             }
      string$RRRRRRLLLL="L";      
     if($duicheng_bn==0){$RRRRRRLLLL="R";}  
    string$qvxian_up=$qvxian+"UP_"+$RRRRRRLLLL  ;
    string$qvxian_dw=$qvxian+"DW_"+ $RRRRRRLLLL ;
    select -r $upS ;
    polySelectSp -loop;
    select -add $LR ;
    
    
      
    string$all_dian[]=`ls -sl -fl `;
    string$paichu[];
    clear $paichu;
    for ($bb=0;$bb<size($vtxs);$bb++)
        {
            string$ming=$vtxs[$bb];
            for ($ee=0;$ee<size($all_dian);$ee++)
                {
                    string$ming_a=$all_dian[$ee];
                   if($ming==$ming_a)
                      {
                       int$size=size($paichu);
                       $paichu[$size]=$ming;
                       }
                }
            
        }
    select -r $paichu;
    
    
    PolySelectConvert 20;
    polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_up;
    select -r$dwS ;
    polySelectSp -loop;
    select -add $LR ;
    
    string$all_diana[]=`ls -sl -fl `;
    string$paichua[];
    clear $paichua;
    for ($bb=0;$bb<size($vtxs);$bb++)
        {
            string$ming=$vtxs[$bb];
            for ($ee=0;$ee<size($all_diana);$ee++)
                {
                    string$ming_a=$all_diana[$ee];
                   if($ming==$ming_a)
                      {
                       int$size=size($paichua);
                       $paichua[$size]=$ming;
                       }
                }
            
        }
    select -r $paichua;
    
    
    PolySelectConvert 20;
    polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_dw;



select -r $qvxian_up  $qvxian_dw;
string$qvxians[]=`ls -sl  `;
float$dian_pos_A[];
float$dian_pos_B[];
 for ($aa=0;$aa<size($qvxians);$aa++) 
      {
     
      string$qv_temp=$qvxians[$aa];
      select -r ($qv_temp+".cv[0:999999999]") ;
      string$temp_dian[]=`ls -sl  -fl`;
      if($aa==0)
      {
       $dian_pos_A=`xform -q -ws -t $temp_dian[0]`;
       }
      if($aa==1)
        {
         $dian_pos_B=`xform -q -ws -t $temp_dian[0]`;
         }
     
       }
if($dian_pos_A[0]!=$dian_pos_B[0])
  {
      if($duicheng_bn==1)
        {
        reverseCurve -ch 1 -rpo 1 $qvxian_up;
        }
        if($duicheng_bn==0)
        {
        reverseCurve -ch 1 -rpo 1 $qvxian_dw;
        }
  }
string$grp=$qvxians[0]+"grp";
int$ex=`objExists $grp`;    ///判断
if($ex==0){group -empty -n $grp ;}
string$qvmians[];
clear$qvmians;
 for ($aa=0;$aa<size($qvxians);$aa++) 
     {
         
         string$temp_qvxian=$qvxians[$aa];
         string$qvxian_D=$temp_qvxian+"_D";
         string$qvxian_A=$temp_qvxian+"_A";
         string$qvxian_CC=$temp_qvxian+"_CC";
         string$qvxian_HH=$temp_qvxian+"_HH";
         string$qvxian_DD=$temp_qvxian+"_DD";
         string$qvxian_FF=$temp_qvxian+"_FF";
         
         
         string$qvxian_qvmian=$temp_qvxian+"_qvmian";
         string$qvxian_pianyi_A=$temp_qvxian+"_pianyi_A";
         string$qvxian_pianyi_B=$temp_qvxian+"_pianyi_B";

         select -r $temp_qvxian;
         duplicate -rr -n $qvxian_D;
         select -r $temp_qvxian;
         duplicate -rr -n  $qvxian_A;
         select -r $temp_qvxian;
         duplicate -rr -n  $qvxian_CC;
         
         select -r $temp_qvxian;
         duplicate -rr -n  $qvxian_HH;
         select -r $temp_qvxian;
         duplicate -rr -n  $qvxian_DD;
         select -r   $temp_qvxian;
         duplicate -rr  -n $qvxian_FF;
         select -r $qvxian_CC ;
         select -add $qvxian_HH ;
         select -add $qvxian_DD ;
         
         string$bss[]=`blendShape -automatic -tc 0`;
         setAttr ($bss[0]+"."+$qvxian_CC) 1;
         setAttr ($bss[0]+"."+$qvxian_HH) 1;
         
        select -r  $qvxian_FF;
        
        
        rebuildCurve -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 4 -d 3 -tol 0.01 $qvxian_FF;
        
        offsetCurve  -ch on -rn false -cb 2 -st true -cl true -cr 0 -d ($pianyi*-1) -tol 0.01 -sd 5 -ugn false   -n $qvxian_pianyi_A  $qvxian_FF;
       
        offsetCurve  -ch on -rn false -cb 2 -st true -cl true -cr 0 -d $pianyi -tol 0.01 -sd 5 -ugn false  -n $qvxian_pianyi_B  $qvxian_FF ;
       
        loft -ch 1 -u 1 -c 0 -ar 1 -d 3 -ss 1 -rn 0 -po 0 -rsn true  -n $qvxian_qvmian $qvxian_pianyi_A $qvxian_pianyi_B;
        int$size=size($qvmians);
        $qvmians[$size]=$qvxian_qvmian;
         delete $qvxian_pianyi_A $qvxian_pianyi_B $qvxian_FF;
         parent  $temp_qvxian $grp;
         parent $qvxian_D  $grp;
         parent $qvxian_A  $grp;
         parent $qvxian_CC  $grp;
         parent $qvxian_HH $grp;
         parent $qvxian_DD $grp;
         parent $qvxian_qvmian $grp;
         rename $temp_qvxian ($qvxian_A+"A");
         rename $qvxian_A $temp_qvxian;
         rename ($qvxian_A+"A") $qvxian_A; 
      } 

 for ($aa=0;$aa<size($qvmians);$aa++) 
     {
         string$temp=$qvmians[$aa];
         select -r ($temp+".cv[0:999999999999][0:99999999]");
         string$cvs[]=`ls -sl -fl `;
         int$size=size($cvs);
         string$qw=$cvs[$size-1];
         string$ee[];
         clear$ee;
         int $nemt=`tokenize $qw "[" $ee`;//分离字符串存到变量
          int $nemt=`tokenize $ee[1] "]" $ee`;//分离字符串存到变量
         int$id=$ee[0] ;
         
          for ($m=1;$m<($id);$m++) 
             {
                 
              select -r ($temp+".cv["+$m+"][0:3]") ;
              newCluster " -envelope 1" ;
             }
         
     }

select -r ($qvmians[0]+".cv[0][0:3]");
 select -add ($qvmians[1]+".cv[0][0:3]"); 
  newCluster " -envelope 1" ;
select -r ($qvmians[0]+".cv[6][0:3]");
 select -add ($qvmians[1]+".cv[6][0:3]"); 
 newCluster " -envelope 1" ;
 

 
}






global proc zxb_qvmiankongzhiqvxian_proc()
{
string $qvxian_Hs=`textFieldGrp -q -tx  zxb_zairuqvxian`;
string$eeeee[];
clear $eeeee;
int $nemt=`tokenize $qvxian_Hs " " $eeeee`;//分离字符串存到变量
string $qvxian_H=$eeeee[0];

string $qvmian_Hs=`textFieldGrp -q -tx  zxb_qvmianqiu`;
string$AAAAAA[];
clear $AAAAAA;
int $nemt=`tokenize  $qvmian_Hs " " $AAAAAA`;//分离字符串存到变量
string  $qvmian_H=$AAAAAA[0];
select -r  $qvxian_H $qvmian_H;
string $bianliang[]=`ls -sl`;//选择曲线 //手动控制曲线 加选曲面

////////////判断曲面还是曲线//////////////////
int$size=size($bianliang);
if($size!=2){error "请选中一个曲线和一个曲面两个物体";}
string$qvxian_temp="";
string$qvmian_temp="";
string$shape_a[]=`listRelatives -s $bianliang[0]`; 
string$shape_b[]=`listRelatives -s $bianliang[1]`; 
int$ex_a=`objExists $shape_a[0]`;
if($ex_a==0){error "选中的第一个物体没有型节点";}
int$ex_b=`objExists $shape_b[0]`;
if($ex_b==0){error "选中的第二个物体没有型节点";}
string$type_a=`nodeType $shape_a[0]`;

if($type_a=="nurbsCurve")
  {
    $qvxian_temp=$bianliang[0];
    $qvmian_temp=$bianliang[1];
  }else
       {
        $qvxian_temp=$bianliang[1];
        $qvmian_temp=$bianliang[0];
       }

  
  
/////////////////////////////创建曲面信息节点/////////////////////////////////////////////////////
string$qvmian_closestPointOnSurface=($qvmian_temp+"_closestPointOnSurface_yanpi");
string$qvmian_shape[]=`listRelatives -s $qvmian_temp`; 
string$qvmianshape=$qvmian_shape[0];
int$panduan_B=`objExists $qvmian_closestPointOnSurface`;
if($panduan_B==1){delete $qvmian_closestPointOnSurface;}
shadingNode -asUtility closestPointOnSurface  -n $qvmian_closestPointOnSurface;
connectAttr -force ($qvmianshape+".worldSpace[0]") ($qvmian_closestPointOnSurface+".inputSurface");

/////////////选中曲线////////////////////////
select -r ($qvxian_temp+".cv[0:999999999]");
string $cvs[]=`ls -sl -fl`;
 
for ($i=0;$i<size($cvs);$i++)
    {
    
    
    ////////////////////曲面最近点节点 赋值最近点节点////////////////////////////
   string$cv=$cvs[$i];
   string$qvmian_pointOnSurfaceInfo=($qvmian_temp+"_pointOnSurfaceInfo_yanpi"+$i);
   int$panduan_A=`objExists $qvmian_pointOnSurfaceInfo`;
   if($panduan_A==1){delete $qvmian_pointOnSurfaceInfo;}
   shadingNode -asUtility pointOnSurfaceInfo  -n $qvmian_pointOnSurfaceInfo;
   float$pos_dia[]=`xform -q -ws -t $cv`;
   setAttr -type float3 ($qvmian_closestPointOnSurface+".inPosition") $pos_dia[0] $pos_dia[1] $pos_dia[2];
   float$U=`getAttr ($qvmian_closestPointOnSurface+".parameterU")`;
   float$V=`getAttr ($qvmian_closestPointOnSurface+".parameterV")`;
   setAttr ($qvmian_pointOnSurfaceInfo+".parameterU") $U;//获得U值
   setAttr ($qvmian_pointOnSurfaceInfo+".parameterV") $V;//获得V值
   connectAttr -force ($qvmianshape+".worldSpace[0]") ($qvmian_pointOnSurfaceInfo+".inputSurface");//连接曲面
   
   ///////////////////////////创建定位器连接到曲线上（定位器被曲面控制 定位器控制曲线）//////////////////////////////////////////////////
   string$zu_A=($qvmian_temp+"_eye_grp_loc");
   string$eye_loc=($qvxian_temp+"_eye_loc_"+$i);
   string$eye_loc_grp_a=($eye_loc+"_GRP_A");
   string$eye_loc_grp_b=($eye_loc+"_GRP_B");

   int$panduan_A=`objExists $zu_A`;
   if($panduan_A==0)
      {
          select -cl  ;
         group -empty -n  $zu_A;
         setAttr ($zu_A+".visibility") 0;
         setAttr -lock true ($zu_A+".v");   
         string$qvmian_zu[]=`listRelatives -p $qvmian_temp`; 
         int$panduan_A=`objExists $qvmian_zu[0]`;
         if($panduan_A==1){ parent $zu_A $qvmian_zu[0];}
        
      }
      
      spaceLocator -p 0 0 0 -n $eye_loc;
      group -n $eye_loc_grp_a;
      group -n $eye_loc_grp_b;
      parent $eye_loc_grp_b $zu_A;
      connectAttr -f ($qvmian_pointOnSurfaceInfo+".position") ($eye_loc_grp_b+".t");//连接定位器  这个位置是曲面的位置  与曲线顶点的位置有偏移
      ///////////////////矫正偏移  保证定位器一点在曲线点上/////////////////////
      xform -ws -t $pos_dia[0] $pos_dia[1] $pos_dia[2] $eye_loc_grp_a;
      string$loc_sheps[]=`listRelatives -s $eye_loc`; 
      string$loc_shep=$loc_sheps[0];
      connectAttr -f ($loc_shep+".worldPosition[0]")  ($qvxian_temp+".controlPoints["+$i+"]");//定位器控制曲线
      
      
   } 
   
   delete $qvmian_closestPointOnSurface;
}





global proc zxb_yanjing_yanpi_qvxiangensuiqiuti_fangfa_proc()
{
  
string $qvxian_jichus=`textFieldGrp -q -tx  zxb_zairuqvxian_jichu`;
string$eeeee[];
clear $eeeee;
int $nemt=`tokenize $qvxian_jichus " " $eeeee`;//分离字符串存到变量
string $qvxian_jichu=$eeeee[0];

string $qvxian_cs=`textFieldGrp -q -tx  zxb_zairuqvxian_c`;
string$AAAAAA[];
clear $AAAAAA;
int $nemt=`tokenize  $qvxian_cs " " $AAAAAA`;//分离字符串存到变量
string  $qvxian_c=$AAAAAA[0];


string $qvmian_qiu_as=`textFieldGrp -q -tx  zxb_qvmianqiu_c`;
string$ttttt[];
clear $ttttt;
int $nemt=`tokenize  $qvmian_qiu_as " " $ttttt`;//分离字符串存到变量
string   $qvmian_qiu_a=$ttttt[0];

select -r  $qvxian_jichu $qvmian_qiu_a;
  
string $bianliang[]=`ls -sl`;// 跟随眼皮的曲线  加选眼球的曲面  制作曲线附着曲面 （曲线跟随没有删除历史的曲线并附着在眼球曲面上）

////////////判断曲面还是曲线//////////////////
int$size=size($bianliang);
if($size!=2){error "请选中一个曲线和一个曲面两个物体";}
string$qvxian_temp="";
string$qvmian_temp="";

string$shape_a[]=`listRelatives -s $bianliang[0]`; 
string$shape_b[]=`listRelatives -s $bianliang[1]`; 
int$ex_a=`objExists $shape_a[0]`;
if($ex_a==0){error "选中的第一个物体没有型节点";}
int$ex_b=`objExists $shape_b[0]`;
if($ex_b==0){error "选中的第二个物体没有型节点";}
string$type_a=`nodeType $shape_a[0]`;

if($type_a=="nurbsCurve")
  {
    $qvxian_temp=$bianliang[0];
    $qvmian_temp=$bianliang[1];
  }else
       {
        $qvxian_temp=$bianliang[1];
        $qvmian_temp=$bianliang[0];
       }

  


string$gensuiqvxian=$qvxian_c;
select -r ($qvxian_temp+".cv[0:99999999999]");
string $cvs[]=`ls -sl -fl`;
int$CVshu=size($cvs);
string$qvxian_shape[]=`listRelatives -s $qvxian_temp`; 
string$qvmian_shapes[]=`listRelatives -s $qvmian_temp`; 
string$qvxianshape=$qvxian_shape[0];
string$qvmianshape=$qvmian_shapes[0];

string$qvxian_nearestPointOnCurve=($gensuiqvxian+"_nearestPointOnCurve_yanpi");
int$panduan_B=`objExists$qvxian_nearestPointOnCurve`;
if($panduan_B==1){delete $qvxian_nearestPointOnCurve;}
shadingNode -asUtility nearestPointOnCurve  -n $qvxian_nearestPointOnCurve;
connectAttr -force ($qvxianshape+".worldSpace[0]") ($qvxian_nearestPointOnCurve+".inputCurve");
for ($i=0;$i<$CVshu;$i++)
    {
       string$cv_name_A=($qvxian_temp+".cv["+$i+"]");
       string$cv_name_B=($gensuiqvxian+".cv["+$i+"]");
       float$pos_A[]=`xform -q -ws -t $cv_name_A`;
       
       setAttr -type float3 ($qvxian_nearestPointOnCurve+".inPosition") $pos_A[0] $pos_A[1] $pos_A[2];
       float$param=`getAttr ($qvxian_nearestPointOnCurve+".parameter")`;
       
        string$qvxianpointOnCurveInfo=($qvxian_temp+"_pointOnCurveInfo_gensui_loc_"+$i);
        int$ex=`objExists $qvxianpointOnCurveInfo`;
        if($ex==1){delete $qvxianpointOnCurveInfo;}
        shadingNode -asUtility pointOnCurveInfo  -n $qvxianpointOnCurveInfo;
        connectAttr -force ($qvxianshape+".worldSpace[0]") ($qvxianpointOnCurveInfo+".inputCurve");
        setAttr  ($qvxianpointOnCurveInfo+".parameter")  $param;//通过曲线获得一个位置
     
     
        ////////////////////创建曲面球的曲面信息节点//////////////////////////////////
        string$qvmianclosestPointOnSurface=($gensuiqvxian+"_closestPointOnSurface_"+$i);
         int$ex=`objExists $qvmianclosestPointOnSurface`;
        if($ex==1){delete $qvmianclosestPointOnSurface;}
        shadingNode -asUtility closestPointOnSurface  -n $qvmianclosestPointOnSurface;
        connectAttr -force ($qvmianshape+".worldSpace[0]") ($qvmianclosestPointOnSurface+".inputSurface");
        connectAttr -force ($qvxianpointOnCurveInfo+".position") ($qvmianclosestPointOnSurface+".inPosition");

       /* float$pos_weizhi[]=`getAttr   ($qvxianpointOnCurveInfo+".position")`;
        setAttr -type float3 ($qvmianclosestPointOnSurface+".inPosition") $pos_weizhi[0] $pos_weizhi[1] $pos_weizhi[2];//赋值给曲面最近点节点（曲线信息节点的值）  
        
        */
        ////////////创建定位器//////////////////////
        string$loc=($gensuiqvxian+"_eye_yanpi_gensui_loc"+$i);
        string$loc_grp_a=($loc+"_grp_A");
        string$loc_grp_b=($loc+"_grp_B");
        spaceLocator -p 0 0 0 -n $loc;
        group -n $loc_grp_a;
        group -n $loc_grp_b;
        string$root_zu=($gensuiqvxian+"_eye_yanpi_gensui_root_grp");
        int$ex=`objExists $root_zu`;
        if( $ex==0)
          {
           
           select -cl  ;
           group -empty -n  $root_zu;
           setAttr ($root_zu+".visibility") 0;
           setAttr -lock true ($root_zu+".v"); 
           }
        parent $loc_grp_b $root_zu;
        
        
        connectAttr -force  ($qvmianclosestPointOnSurface+".position") ($loc_grp_b+".t");//定位器的组跟随曲面
        xform -ws -t $pos_A[0] $pos_A[1] $pos_A[2] $loc_grp_a;//定位器偏移
        
        string$loc_shapes[]=`listRelatives -s $loc `; 
        string$loc_shape=$loc_shapes[0];
        connectAttr -force ($loc_shape+".worldPosition[0]") ($gensuiqvxian+".controlPoints["+$i+"]");//定位器控制器曲线


    }

delete $qvxian_nearestPointOnCurve; 
}






global proc zxb_yanjing_yanpichuangjian_guanjie_fangfa__proc()
{
    
    
    
    
string $qvxian_Dss=`textFieldGrp -q -tx  zxb_zairuqvxian_qvxian_D`;
string $qvxian_Ds[]= stringToStringArray($qvxian_Dss," ");//字符串转化数组


string $kongzhiqiss=`textFieldGrp -q -tx  zxb_zairu_kongzhiqi`;
string$AAAAAA[];
clear $AAAAAA;
int $nemt=`tokenize  $kongzhiqiss " " $AAAAAA`;//分离字符串存到变量
string  $kongzhiqi=$AAAAAA[0];


string $qvmian_qiu_as=`textFieldGrp -q -tx  zxb_qvmianqiu_q`;
string$ttttt[];
clear $ttttt;
int $nemt=`tokenize  $qvmian_qiu_as " " $ttttt`;//分离字符串存到变量
string   $qvmian_qiu_a=$ttttt[0];
int$duicheng_bn=`checkBox -q  -value   duichengA`;

string $qvxians[]=$qvxian_Ds;//选中曲线  D
string$yanqiu_con=$kongzhiqi;//眼球控制器名字
string$qiuti=$qvmian_qiu_a;
int$L_R=$duicheng_bn;
string$upqvxian="";
string$dwqvxian="";
string$obj_nanme="";
string$qvmianshapes[]=`listRelatives -s $qiuti`; 
string$qvmianshape=$qvmianshapes[0];


//////添加属性连接连接范围节点及反向节点
int$ex=`objExists ($yanqiu_con+".gensui")`;
if($ex==0){addAttr -ln "gensui"  -at double  -min 0 -max 10 -dv 10 -k 1 $yanqiu_con ;}
string$fanweijiedian=($yanqiu_con+"_eye_yanpi_kongzhiqi_setRange");
int$ex=`objExists $fanweijiedian`;
if($ex==1){delete $fanweijiedian;}
shadingNode -asUtility setRange -n $fanweijiedian;
string$fanxiangjiedian=($yanqiu_con+"_eye_yanpi_kongzhiqi_reverse");
int$ex=`objExists $fanxiangjiedian`;
if($ex==1){delete $fanxiangjiedian;}
shadingNode -asUtility reverse -n $fanxiangjiedian;
setAttr ($fanweijiedian+".oldMaxX") 10;
setAttr ($fanweijiedian+".maxX") 1;
connectAttr -f ($yanqiu_con+".gensui") ($fanweijiedian+".valueX");
connectAttr -f ($fanweijiedian+".outValueX") ($fanxiangjiedian+".inputX");
string$fanweijijiedianshuchu_A=($fanweijiedian+".outValueX");
string$fanxiangjiedianshuchu_B=($fanxiangjiedian+".outputX");

/////////////////////////判断程序那条曲线是上下///////////////////////
float$ty=-10000000000000;
for ($i=0;$i<size($qvxians);$i++)
{
   string$qvxian=$qvxians[$i];
    string$shapes[]=`listRelatives -s $qvxian`; 
    string$shape=$shapes[0];
    string$type=`nodeType $shape`;
    select -r ($qvxian+".cv[0:999999999999]");
    string $cv_s[]=`ls -sl -fl`;
    for ($j=0;$j<size($cv_s);$j++)
        {
         float$pos_cv[]=`xform -q -ws -t $cv_s[$j]`;
         if($pos_cv[1]>$ty)
            {
            $ty=$pos_cv[1];
            $obj_nanme=$qvxian;
            }
         }
    
}

$upqvxian=$obj_nanme;
select -r $qvxians;
select -d $upqvxian;
string $qvxians_dws[]=`ls -sl`;
$dwqvxian=$qvxians_dws[0];
select -r  $upqvxian;
select -add  $dwqvxian;
string $qvxians_s[]=`ls -sl`;




string$eye_bn[];

for ($ii=0;$ii<size($qvxians_s);$ii++)
{
    clear $eye_bn;
    string$qvxian=$qvxians_s[$ii];
    string$fuwuti[]=`listRelatives -p $qvxian`;
    int$panduan=`objExists$fuwuti[0]`;

    select -r ($qvxian+".cv[0:9999999999999]");
    string $qvxians_cvs[]=`ls -sl -fl`;
    
    //////////区分上眼皮与下眼皮
    int$jiesu=size($qvxians_cvs);
    int$kaishi=0;
    if($ii==1)
      {
          $jiesu=$jiesu-1;
          $kaishi=1;
      }
      
      string$qianzui="L";
      if($L_R==0){$qianzui="R";}
      string$BN_name=("eye_yanpi_"+$qvxian+$qianzui);
      
      
      string$loc_grp=($BN_name+"_grp");
      int$ex=`objExists $loc_grp`;
      if($ex==0)
         {
         select -cl  ;
         group -empty -n  $loc_grp; //创建定位器空组
         setAttr ($loc_grp+".visibility") 0;
         setAttr -lock true ($loc_grp+".v");
         
         if($panduan==1){parent $loc_grp $fuwuti[0];}
         }
     
     string$qvxian_zuijingdianjiedian=($qvxian+"_eye_yanpi_nearestPointOnCurve");//曲线最近点节点（定位器跟随时需要）
     int$ex=`objExists $qvxian_zuijingdianjiedian`;
     if($ex==1){delete $qvxian_zuijingdianjiedian;}
     createNode "nearestPointOnCurve" -n $qvxian_zuijingdianjiedian;
    string$qvxian_shaps[]=`listRelatives -s $qvxian`;
    string$qvxianshap=$qvxian_shaps[0];
    connectAttr -force ($qvxianshap+".worldSpace[0]")  ($qvxian_zuijingdianjiedian+".inputCurve");
   for ($iii=$kaishi;$iii<$jiesu;$iii++)
       {
        string$bn_name=($BN_name+"_"+$iii);
        string$bn_loc=($bn_name+"_loc");
        string$bn_loc_A=($bn_name+"_loc_fuzhao_");
        string$bn_loc_B=($bn_name+"_loc_gensui_qvxian");

        string$bn_loc_A_grp_A=($bn_name+"_loc_fuzhao_grp_A");
        string$bn_loc_A_grp_B=($bn_name+"_loc_fuzhao_grp_B");


        string$cv=$qvxians_cvs[$iii];
        float$pos_temp[]=`xform -q -ws -t  $cv`;
        select -cl  ;
        joint -p $pos_temp[0] $pos_temp[1] $pos_temp[2] -n $bn_name;//创建关节
        $eye_bn[$iii]=$bn_name;
        spaceLocator -p 0 0 0 -n $bn_loc;//创建定位器
        parent $bn_loc $loc_grp;
        delete`pointConstraint $bn_name $bn_loc`;
        pointConstraint $bn_loc  $bn_name ;//定位器约束关节
        select -r $qiuti;
        select -add $bn_name;
        ////////////////眼球曲面约束骨骼/////////////////////
        normalConstraint -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "vector" -worldUpVector 0 1 0;
        
        
        spaceLocator -p 0 0 0 -n $bn_loc_A;//创建定位器  跟随曲面
        group -n $bn_loc_A_grp_A;
        group -n $bn_loc_A_grp_B;
        parent  $bn_loc_A_grp_B  $loc_grp;
        
        spaceLocator -p 0 0 0 -n $bn_loc_B;//创建定位器  跟随曲线
        parent  $bn_loc_B $loc_grp;
        setAttr -type float3 ($qvxian_zuijingdianjiedian+".inPosition") $pos_temp[0] $pos_temp[1] $pos_temp[2] ;
        float$param=`getAttr ($qvxian_zuijingdianjiedian+".parameter")`;
        
        
        
       string$loc_juiedian=($qvxian+"_eye_yanpi_loc_pointOnCurveInfo"+$iii);//曲线信息节点
       int$ex=`objExists $loc_juiedian`;
       if($ex==1){delete $loc_juiedian;}
       createNode "pointOnCurveInfo" -n $loc_juiedian;
       connectAttr -force ($qvxianshap+".worldSpace[0]")  ($loc_juiedian+".inputCurve");
       setAttr ($loc_juiedian+".parameter") $param;
       connectAttr -force ($loc_juiedian+".position") ($bn_loc_B+".t");//定位器跟随曲线
       
       
       string$qvmianzuijiandian=($qvxian+"eye_yanpi_pos_closestPointOnSurface_"+$iii);
       int$ex=`objExists $qvmianzuijiandian`;
       if($ex==1){delete $qvmianzuijiandian;}
       createNode "closestPointOnSurface" -n $qvmianzuijiandian;
       connectAttr -force  ($qvmianshape+".worldSpace[0]") ($qvmianzuijiandian+".inputSurface");
       connectAttr -force  ($bn_loc_B+".t")  ($qvmianzuijiandian+".inPosition");
       connectAttr -force    ($qvmianzuijiandian+".position") ($bn_loc_A_grp_B+".t");//定位器组跟随曲面
       delete`pointConstraint $bn_loc_B $bn_loc_A_grp_A`;

       
       select -r $bn_loc_A;
       select -add $bn_loc_B;
       select -add $bn_loc;
       string$dian_yuesu[]=`pointConstraint`;
       
       connectAttr -force $fanweijijiedianshuchu_A  ($dian_yuesu[0]+"."+$bn_loc_A+"W0");
       connectAttr -force $fanxiangjiedianshuchu_B  ( $dian_yuesu[0]+"."+$bn_loc_B+"W1");

        }  
      
      
      string$bn_root=($qvxian+"eye_root_"+$qianzui);
      int$ex=`objExists $bn_root`;
      if($ex==0)
         {
             select -cl  ;
             joint -p 0 0 0-n $bn_root;//创建跟关节
             setAttr ($bn_root+".drawStyle") 2;
             for ($m=0;$m<size($eye_bn);$m++)
                 {
                     string$aa=$eye_bn[$m];
                     if($aa!="")
                       {
                         select -add $eye_bn[$m];
                        }
                  }
            // select -r $eye_bn;
             select -add $bn_root;
             delete`pointConstraint`;
             if($panduan==1){ parent $bn_root $fuwuti[0];}
             
            
          }
          
       select -cl  ;
       for ($m=0;$m<size($eye_bn);$m++)
       {
           string$aa=$eye_bn[$m];
           if($aa!="")
           {
            select -add $eye_bn[$m];
            }
       }
       select -add $bn_root;
       parent;
     
       //print $qvxians;
       
       delete $qvxian_zuijingdianjiedian;
      
}

}





///////////////////////////////////////////////////眼皮碰撞//////////////////////////////////////////////////////////////////////////////////////////////////

global proc zxb_yanpipengzhuang_proc()
{
if(`window -ex zxb_yanpipengzhuang_chuangkou`)
deleteUI zxb_yanpipengzhuang_chuangkou;

window -t "眼皮碰撞" zxb_yanpipengzhuang_chuangkou;
columnLayout -adj 1 -w 300 gtBSColumlayout;
text -l "--------------眼皮碰撞--------------" -h 25  -bgc 0.3 0.7 0.3;
columnLayout -adjustableColumn 0; 
textFieldButtonGrp -cw3 300 200 65 -l ("DD曲线:下眼皮关节对应下眼皮曲线") -text "带混合变形的曲线" -bl   "载    入" -bc "zxb_yanpipengzhuang_qvxian_proc" baocun_qvxian_mingzi;
textFieldButtonGrp -cw3 300 200 65 -l ("眼睛控制器:") -text "添加控制属性" -bl   "载    入" -bc "zxb_yanpipengzhuang_yanjingkongzhiqi_proc" baocun_yanjing_kongzhiqi_mingzi ;
textFieldButtonGrp -cw3 300 200 65 -l ("上眼皮关节对应下眼皮曲线：不选两头的关节:") -text "所有眼皮关节不选两头的关节" -bl   "载    入" -bc "zxb_yanpipengzhuang_bn_proc" baocun_yanpipengzhuang_bn_mingzi ;
textFieldButtonGrp -cw3 300 200 65 -l ("眼球曲面:") -text "眼球曲面" -bl   "载    入" -bc "zxb_yanpipengzhuang_yanqiuqvmian_proc"  baocun_yanpipengzhuang_qvmian_mingzi;
setParent ..; 
button -l "设置碰撞 "   -c "zxb_panpipengzhuang_chengxu_proc";
        

showWindow zxb_yanpipengzhuang_chuangkou;

}



global proc zxb_yanpipengzhuang_qvxian_proc()
{
    string $bianliang[]=`ls -sl`;//
    string$bn="";
    
     for($i=0;$i<size($bianliang);$i++)
     {
     string$temp=($bianliang[$i]+" ") ;
     $bn+=$temp;
     }
    textFieldButtonGrp -e -tx $bn baocun_qvxian_mingzi;
}

global proc zxb_yanpipengzhuang_yanjingkongzhiqi_proc()
{
    string $bianliang[]=`ls -sl`;//
    string$bn="";
    
     for($i=0;$i<size($bianliang);$i++)
     {
     string$temp=($bianliang[$i]+" ") ;
     $bn+=$temp;
     }
    textFieldButtonGrp -e -tx $bn baocun_yanjing_kongzhiqi_mingzi;
}


global proc zxb_yanpipengzhuang_bn_proc()
{
    string $bianliang[]=`ls -sl -type "joint"`;//
    string$bn="";
    
     for($i=0;$i<size($bianliang);$i++)
     {
     string$temp=($bianliang[$i]+" ") ;
     $bn+=$temp;
     }
    textFieldButtonGrp -e -tx $bn baocun_yanpipengzhuang_bn_mingzi;
}


global proc zxb_yanpipengzhuang_yanqiuqvmian_proc()
{
    string $bianliang[]=`ls -sl `;//
    string$bn="";
    
     for($i=0;$i<size($bianliang);$i++)
     {
     string$temp=($bianliang[$i]+" ") ;
     $bn+=$temp;
     }
    textFieldButtonGrp -e -tx $bn baocun_yanpipengzhuang_qvmian_mingzi;
}



global proc zxb_panpipengzhuang_chengxu_proc()
    {
/////////////////上蒙皮关节 对应下蒙皮带融合变形的曲线/////////////////////////////////////
      string$all_qvxian_string=`textFieldButtonGrp -q -tx baocun_qvxian_mingzi`;
      string $qvxians[]=stringToStringArray($all_qvxian_string," ");
      string$qvxian=$qvxians[0];//带融合变形的曲线
      string$all_kongzhiqi_string=`textFieldButtonGrp -q -tx baocun_yanjing_kongzhiqi_mingzi`;
      string $kongzhiqis[]=stringToStringArray($all_kongzhiqi_string," ");
      string$kongzhqi=$kongzhiqis[0];//控制器名字
      string$all_gugebn_string=`textFieldButtonGrp -q -tx baocun_yanpipengzhuang_bn_mingzi`;
      string $gugebns[]=stringToStringArray($all_gugebn_string," ");//所有骨骼名字
      string$all_qvmian_string=`textFieldButtonGrp -q -tx baocun_yanpipengzhuang_qvmian_mingzi`;
      string $qvmians[]=stringToStringArray($all_qvmian_string," ");//曲面
      string$qvmian=$qvmians[0];
      
      string$fanweijiedian[]= `listConnections -d 1 -s 0 ($kongzhqi+".gensui")`;
      string$fanwei=$fanweijiedian[0];//找到到范围节点
     // select -r$fanxiang;
      string$fanxiangjiedian[]= `listConnections -d 1 -s 0 ($fanwei+".outValueX")`;
      string$fanxiang="";
      for($j=0;$j<size($fanxiangjiedian);$j++)
         {
             string$type=`nodeType $fanxiangjiedian[$j]`;
             if($type=="reverse"){$fanxiang=$fanxiangjiedian[$j];}
         }//找到反向节点
         
      string$fanweishuchu=($fanwei+".outValueX");
      string$fangxiangshuchu=($fanxiang+".outputX");
      
      
      string$qvxianxingxi=($qvxian+"_yanpi_pengzhuang_curveInfo");
      int$ex=`objExists $qvxianxingxi`;
      if($ex==1){delete $qvxianxingxi ;}
     shadingNode -asUtility curveInfo -n $qvxianxingxi; //创建曲线信息节点
     
     string$qvxian_shap[]=`listRelatives -s $qvxian`;
     string$qvxianshep=$qvxian_shap[0];
     connectAttr -force ($qvxianshep+".worldSpace[0]")  ($qvxianxingxi+".inputCurve");
     float$qvxianchangdu=`getAttr ($qvxianxingxi+".arcLength")`;//获得曲线长度
      
     
      
       for($i=0;$i<size($gugebns);$i++)
           {
              string$bn=$gugebns[$i];
              string$inpute_A[]=`listConnections -d 0 -s 1 ($bn+".tx")`;
              string$yuesu=$inpute_A[0];//找到约束
              string$locs[]=`listConnections -d 0 -s 1 ($yuesu+".target[0].targetTranslate")`;
              string$loc=$locs[0];//找到定位器
              delete$yuesu;//删除点约束约束
              string$bn_A=($bn+"fuzhi_AB");
              select -r $bn;
              duplicate -rr -n $bn_A;//复制关节
              string$bn_zi[]=`listRelatives -c -fullPath  $bn_A`;
              delete $bn_zi[0];//删除没有用的约束节点 
              setAttr ($bn_A+".visibility") 0;//隐藏复制出来的关节
              pointConstraint -mo $loc $bn_A;//定位器点约束复制出来的关节

           }
      
       for($i=0;$i<size($gugebns);$i++)
       {
         string$cbn=$gugebns[$i];
         string$Abn=($gugebns[$i]+"fuzhi_AB");//
         string$qvxian_A=($cbn+"_xiangjiao_"+$i);
         curve -d 1 -p 0 0 0 -p 0 ($qvxianchangdu*10) 0 -k 0 -k 1  -n $qvxian_A;
         select -r $qvxian_A;
         CenterPivot;//居中曲线坐标
         setAttr ($qvxian_A+".visibility") 0;//创建曲线
      
         delete`pointConstraint  $Abn $qvxian_A`;//曲线约束到关节
         parent $qvxian_A $Abn;//曲线P给关节
         string$qvxian_shap_c[]=`listRelatives -s $qvxian_A`;
         string$qvxian_shapc=$qvxian_shap_c[0];//刚创建的曲线型节点
         
         string$xiangjiao=($cbn+"_pengzhuang_curveIntersect"+$i);//创建曲线相交点节点
         int$ex=`objExists $xiangjiao`;
         if($ex==1){delete $xiangjiao ;}
         createNode "curveIntersect" -n $xiangjiao;//创建曲线相交节点
         connectAttr -force ($qvxianshep+".worldSpace[0]") ($xiangjiao+".inputCurve1");//链接曲线1
         connectAttr -force ($qvxian_shapc+".worldSpace[0]") ($xiangjiao+".inputCurve2");//链接曲线2
         setAttr ($xiangjiao+".useDirection") 1;
         setAttr -type float3 ($xiangjiao+".direction") 0 0 1;///设置
         
         string$loc=($cbn+"_pengzhuang_loc_gensui_"+$i);
         spaceLocator -p 0 0 0 -n $loc; //创建定位器  跟随曲线
         
         string$qvxianxingxi=($cbn+"_eye_pengzhuang_pointOnCurveInfo"+$i);
         int$ex=`objExists $qvxianxingxi`;
         if($ex==1){delete $qvxianxingxi ;}
         createNode "pointOnCurveInfo" -n $qvxianxingxi; //创建曲线信息节点
         connectAttr -force ($qvxianshep+".worldSpace[0]") ($qvxianxingxi+".inputCurve");//链接眼皮的曲线
         connectAttr -force  ($qvxianxingxi+".position") ($loc+".t");//控制定位器
         connectAttr -f ($xiangjiao+".parameter1[0]") ($qvxianxingxi+".parameter");

         string$loc_qvmian=($cbn+"_pengzhuang_loc_gensuiqvmian_"+$i);
         spaceLocator -p 0 0 0 -n $loc_qvmian; //创建第二个定位器  跟随曲面
         
         string$qvmian_shaps[]=`listRelatives -s $qvmian`;
         string$qvmian_shap=$qvmian_shaps[0];
         
         string$qvmianposjiedian=($cbn+"_pengzhuang_closestPointOnSurface_"+$i);
         int$ex=`objExists $qvmianposjiedian`;
         if($ex==1){delete $qvmianposjiedian ;}
         shadingNode -asUtility closestPointOnSurface -n $qvmianposjiedian;
         connectAttr -f  ($qvmian_shap+".worldSpace[0]") ($qvmianposjiedian+".inputSurface");
         connectAttr -f  ($loc+".t") ($qvmianposjiedian+".inPosition");//第一个定位器的位置信息输入到曲面上
         connectAttr -f  ($qvmianposjiedian+".position") ($loc_qvmian+".t") ;//第二个定位器跟随曲面
       

         string$loc_qiehuan=($cbn+"_pengzhuang_loc_gensuiqiehuan_"+$i);
         spaceLocator -p 0 0 0 -n $loc_qiehuan; //创建第三个定位器  切换定位器
         string$dianyuesu[]=`pointConstraint  $loc $loc_qvmian $loc_qiehuan`;
         connectAttr -f  $fanweishuchu ($dianyuesu[0]+"."+$loc+"W0") ;//第二个定位器跟随曲面
         connectAttr -f   $fangxiangshuchu  ($dianyuesu[0]+"."+$loc_qvmian+"W1") ;//第二个定位器跟随曲面
      
         string$loc_rootgrp=($qvxian+"eye_pengzhuang_grp_loc");
         int$ex=`objExists $loc_rootgrp`;
         if($ex==0)
            {
                select -cl ;
                group -empty -n $loc_rootgrp;
                setAttr ($loc_rootgrp+".visibility") 0;
                setAttr -lock true ($loc_rootgrp+".v"); //创建总组
             }
         parent $loc $loc_qvmian $loc_qiehuan $loc_rootgrp;//定位器方到总组里面
         
         
         
       
         string$loc_juzhong=($cbn+"_pengzhuang_loc_juzhong_"+$i);
         string$loc_grp_a=($loc_juzhong+"_grp_A");
         spaceLocator -p 0 0 0 -n $loc_juzhong; //创建第四个个定位器  居中定位器
         group -n $loc_grp_a;
         
         string$yuesu_B[]=`pointConstraint $Abn $loc_qiehuan $loc_grp_a`;//复制出来的关节+切换定位器 约束第4个定位器
         
         
         setAttr ($yuesu_B[0]+"."+$loc_qiehuan+"W1") 0.5;
         setAttr ($yuesu_B[0]+"."+$Abn+"W0") 0.5;
         parent $loc_grp_a $loc_rootgrp ;
         
         string$yuesu_C[]=`pointConstraint $Abn $loc_juzhong $cbn`;//第四个定位器 跟AB关节点约束最终的关节
         
         
         
         string$loc_jshijie=($cbn+"_pengzhuang_loc_shijie_"+$i);//创建第5个定位器
         spaceLocator -p 0 0 0 -n $loc_jshijie;
         parent $loc_jshijie $loc_rootgrp;
         pointConstraint $Abn $loc_jshijie;
         
         string$upposloc=$loc_jshijie;
         string$dwposloc=$loc_qiehuan;
         
         float$ty_a= `getAttr ($loc_jshijie+".ty")`;
         float$ty_b= `getAttr ($loc_qiehuan+".ty")`;
         
         if($ty_a<$ty_b)
            {
             $upposloc=$loc_qiehuan;
             $dwposloc=$loc_jshijie;
             }
       // select -r $dwposloc;
        string$jianjian_A=($cbn+"_pengzhuang_plusMinusAverage"+$i);
       int$ex=`objExists $jianjian_A`;
       if($ex==1){delete $jianjian_A;}
       
      shadingNode -asUtility plusMinusAverage -n $jianjian_A;//创建加减节点
      connectAttr -f ($upposloc+".ty") ($jianjian_A+".input1D[0]");
      connectAttr -f ( $dwposloc+".ty") ($jianjian_A+".input1D[1]");
      setAttr ($jianjian_A+".operation") 2;
      addAttr -ln "zhi"  -at double  -dv 0 -k 1 $loc_juzhong;
      connectAttr -f ($jianjian_A+".output1D")  ($loc_juzhong+".zhi");
   
      string$tiaojianjiedian=($cbn+"_pengzhuang_condition"+$i);
       int$ex=`objExists $tiaojianjiedian`;
       if($ex==1){delete $tiaojianjiedian;}
      shadingNode -asUtility condition -n $tiaojianjiedian;//创建条件节点
      connectAttr -f ($jianjian_A+".output1D") ($tiaojianjiedian+".firstTerm");
      setAttr ($tiaojianjiedian+".operation") 2;
      setAttr ($tiaojianjiedian+".colorIfTrueR") 1;
      setAttr ($tiaojianjiedian+".colorIfFalseR") 0;
      
      
       string$fanxiangjiedian_a=($cbn+"_pengzhuang_reverse"+$i);//创建反向节点
       int$ex=`objExists $fanxiangjiedian_a`;
       if($ex==1){delete $fanxiangjiedian_a;}
       shadingNode -asUtility reverse -n $fanxiangjiedian_a;
       connectAttr -f ($tiaojianjiedian+".outColorR") ($fanxiangjiedian_a+".inputX");//条件节点连接到反向节点
       connectAttr -f   ($tiaojianjiedian+".outColorR") ($yuesu_C[0]+"."+$Abn+"W0");
       connectAttr -f   ($fanxiangjiedian_a+".outputX") ($yuesu_C[0]+"."+$loc_juzhong+"W1");
       
       string$upgensui=($kongzhqi+".upgensui");
       int$ex=`objExists $upgensui`;
       if($ex==0)
         {
           addAttr -ln "upgensui"  -at double  -dv 0 -k 1 $kongzhqi;
           setAttr -keyable false -channelBox true ($kongzhqi+".upgensui");

          }
          
       string$dwgensui=($kongzhqi+".dwgensui");
       int$ex=`objExists $dwgensui`;
       if($ex==0)
         {
           addAttr -ln "dwgensui"  -at double  -dv 0 -k 1 $kongzhqi;
           setAttr -keyable false -channelBox true ($kongzhqi+".dwgensui");

          }
      /* int$revDV=1;
       if($upposloc==$loc_jshijie){$revDV=-1;}*/
       
       string$upgensui=($kongzhqi+".upRev");
       int$ex=`objExists $upgensui`;
       if($ex==0)
         {
           addAttr -ln "upRev"  -at double -min -1 -max 1  -dv -1 -k 1 $kongzhqi;
           setAttr -keyable false -channelBox true ($kongzhqi+".upRev");

          }
          
        string$dwgensui=($kongzhqi+".dwRev");
       int$ex=`objExists $dwgensui`;
       if($ex==0)
         {
           addAttr -ln "dwRev"  -at double -min -1 -max 1  -dv 1 -k 1 $kongzhqi;
           setAttr -keyable false -channelBox true ($kongzhqi+".dwRev");

          }
          
       string$bngensui=($cbn+".bnRev");
       int$ex=`objExists $bngensui`;
       if($ex==0)
         {
           addAttr -ln "bnRev"  -at double   -dv 0 -k 1 $cbn;
           setAttr -keyable false -channelBox true ( $cbn+".bnRev");
          }
       
       
       string$jiuanjian_jiedian_A=($cbn+"_pengzhuang_plusMinusAverage_A_zonghe_"+$i);
       int$ex=`objExists $jiuanjian_jiedian_A`;
       if($ex==1){delete $jiuanjian_jiedian_A;}
       shadingNode -asUtility plusMinusAverage -n $jiuanjian_jiedian_A;//创建加减节点
       if($upposloc==$loc_jshijie)
          {
          connectAttr -f ($kongzhqi+".upgensui") ($jiuanjian_jiedian_A+".input1D[0]");
          }else
               { 
               connectAttr -f ($kongzhqi+".dwgensui") ($jiuanjian_jiedian_A+".input1D[0]");
               }
               
       connectAttr -f ( $cbn+".bnRev") ($jiuanjian_jiedian_A+".input1D[1]");
       
        string$chengchu_A=($cbn+"_pengzhuang_multiplyDivide_pianyi_"+$i);
       int$ex=`objExists $chengchu_A`;
       if($ex==1){delete $chengchu_A;}
       shadingNode -asUtility multiplyDivide -n $chengchu_A;//创建乘除节点    
       connectAttr -f ($jiuanjian_jiedian_A+".output1D") ($chengchu_A+".input1X");
       if($upposloc==$loc_jshijie)
         {
         connectAttr -f ($kongzhqi+".upRev") ($chengchu_A+".input2X");

         }else
             {
                connectAttr -f ($kongzhqi+".dwRev") ($chengchu_A+".input2X"); 
              }
          
          
       connectAttr -f  ($chengchu_A+".outputX") ($loc_juzhong+".ty") ;
       
       
       string$jiajian_jiedian_B=($cbn+"_pengzhuang_plusMinusAverage_B_jiandiao_"+$i);
       int$ex=`objExists $jiajian_jiedian_B`;
       if($ex==1){delete $jiajian_jiedian_B;}
       shadingNode -asUtility plusMinusAverage -n $jiajian_jiedian_B;//创建加减节点
       
       string$chengchu_B=($cbn+"_pengzhuang_multiplyDivide_shuangbei_"+$i);
       int$ex=`objExists $chengchu_B`;
       if($ex==1){delete $chengchu_B;}
       shadingNode -asUtility multiplyDivide -n $chengchu_B;//创建乘除节点    
       
       connectAttr -f   ($jianjian_A+".output1D") ( $jiajian_jiedian_B+".input1D[0]");
       connectAttr -f  ($chengchu_A+".outputX")($chengchu_B+".input1X");
       setAttr ($chengchu_B+".input2X") 2;

       connectAttr -f  ($chengchu_B+".outputX")( $jiajian_jiedian_B+".input1D[1]");
       setAttr ($jiajian_jiedian_B+".operation") 2;
       connectAttr -f ($jiajian_jiedian_B+".output1D") ($tiaojianjiedian+".firstTerm");
       
       
 
       } 
       
  }    
      
      
/////////////////瞳孔绑定//////////////////////////////////////////////////////////////////////////////
global proc zxb_tongkongsuofang_ciji_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "瞳孔缩放" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;
text -l "--------------瞳孔缩放--------------" -h 25  -bgc 0.3 0.7 0.3;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入所有眼球模型L" -tx "模型" -ed 0  zxb_tongkongsuofang_zairu_mode_yey_L;
button -l "载入模型" -c "zxb_tongkongsuofang_zairumoxing_L" ;
textFieldGrp  -cw2 100 130 -l "载入所有眼球模型R" -tx "模型" -ed 0  zxb_tongkongsuofang_zairu_mode_yey_R;
button -l "载入模型" -c "zxb_tongkongsuofang_zairumoxing_R" ;





textFieldGrp  -cw2 100 130 -l "生成眼球的名字" -tx "名字" -ed 0  zxb_tongkongsuofang_zairu_mode_yey;
text "   ";
textFieldGrp  -cw2 100 130 -l "生成眼曲面的名字" -tx "名字" -ed 0  zxb_tongkongsuofang_zairu_qvcmian_yey;
text "   ";
textFieldGrp  -cw2 100 130 -l "当前模型名字" -tx "名字" -ed 0  zxb_tongkongsuofang_zairu_mode_A_yey;
setParent ..; 
text "   ";
textFieldGrp  -cw2 100 400 -l "预设混合变形" -tx " tongBSA tongBSB tongBSC tongBSD tongBSE "   yueshe_BS;

button -l "选中两个点生成模型" -c "zxb_tongkongsuofang_shengcengmoxing_proc" ;
rowColumnLayout -nc 2 -cw 1 180 -cw 2 140;
text -l "";
checkBox -l    "对称" -v 0 zxb_shengchengyouyanqiu_qvxian;

setParent ..; 
columnLayout -adj 1 -w 300 gtBSColumlayout;

button -l "生成绑定：对称瞳孔勾选对称再次成生" -c "zxb_tongkongsuofang_shengcbangd_proc" ;
rowColumnLayout -nc 2 -cw 1 180 -cw 2 140;
text -l "";
checkBox -l    "对称" -v 0 zxb_shengchengyouyanqiu_qvxian_A;
setParent ..; 
rowColumnLayout -nc 2 -cw 1 240 -cw 2 240;

textFieldGrp  -cw2 130 130 -l "添加属性控制器" -tx "" -ed 0  kongzhiqi;
string$kongzhiqi="kongzhiqi";
button -l "添加属性控制器" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;
textFieldGrp  -cw2 130 130 -l "载入AB控制器:内瞳孔" -tx "" -ed 0  kongzhiqi_ab;
string$kongzhiqi_ab="kongzhiqi_ab";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi_ab+"\")") ;

textFieldGrp  -cw2 130 130 -l "载入A控制器:外瞳孔" -tx "" -ed 0  kongzhiqi_a;
string$kongzhiqi_a="kongzhiqi_a";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi_a+"\")") ;

textFieldGrp  -cw2 100 100 -l "放大 " -tx "2"   fangda;
textFieldGrp  -cw2 100 100 -l "缩小 " -tx "0.2"   suoxiao;
textFieldGrp  -cw2 100 100 -l "缩小x轴" -tx "0.2"   suoxiaox;
textFieldGrp  -cw2 100 100 -l "放大x轴" -tx "1.5"   fangdax;

textFieldGrp  -cw2 100 100 -l "缩小Y轴" -tx "0.2"   suoxiaoy;
textFieldGrp  -cw2 100 100 -l "放大Y轴" -tx "1.5"   fangday;
//floatSlider; 
setParent ..; 
textFieldGrp  -cw2 100 400 -l "放大缩小 " -tx " tongBSAA tongBSBB tongBSCC tongBSDD tongBSEE tongBSFF " -ed 0   yueshe_BS_A;
button -l "生成混合变形：对称瞳孔勾选对称再次成生" -c "zxb_tongkong_BSProc" ;

showWindow  ;
}




global proc zxb_tongkongsuofang_zairumoxing_L()
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) zxb_tongkongsuofang_zairu_mode_yey_L;
}

global proc zxb_tongkongsuofang_zairumoxing_R()
{
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++)
    {
    $obj+=(" "+$sel[$i]);
    }
textFieldGrp -e -tx ($obj) zxb_tongkongsuofang_zairu_mode_yey_R;
}

global proc zxb_tongkongsuofang_shengcengmoxing_proc()
{
string $ves[]=`ls -sl -fl`;//顶点  中间  上面
string$temp[];
 clear$temp;
int$shuliang=`tokenize $ves[0] "." $temp`;
string$mode=$temp[0];
float$pos_teme[]=`xform -q -ws -t $ves[0]`;
float$pos_teme_a[]=`xform -q -ws -t $ves[1]`;
if($pos_teme[1]>$pos_teme_a[1])
  {
   $pos_teme=`xform -q -ws -t$ves[1]`;
   $pos_teme_a= `xform -q -ws -t $ves[0]`;
  }
string$loc_A=($mode+"_loca");
string$loc_B=($mode+"_locb");
spaceLocator -p 0 0 0 -n $loc_A;
spaceLocator -p 0 0 0 -n $loc_B;
setAttr -type float3($loc_A+".translate") $pos_teme[0] $pos_teme[1] $pos_teme[2];
setAttr -type float3($loc_B+".translate") $pos_teme_a[0] $pos_teme_a[1] $pos_teme_a[2];

//创建眼球模型跟曲面
string$qiu=($mode+"_qiu");
string$qiunurb=($mode+"_nurb");
polySphere -r 1 -sx 20 -sy 20 -ax 0 0 1 -cuv 2 -ch 1 -n ($mode+"_qiu");
sphere -p 0 0 0 -ax 0 1 0 -ssw 0 -esw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -nsp 4 -ch 0 -n $qiunurb;
string$qvmian_shapes[]=`listRelatives -s $qiunurb`;
string$qvmian_shape=$qvmian_shapes[0];
select -cl  ;
select -r $mode;
newCluster " -envelope 1";
string$cua[]=`ls -sl`;
delete` pointConstraint $cua[0]  ($mode+"_qiu")`;
select -r $loc_A;
select -add $qiu;
aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "object" -worldUpObject $loc_B;
delete $loc_B $loc_A $cua[0] ;

//创建的模型尽量靠近原始模型
float$boxs[]=`getAttr ($mode+".boundingBoxSize")`;
float$beishu=0.5;
setAttr ($qiu+".s") ($boxs[0]*$beishu) ($boxs[1]*$beishu) ($boxs[2]*$beishu);
delete` pointConstraint $qiu $qiunurb`;
delete` scaleConstraint $qiu $qiunurb`;
string$modejiedian=($mode+"yanqiu_closestPointOnMesh");
string$shaps[]=`listRelatives -s $mode`;
string$shap=$shaps[0];
int$ex=`objExists $modejiedian`;
if($ex==1){delete $modejiedian; }
createNode "closestPointOnMesh" -n $modejiedian; //多边型最近点节点
select -r ($qiu+".vtx[0:999999999]");
connectAttr -force ($shap+".worldMesh[0]")  ($modejiedian+".inMesh");
string $qiu_ves[]=`ls -sl -fl`;//顶点
for($i=0;$i<size($qiu_ves);$i++)
   {
       string$dian=$qiu_ves[$i];
       float$pos_temps[]=`xform -q -ws -t  $dian`;
       setAttr -type float3 ($modejiedian+".inPosition") $pos_temps[0] $pos_temps[1] $pos_temps[2] ;
       float $xingpos[]=`getAttr ($modejiedian+".position")`;
       xform -ws -t $xingpos[0] $xingpos[1] $xingpos[2] $dian;
       
   }




textFieldGrp -e -tx  $qiu zxb_tongkongsuofang_zairu_mode_yey;
textFieldGrp -e -tx $qiunurb zxb_tongkongsuofang_zairu_qvcmian_yey;
textFieldGrp -e -tx $mode  zxb_tongkongsuofang_zairu_mode_A_yey;

}




global proc zxb_tongkongsuofang_shengcbangd_proc()
{
string$qiu=`textFieldGrp -q -tx  zxb_tongkongsuofang_zairu_mode_yey`;
string$yushess=`textFieldGrp -q -tx  yueshe_BS`;
string$qiunurb=`textFieldGrp -q -tx zxb_tongkongsuofang_zairu_qvcmian_yey`;
string$mode=`textFieldGrp -q -tx zxb_tongkongsuofang_zairu_mode_A_yey`;
string$eye_mode_A=`textFieldGrp -q -tx   zxb_tongkongsuofang_zairu_mode_yey_L`;
string$eye_mode_B=`textFieldGrp -q -tx   zxb_tongkongsuofang_zairu_mode_yey_R`;
int$weiyi= `checkBox -q -value zxb_shengchengyouyanqiu_qvxian `;
string $grp=($mode+"_yanqiu_grp");
string$qiu_R=($qiu+"_R");
string$qiunurb_R=($qiunurb+"_R");
string$grp_a=($grp+"_R");
int$left=$weiyi;
//string$eye_mode_A="Mery_geo_lf_pupileM Mery_geo_lf_eyeM";////需要载入名字的眼球模型
//string$eye_mode_B="Mery_geo_rg_pupileM Mery_geo_rg_eyeM";////需要载入名字的眼球模型
string$mode_shuzu="";
if($left==0){$mode_shuzu=$eye_mode_A;}else{$mode_shuzu=$eye_mode_B;}
string$MOde[]= stringToStringArray($mode_shuzu, " ");//字符串转化数组
string$yushes[]= stringToStringArray($yushess, " ");//字符串转化数组

int$ex=`objExists $MOde[0]`;
if($ex>0)
  {
   if($left==0)
     {
     select -r $qiu;
     select -add $qiunurb;
     doGroup 0 1 1 ;
     rename $grp;
     //复制右眼模型曲面
     select -r $grp;
     duplicate -rr -n $grp_a;
     string$zieutis[]=`listRelatives -c -fullPath  $grp_a`; 
     rename $zieutis[0] $qiu_R;
     rename $zieutis[1] $qiunurb_R;
     setAttr ($grp_a+".scaleX") -1;
    }
  
  
string$qvmian_shapes_R[]=`listRelatives -s $qiunurb_R`;
string$qvmian_shape_R=$qvmian_shapes_R[0];
string$qvmian_shapes[]=`listRelatives -s $qiunurb`;
string$qvmian_shape=$qvmian_shapes[0];
string$qvmian_xingjiedian="";
string$qiu_aaa="";
   ///创建曲线1
  string$R_L="L";
  if($left==1)
   {
   $R_L="R";
   $qvmian_xingjiedian=$qvmian_shape_R;
   $qiu_aaa=$qiu_R;
   select -r $qiu_R;
   }else
        {
        $R_L="L";
        $qvmian_xingjiedian=$qvmian_shape;
         $qiu_aaa=$qiu;
        select -r $qiu;
        }
  string$qiu_A=($qiu+"_qvxian_meish"+$R_L);
  string$qvxian=($qiu_A+"_tongkongC_"+$R_L);
  duplicate -rr -n $qiu_A ; 
  doMenuComponentSelectionExt($qiu_A, "edge", 1);
  select -add   ($qiu_A+".e[0:19]") ($qiu_A+".e[20:39]") ($qiu_A+".e[40:59]") ($qiu_A+".e[60:79]") ($qiu_A+".e[80:99]") ($qiu_A+".e[100:119]")  ($qiu_A+".e [120:139]") ($qiu_A+".e[140:159]") ($qiu_A+".e[360:379]")($qiu_A+".e[160:179]");
  ConvertSelectionToFaces;
  delete;
  select -add   ($qiu_A+".e[160:179]") ;
  polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian;
  DeleteHistory;
  CenterPivot;
  string$qvxiang_grp=($qvxian+"_grp");
  group -n $qvxiang_grp;



  //创建曲线2
  string$qvxian_A_bngrp=($qiu_A+"_qvxian_grp"+$R_L);
  int$ex=`objExists $qvxian_A_bngrp`;
  if($ex==0){ group -empty -n $qvxian_A_bngrp ; }
  polySelect -er 322 $qiu_A;
  string $qiu_A_xian[]=`ls -sl -fl`;//线段
  string$eyeqvxian_s[];
  clear$eyeqvxian_s;
  for($i=0;$i<size($qiu_A_xian);$i++)
    {   string$string_temp[];
        string$qvxian_B=($qiu_A+"_huanxing"+$i);
        clear $string_temp;
        string$bian=$qiu_A_xian[$i];
        int$temp_A=`tokenize  $bian "[" $string_temp`;
        $temp_A=`tokenize  $string_temp[1] "]" $string_temp`;
         int$index=$string_temp[0];
         polySelect -edgeLoop $index $qiu_A;
         polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_B;
         DeleteHistory;
         parent $qvxian_B $qvxian_A_bngrp;
        $eyeqvxian_s[$i]=$qvxian_B;
    }
    
    //判断曲线正反
  for($i=0;$i<size($eyeqvxian_s);$i++)
    {
    string$qvxian_cv=$eyeqvxian_s[$i];
    select -r ($qvxian_cv+".cv[0:9999999]");
     string $temp_cv[]=`ls -sl -fl`;//顶点
     float$pos_cv_a[]=`xform -q -ws -t $temp_cv[0]`;
     int$qq=(size($temp_cv)-1);
     float$pos_cv_b[]=`xform -q -ws -t ($temp_cv[$qq])`;
      if($pos_cv_a[2]<$pos_cv_b[2])
        {
            reverseCurve -ch 0 -rpo 1 $qvxian_cv;
        }
    }

  //创建关节
  string$qiu_A_bngrp=($qiu_A+"_tongkong_bn_grp"+$R_L);
  int$ex=`objExists $qiu_A_bngrp`;
  if($ex==0){ group -empty -n $qiu_A_bngrp; }
  for($i=0;$i<size($eyeqvxian_s);$i++)
    {
        string$qvxian_cv=$eyeqvxian_s[$i];
        select -r ($qvxian_cv+".cv[0:9999999]");
        string $temp_cv[]=`ls -sl -fl`;//顶点
        int$size=size($temp_cv);
        int$ex=`objExists($qvxian_cv+".zhaodaoBN")`; 
        if($ex==1){deleteAttr ($qvxian_cv+".zhaodaoBN");}
        addAttr -ln "zhaodaoBN"  -dt "string"  $qvxian_cv;
        //setAttr -type "string" ($qvxian_cv+".zhaodaoBN") "";
     
        for($ii=0;$ii<$size;$ii++)
            {
              string$bnmane=($qiu_A+"_tongkong_BN_"+$i+$R_L+$ii);
              string$cv=$temp_cv[$ii];
              float$cvpos_temp[]=`xform -q -ws -t  $cv`;
              select -cl  ;
              joint -p $cvpos_temp[0] $cvpos_temp[1] $cvpos_temp[2]-n $bnmane;
              setAttr ($bnmane+".radius") 0.1;

              parent $bnmane $qiu_A_bngrp;
              int$ex=`objExists ($bnmane+".zhaodaoBN")`; 
              if($ex==0){addAttr -ln "zhaodaoBN"  -at bool  $bnmane;}

              string$getbnname=`getAttr($qvxian_cv+".zhaodaoBN")`;
              string$xingming=($getbnname+$bnmane+" ");
             
              setAttr -type "string" ($qvxian_cv+".zhaodaoBN") $xingming;
             }
       
    }
 
 
 
 
 ////关节跟随曲面并衰减控制
  string$qiu_A_loc_rp=($qiu_A+"_tongkong_loc_grp"+$R_L);
  int$ex=`objExists $qiu_A_loc_rp`;
  if($ex==0){ group -empty -n $qiu_A_loc_rp ; }
   
   string$qiu_shaps[]=`listRelatives -s   $qiu_aaa`;
   string$qiu_shap=$qiu_shaps[0];
 
   string$kloc[];
   clear$kloc;
   string$kbn[];
   clear$kbn;
   for($i=0;$i<size($eyeqvxian_s);$i++)
    {
        string$qvxian_B=$eyeqvxian_s[$i];
        string$strings=`getAttr ($qvxian_B+".zhaodaoBN")`;
        string$bns[]=stringToStringArray($strings, " ");
        string$qvxianshaps[]=`listRelatives -s $qvxian_B`;
        string $qvxianshap=$qvxianshaps[0];
        
        
         string $qvxianxixi=($qvxian_B+"_eye_yanqiu_curveInfo");
         int$ex=`objExists  $qvxianxixi`;
         if($ex==1){delete   $qvxianxixi;}
         shadingNode -asUtility curveInfo -n  $qvxianxixi; //曲线信息
         connectAttr -force ($qvxianshap+".worldSpace[0]") ($qvxianxixi+".inputCurve");
        float$dis=`getAttr ($qvxianxixi+".arcLength")`;
        float$cdiss=0;
        
        for($j=0;$j<size($bns);$j++)
            {
             string$bn=$bns[$j];
             string$bn_loc=($bn+"loc"+$j);
             string$bn_loc_grpa=($bn+"loc_A"+$j);
             spaceLocator -p 0 0 0 -n $bn_loc;
             group -n $bn_loc_grpa;
             parent $bn_loc_grpa $qiu_A_loc_rp;
             delete ` pointConstraint  $bn $bn_loc_grpa`;
             
             string $qvmianjiedian=($bn+"_eye_yanqiu_closestPointOnSurface");
             int$ex=`objExists $qvmianjiedian`;
             if($ex==1){delete  $qvmianjiedian;}
             createNode "closestPointOnSurface" -n $qvmianjiedian ;//曲面信息节点	
             string$locshaps[]=`listRelatives -s $bn_loc`;
             string$locshap=$locshaps[0];
             
             connectAttr -force ($qvmian_xingjiedian+".worldSpace[0]") ($qvmianjiedian+".inputSurface");
             connectAttr -force ($locshap+".worldPosition[0]") ($qvmianjiedian+".inPosition");
             connectAttr -force  ($qvmianjiedian+".position") ($bn+".t") ;//定位器控制骨骼
             if($j==0)
               {
                $kloc[$i]=$bn_loc;
                $kbn[$i]=$bn;
               }
             if($j>0)
                {
                  int$jj=$j-1;
                  string$bbn=$bns[$jj];
                  float$weizhi[]=`xform -q -ws -t $bbn`;
                  float$weizhi_a[]=`xform -q -ws -t $bn`;
                  float$ccdis=mag(<<$weizhi[0],$weizhi[1],$weizhi[2]>>-<<$weizhi_a[0],$weizhi_a[1],$weizhi_a[2]>>);
                  $cdiss+=$ccdis;
                  float$changdu=(1-($cdiss/$dis));
                  
                  
                  string $chenmgcujiedian_A=($bn_loc+"_eye_yanqiu_multiplyDivide_A");
                  int$ex=`objExists $chenmgcujiedian_A`;
                  if($ex==1){delete  $chenmgcujiedian_A;}
                  shadingNode -asUtility multiplyDivide -n $chenmgcujiedian_A;//创建乘除节点
                  connectAttr -force ($bns[0]+"loc"+"0"+".t") ($chenmgcujiedian_A+".input1");
                  int$ex=`objExists ($bn+".gensui")`;
                  if($ex==0){addAttr -ln "gensui"  -at double  -dv $changdu -k 1 $bn;}
                  setAttr -keyable false -channelBox true ($bn+".gensui");
                  connectAttr -force ($bn+".gensui") ($chenmgcujiedian_A+".input2X");
                  connectAttr -force ($bn+".gensui") ($chenmgcujiedian_A+".input2Y");
                  connectAttr -force ($bn+".gensui") ($chenmgcujiedian_A+".input2Z");
                  connectAttr -force  ($chenmgcujiedian_A+".output") ($bn_loc+".t");


                   
                } 
             }
    }
    
  //第一排定位器跟随曲线
  string$qvxian_A=($qvxian+"_A");
  select -r $qvxian;
  duplicate -rr -n $qvxian_A;
  parent $qvxian $qvxian_A_bngrp;
  float$boxs_a[]=`getAttr ($qvxian_A+".boundingBoxSize")`;
  select -r  ($qvxian_A+".cv[0:99999999999]");
  move -r 0 0 ($boxs_a[0]*0.5);
  //setAttr ($qvxiang_grp+".tz") ;
  string$qvxianshap_Bs[]=`listRelatives -s $qvxian`;
  string$qvxianshap_B=$qvxianshap_Bs[0];
  for($i=0;$i<size($kloc);$i++)
   {
     string$loc_temp= $kloc[$i];
     string $qvxianjiedian_A=($loc_temp+"_eye_yanqiu_qvxian_nearestPointOnCurve_A");
     string $qvxianjiedian_AA=($loc_temp+"_eye_yanqiu_qvxian_pointOnCurveInfo_A");
     int$ex=`objExists $qvxianjiedian_A`;
     if($ex==1){delete  $qvxianjiedian_A;}
      int$ex=`objExists $qvxianjiedian_AA`;
     if($ex==1){delete  $qvxianjiedian_AA;}
     createNode nearestPointOnCurve -n $qvxianjiedian_A ;
     createNode "pointOnCurveInfo" -n $qvxianjiedian_AA;//创建曲线信息节点
     connectAttr -force ($qvxianshap_B+".worldSpace[0]") ($qvxianjiedian_A+".inputCurve");
     connectAttr -force ($qvxianshap_B+".worldSpace[0]") ($qvxianjiedian_AA+".inputCurve");
     float$weizhi_temp[]=`xform -q -ws -t $loc_temp`;
     setAttr -type float3($qvxianjiedian_A+".inPosition")$weizhi_temp[0] $weizhi_temp[1] $weizhi_temp[2];
     float$canshu=`getAttr ($qvxianjiedian_A+".parameter")`;
     setAttr ($qvxianjiedian_AA+".parameter")$canshu;
     string$loc_A=($loc_temp+"_C");
     spaceLocator -p 0 0 0 -n $loc_A;
     connectAttr -force ($qvxianjiedian_AA+".position") ($loc_A+".t");
     parent $loc_A $qiu_A_loc_rp;
     parentConstraint  $loc_A $loc_temp;

   }

  //创建控制曲线的蒙皮关节  并添加融合节点
  string$qvxianshap_Cs[]=`listRelatives -s $qvxian_A`;
  setAttr ($qvxianshap_Cs[0]+".overrideEnabled") 1;
  setAttr($qvxianshap_Cs[0]+".overrideColor") 15;

  
  //delete`orientConstraint $qiu_aaa $qvxiang_grp `;
  string$root_bn=($qiu+"_root"+$R_L);
  select -cl  ;
  joint -p 0 0 0 -n $root_bn ;
  delete`pointConstraint $qvxian_A $root_bn`;//点约束 
  parent $root_bn $qvxian_A ;
  string$attrs[]=$yushes;
  select -r  $qvxian;
  string$bs_AA[]=`blendShape`;
  string$bstongkong=("tongkongbs_"+$qvxian);
  rename $bs_AA[0] $bstongkong;
  for($i=0;$i<size($attrs);$i++)
   {
   string$name=($qvxian+$attrs[$i]+"_"+$i);
   string$shuxing=$attrs[$i];
   select -r  $qvxian;
   duplicate -rr -n $name;
   blendShape -e  -t $qvxian $i $name 1 $bstongkong;
   select -r $qvxian_A;
   string$shuaxing_a=($qvxian_A+"."+$shuxing);
   int$ex=`objExists $shuaxing_a`;
   if($ex==0){ addAttr -ln $shuxing  -at double  -min 0 -max 1  -dv 0 -k 1 $qvxian_A;}
   setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd ($qvxian_A+"."+$shuxing)  ($bstongkong+"."+$name);
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd ($qvxian_A+"."+$shuxing)  ($bstongkong+"."+$name);

   }
 //关节控制曲线    
 if($left==0){select -r $qiunurb;}else{select -r $qiunurb_R;}     
  select -add $root_bn;
  normalConstraint -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "scene";
  select -r $root_bn;
  select -add $qvxian;
  newSkinCluster "-toSelectedBones -mi 1 -omi true -dr 6 -rui 0";  



  //创建眼球中间的关节   
  
  string$M_pos_cv= ($qiu_aaa+".vtx[381]") ;
  float$M_pos_temp[]=`xform -q -ws -t $M_pos_cv`;
  string$m_root_bn=($qiu_aaa+"_M_root"+$R_L);
  select -cl  ;
  joint -p $M_pos_temp[0] $M_pos_temp[1] $M_pos_temp[2] -n $m_root_bn ;
  parent  $m_root_bn $qiu_A_bngrp;
  string$bn=$m_root_bn;
  string$bn_loc=($bn+"loc_root");
  string$bn_loc_B=($bn+"loc_root_b");
  string$bn_loc_grpa=($bn+"loc_A_root");
  string$bn_loc_grpb=($bn+"loc_B_root");
  spaceLocator -p 0 0 0 -n $bn_loc;
  group -n $bn_loc_grpa;
  parent $bn_loc_grpa $qiu_A_loc_rp;
  delete ` pointConstraint  $bn $bn_loc_grpa`;          
  spaceLocator -p 0 0 0 -n $bn_loc_B;
  group -n $bn_loc_grpb;
  parent $bn_loc_grpb $qiu_A_bngrp;
            
  //中间关机在曲面上滑动             
  string $qvmianjiedian=($bn+"_eye_yanqiu_closestPointOnSurface_root");
  int$ex=`objExists $qvmianjiedian`;
  if($ex==1){delete  $qvmianjiedian;}
  createNode "closestPointOnSurface" -n $qvmianjiedian ;//曲面信息节点	
  string$locshaps[]=`listRelatives -s $bn_loc`;
  string$locshap=$locshaps[0];
   string$locshapBs[]=`listRelatives -s $bn_loc_B`;
  string$locshapB=$locshapBs[0];
  connectAttr -force ($qvmian_xingjiedian+".worldSpace[0]") ($qvmianjiedian+".inputSurface");
  connectAttr -force ($locshap+".worldPosition[0]") ($qvmianjiedian+".inPosition");
  connectAttr -force  ($qvmianjiedian+".position") ($bn_loc_B+".t") ;//定位器控制骨骼    
  pointConstraint -mo $qvxian_A $bn_loc;
  scaleConstraint  -mo $qvxian_A $bn_loc_B;
  setAttr ($locshapB+".v") 0;
  setAttr ($locshap+".v") 0;
  setAttr -l 1($locshapB+".v") 0;
  setAttr -l 1 ($locshap+".v") 0;
 //法线约束关节   中间关节是发现约束的定位器            
 string$all_bn[]=`listRelatives -c -ad -type "joint" $qiu_A_bngrp`;     
 select -r $all_bn;
 select -d $m_root_bn;//排除中间关节
 select -add $bn_loc_B;
 string$faxianyuseu_bn[]=`ls -sl `;
 for($i=0;$i<size($faxianyuseu_bn);$i++)
   {
       
       if($left==0){select -r $qiunurb;}else{select -r $qiunurb_R;}
      
      select -add $faxianyuseu_bn[$i];
      normalConstraint -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "scene";//法线约束

   }
  parent $bn $bn_loc_B;//中间关节跟随定位器



 //给球的模型蒙皮
  select -r $all_bn;
 select -add $qiu_aaa;            
 newSkinCluster "-toSelectedBones -mi 1 -omi 0 -dr 6 -rui 0"; 
 select -r $kbn  ;
 select -add $bn ;
 string$qaun_bn[]=`ls -sl -type "joint"`;
 select -r ($qiu_aaa+".e[360:379]") ;
 ConvertSelectionToVertices;
 string$qiu_cvs[]=`ls -sl -fl`;
 int$pinghua=2;
 string $skinCluster2=`findRelatedSkinCluster $qiu_aaa` ;//访问蒙皮节点
 float$quznhzong=`skinPercent -tv  $bn 0.75 $skinCluster2  $qiu_cvs`;


//给内眼球制作控制器
 string$qvxian_B=($qvxian_A+"B");

 select -r $qvxian_A ;
 duplicate -rr -n $qvxian_B;

 string$teme_zi_obj[]=`listRelatives -c -type "joint" -fullPath $qvxian_B`;
 delete $teme_zi_obj;
select -r ($qvxian_B+".cv[0:9999999]");
newCluster " -envelope 1";
string$cus[]=`ls -sl`;
setAttr -type float3 ($cus[0]+".scale") 0.7 0.7 0.7;
select -r  $qvxian_B;
DeleteHistory;
for($i=0;$i<size($attrs);$i++)
   {
       string$shuxing=$attrs[$i];
       catch (`deleteAttr -attribute $shuxing  $qvxian_B`);

   }

parent $qvxian_B $qvxian_A;
scaleConstraint $qvxian_B $bn;//缩放约束



string$mode_a_grp="";
 if($left==0)
  {
    $mode_a_grp=$grp ;
  }else
      {
          $mode_a_grp=$grp_a;
       } 

select -r $MOde;
string$temp_eyemode[]=`ls -sl`;
for($i=0;$i<size($temp_eyemode);$i++)
   {
       string$temp_eye_mode=$temp_eyemode[$i];
       string$eye_mode_AA=($temp_eye_mode+"_A");
       select -r $temp_eye_mode;
       duplicate -rr -n $eye_mode_AA;
       parent  $eye_mode_AA $grp;
       select -r $eye_mode_AA ;
       select -add $temp_eye_mode ;
       string$eye_hunhebianxing[]=`blendShape -frontOfChain`;
       rename $eye_hunhebianxing[0] ($temp_eye_mode+"_eye_qiu_bs");
       setAttr ($temp_eye_mode+"_eye_qiu_bs"+"."+$eye_mode_AA) 1;
       select -r $all_bn;
       select -add $eye_mode_AA;
       newSkinCluster "-toSelectedBones -mi 1 -omi 0 -dr 6 -rui 0"; 
       select -r $qiu_aaa;
       select -add $eye_mode_AA;
       copySkinWeights  -noMirror -surfaceAssociation closestPoint -influenceAssociation closestJoint;


   }






//整理层级

       
  
  
  $root_L_grp=($grp+"root_grp"+$R_L);  
  select -r  $qvxiang_grp $mode_a_grp  $qvxian_A_bngrp $qiu_A_bngrp $qiu_A_loc_rp;
  group-n  $root_L_grp;
  select -r $mode_a_grp   $qvxian_A_bngrp $qiu_A_bngrp $qiu_A_loc_rp;
  string$temp_gpr[]=`ls -sl`;
  for($i=0;$i<size($temp_gpr);$i++)
    {
        
    string$grp_q=$temp_gpr[$i];
    setAttr ($grp_q+".visibility") 0;
    setAttr -lock true ($grp_q+".v");


    }
    
   
   
}

}
//////瞳孔缩放

///////////////////////////////////////////////转换混合变形///////////////////////////////////////////////////

global proc zxb_tongkong_BSProc()
{

string$eye_mode_A=`textFieldGrp -q -tx   zxb_tongkongsuofang_zairu_mode_yey_L`;//L模型
string$eye_mode_B=`textFieldGrp -q -tx   zxb_tongkongsuofang_zairu_mode_yey_R`;//R模型
string$kongzhiqisss=`textFieldGrp -q -tx   kongzhiqi`;//
string$shuxingkongzhiqisss=`textFieldGrp -q -tx  kongzhiqi_ab `;//
string$kongzhiqi_ABSS[]= stringToStringArray($shuxingkongzhiqisss, " ");//控制器A

string$shuzhi_A=`textFieldGrp -q -tx  fangda `;//数值
string$shuzhi_B=`textFieldGrp -q -tx  suoxiao `;//数值
string$shuzhi_C=`textFieldGrp -q -tx   suoxiaox `;//数值
string$shuzhi_D=`textFieldGrp -q -tx  fangdax `;//数值
string$shuzhi_E=`textFieldGrp -q -tx  suoxiaoy `;//数值
string$shuzhi_F=`textFieldGrp -q -tx  fangday `;//数值

string$shushu=stringArrayToString({ $shuzhi_A, $shuzhi_B,$shuzhi_C,$shuzhi_D,$shuzhi_E,$shuzhi_F }, ", ");
string$shushuSSS[]= stringToStringArray($shushu, ", ");//

string$kongzhiqi_ASS=`textFieldGrp -q -tx   kongzhiqi_a`;//
string$yueshe_BSAsss=`textFieldGrp -q -tx  yueshe_BS_A`;//
string$kongzhiqi_AS[]= stringToStringArray($kongzhiqi_ASS, " ");//控制器A

string$yueshe_BSsss=`textFieldGrp -q -tx   yueshe_BS`;
string$yushes[]= stringToStringArray($yueshe_BSsss, " ");//曲线BS数组
string$yushes_A[]= stringToStringArray($yueshe_BSAsss, " ");//曲线BS数组
int$duicheng= `checkBox -q -value zxb_shengchengyouyanqiu_qvxian_A `;

string$MOdeL[]= stringToStringArray($eye_mode_A, " ");//字符串转化数组
string$MOdeR[]= stringToStringArray($eye_mode_B, " ");//字符串转化数组
string$kongzhiqiss[]=stringToStringArray($kongzhiqisss, " ");

string$kongzhiqi_L="";
string$kongzhiqi_R="";
for($i=0;$i<size($kongzhiqiss);$i++) 
{
    string$temp_kongzzhiqi=$kongzhiqiss[$i];
    float$temp_pos[]=`xform -q -ws -t $temp_kongzzhiqi`;
    if($temp_pos[0]>0.000001){$kongzhiqi_L=$temp_kongzzhiqi;}
    if($temp_pos[0]<-0.000001){$kongzhiqi_R=$temp_kongzzhiqi;}
    if($temp_pos[0]==0){error "控制器在世界坐标零的位置";}
}
string$kongzhi="";

if($duicheng==0){$kongzhi=$kongzhiqi_L;}else{$kongzhi=$kongzhiqi_R;}



string$kongzhiqi_AL="";
string$kongzhiqi_AR="";
for($i=0;$i<size($kongzhiqi_AS);$i++) 
{
    string$temp_kongzzhiqi=$kongzhiqi_AS[$i];
    float$temp_pos[]=`xform -q -wd  -t ($kongzhiqi_AS[$i]+".cv[0]")`;
    if($temp_pos[0]>0.000001){$kongzhiqi_AL=$temp_kongzzhiqi;}
    if($temp_pos[0]<-0.000001){$kongzhiqi_AR=$temp_kongzzhiqi;}
    if($temp_pos[0]==0){error "控制器在世界坐标零的位置";}
}
string$kongzhiA="";

if($duicheng==0){$kongzhiA=$kongzhiqi_AL;}else{$kongzhiA=$kongzhiqi_AR;}



string$kongzhiqi_ABL="";
string$kongzhiqi_ABR="";
for($i=0;$i<size($kongzhiqi_ABSS);$i++) 
{
    string$temp_kongzzhiqi=$kongzhiqi_ABSS[$i];
    float$temp_pos[]=`xform -q -wd  -t ($kongzhiqi_AS[$i]+".cv[0]")`;
    if($temp_pos[0]>0.000001){$kongzhiqi_ABL=$temp_kongzzhiqi;}
    if($temp_pos[0]<-0.000001){$kongzhiqi_ABR=$temp_kongzzhiqi;}
    if($temp_pos[0]==0){error "控制器在世界坐标零的位置";}
}
string$kongzhiAB="";

if($duicheng==0){$kongzhiAB=$kongzhiqi_ABL;}else{$kongzhiAB=$kongzhiqi_ABR;}

string$mode_S[];//模型
clear $mode_S;
if($duicheng==0){$mode_S=$MOdeL;}else{$mode_S=$MOdeR;}

/* print $mode_S;help xform
int $ex=`objExists ($irsConA+".irsBig")`;
if($ex==0)
  {
	select -r $irsConA;
	for($i=0;$i<size($animAttrs);$i++)
	{	
		float $dv=0.2;
		if($i%2==0) $dv=1.8;
		addAttr -ln $animAttrs[$i] -at double  -min 0 -dv $dv -k 1;
		setAttr -keyable false -channelBox true ($irsConA+"."+$animAttrs[$i]);
	}
	*/


for($i=0;$i<size($yushes);$i++) 
   {
        string$mingzi=$yushes[$i];
        int $ex=`objExists ($kongzhi+"."+$mingzi)`;
        if($ex==0)
           {
               select -r $kongzhi;
          
            addAttr -ln $mingzi  -at double  -min 0 -max 1 -dv 0 -k 1;
           }
   }
   


string$grp_root=$kongzhiA+"_bs_grp_root";
int$ex=`objExists$grp_root`;    ///判断
if($ex==0){ group -em -n $grp_root ;}
for($i=0;$i<size($mode_S);$i++) 
    {
        
        
 
     // string$temp_mode="head_mesh";
    string$temp_mode=$mode_S[$i];
    string$grp=$temp_mode+"_bs_grp";
    int$ex=`objExists $grp`;    ///判断
    if($ex==0){ group -em -n $grp; };
    parent $grp  $grp_root;
    
    string$bs="";
    string $mode_shape[]=`listRelatives -s $temp_mode `; 
    string $mode_shap=$mode_shape[0];
    string $temp_shuxing[]=`listConnections -d 0 -s 1 ( $mode_shap+".inMesh")`;//列出链接属性  -d输入   -s输出  -p 列出属性
    string$type=`nodeType $temp_shuxing[0]`;
    if($type=="skinCluster")
      {
          string $temp_shuxing_A[]=`listConnections -d 0 -s 1 ( $temp_shuxing[0]+".input[0].inputGeometry")`;//列出链接属性  -d输入   -s输出  -p 列出属性
          $bs=$temp_shuxing_A[0];
      }
    if($type=="blendShape"){$bs=$temp_shuxing[0];}
    
    
    for($j=0;$j<size($yushes);$j++) 
        {
            
        string$temp_shuxinga=$yushes[$j];
        string$bs_mode=$temp_mode+$temp_shuxinga;
        setAttr ($kongzhiA+"."+$temp_shuxinga) 1;
        select -r   $temp_mode;
        duplicate -rr -n  $bs_mode;
        parent  $bs_mode $grp;
        setAttr ($kongzhiA+"."+$temp_shuxinga) 0;
        string $listOfShapesInNode[] =`listAttr -k -m $bs`;
        string$bsss[];
        clear$bsss;
        for($jj=0;$jj<size($listOfShapesInNode);$jj++)
            {
            string$mmmm=$listOfShapesInNode[$jj];
             int$ex=`objExists $mmmm`; 
             if($ex==1)
                {
                    
                int$size=size($bsss);
                $bsss[$size]=$mmmm;
                 } 
            
            }
            int$idex=size($bsss);
        select -r   $bs_mode;
        select -add $temp_mode;
        blendShape -e  -t $temp_mode $idex $bs_mode 1 $bs;

        setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd  ($kongzhi+"."+$temp_shuxinga)  ($bs+"."+$bs_mode);  
        setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd   ($kongzhi+"."+$temp_shuxinga)  ($bs+"."+$bs_mode);  

         }
         
         
       for($w=0;$w<size($yushes_A);$w++)
          {
          float$temp_zhi=$shushuSSS[$w];
          string$temp_ming=$yushes_A[$w];
          string$bs_mode=$temp_mode+$temp_ming;
          int $ex=`objExists ($kongzhi+"."+$temp_ming)`;
          if($ex==0)
           {
               select -r $kongzhi;
           
            addAttr -ln $temp_ming -at double  -min 0 -max 1 -dv 0 -k 1;
           }

          if($w==0){setAttr -type float3 ($kongzhiA+".scale") $temp_zhi $temp_zhi $temp_zhi;}
          if($w==1){setAttr -type float3 ($kongzhiA+".scale") $temp_zhi $temp_zhi $temp_zhi;}
          if($w==2){setAttr ($kongzhiA+".scaleX") $temp_zhi;}
          if($w==3){setAttr ($kongzhiA+".scaleX") $temp_zhi;}
          if($w==4){setAttr ($kongzhiA+".scaleY") $temp_zhi;}
          if($w==5){setAttr ($kongzhiA+".scaleY") $temp_zhi;}
          select -r   $temp_mode;
          duplicate -rr -n  $bs_mode;
          parent  $bs_mode $grp;
          string $listOfShapesInNode[] =`listAttr -k -m $bs`;
          string$bsss[];
          clear$bsss;
          for($jj=0;$jj<size($listOfShapesInNode);$jj++)
            {
            string$mmmm=$listOfShapesInNode[$jj];
             int$ex=`objExists $mmmm`; 
             if($ex==1)
                {
                    
                int$size=size($bsss);
                $bsss[$size]=$mmmm;
                 } 
            
            }
        int$idex=size($bsss);
        select -r   $bs_mode;
        select -add $temp_mode;
        blendShape -e  -t $temp_mode $idex $bs_mode 1 $bs;
        setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd  ($kongzhi+"."+$temp_ming)  ($bs+"."+$bs_mode);  
        setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd   ($kongzhi+"."+$temp_ming)  ($bs+"."+$bs_mode); 
        setAttr -type float3 ($kongzhiA+".scale") 1 1 1;     
          }
         
         
         
         
         
         
           
       for($w=0;$w<size($yushes_A);$w++)
          {
          float$temp_zhi=$shushuSSS[$w];
          string$temp_ming=$yushes_A[$w]+"_nie";
          string$bs_mode=$temp_mode+$temp_ming;
          int $ex=`objExists ($kongzhi+"."+$temp_ming)`;
          if($ex==0)
           {
               select -r $kongzhi;
           
            addAttr -ln $temp_ming -at double  -min 0 -max 1 -dv 0 -k 1;
           }

          if($w==0){setAttr -type float3 ($kongzhiAB+".scale") $temp_zhi $temp_zhi $temp_zhi;}
          if($w==1){setAttr -type float3 ($kongzhiAB+".scale") $temp_zhi $temp_zhi $temp_zhi;}
          if($w==2){setAttr ($kongzhiAB+".scaleX") $temp_zhi;}
          if($w==3){setAttr ($kongzhiAB+".scaleX") $temp_zhi;}
          if($w==4){setAttr ($kongzhiAB+".scaleY") $temp_zhi;}
          if($w==5){setAttr ($kongzhiAB+".scaleY") $temp_zhi;}
          select -r   $temp_mode;
          duplicate -rr -n  $bs_mode;
          parent  $bs_mode $grp;
          string $listOfShapesInNode[] =`listAttr -k -m $bs`;
          string$bsss[];
          clear$bsss;
          for($jj=0;$jj<size($listOfShapesInNode);$jj++)
            {
            string$mmmm=$listOfShapesInNode[$jj];
             int$ex=`objExists $mmmm`; 
             if($ex==1)
                {
                    
                int$size=size($bsss);
                $bsss[$size]=$mmmm;
                 } 
            
            }
        int$idex=size($bsss);
        select -r   $bs_mode;
        select -add $temp_mode;
        blendShape -e  -t $temp_mode $idex $bs_mode 1 $bs;
        setDrivenKeyframe -itt "linear" -ott "spline" -v 0 -dv 0 -cd  ($kongzhi+"."+$temp_ming)  ($bs+"."+$bs_mode);  
        setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 1 -cd   ($kongzhi+"."+$temp_ming)  ($bs+"."+$bs_mode); 
        setAttr -type float3 ($kongzhiAB+".scale") 1 1 1;     
          }
         
    }



}



//checkBox -l    "对称" -v 0 zxb_shengchengyouyanqiu_qvxian;



/////////////////////提取上下曲线//////////////////////////////////

global proc zxb_qvxianchuangjian_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "创建曲线" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------智能创建上下曲线--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 100 130 -l "载入循环边" -tx " " -ed 0  zxb_zairumian;
string$mian="zxb_zairumian";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$mian+"\")") ;
textFieldGrp  -cw2 100 130 -l "曲线前缀" -tx "dingweiqvxian_"   zxb_mingzi;
string$kongzhiqi="zxb_mingzi";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$kongzhiqi+"\")") ;

checkBox -l "默认左边（切换生成必选）" -value 1 duicheng;

setParent ..; 
button -l "创建上下曲线" -c "zxb_qvxianupdw_proc";








showWindow  ;
}





global proc zxb_qvxianupdw_proc()

{
     string $mnianss=`textFieldGrp -q -tx  zxb_zairumian`;
     string $mnians[]= stringToStringArray($mnianss, " ");//字符串转化数组
     string $qvxianss=`textFieldGrp -q -tx  zxb_mingzi`;
     
     string$qvxians[];
     clear $qvxians;
     int $nemt=`tokenize $qvxianss " " $qvxians`;//分离字符串存到变量
     string$qvxian=$qvxians[0];
     int$duicheng_bn=`checkBox -q  -value   duicheng`;




     select -r $mnians;
     PolySelectConvert 3;
     string$vtxs[]=`ls -sl -fl `;
     float$dd=-100000000000000;
     float$xx=1000000000000000;
     string$dian_L="";
     string$dian_R="";
     for ($i=0;$i<size($vtxs);$i++)
          {
           string$vtx=$vtxs[$i];
           float$bn_pos[]=`xform -q -ws -t $vtx`;
           if($bn_pos[0]>$dd)
             {
             $dd=$bn_pos[0];
             $dian_L=$vtx;
             }
             if($bn_pos[0]<$xx)
             {
             $xx=$bn_pos[0];
             $dian_R=$vtx;
             }
             
           }
           
           
           
       select -r   $dian_L $dian_R;  
       
       
        string$LR[]=`ls -sl -fl `;
        
        //string$aaa[];
       // clear$aaa;
        string$upS[];
        clear $upS;
        string$dwS[];
        clear $dwS;
        for ($i=0;$i<size($LR);$i++)
            {
             string$aaa[];
             clear$aaa;
             string$vtx=$LR[$i];
             select -r $vtx;
             PolySelectConvert 2;
             PolySelectConvert 3;
              string$temp_dian[]=`ls -sl -fl `;
              for ($ii=0;$ii<size($vtxs);$ii++)
                   {
                   string$Dian=$vtxs[$ii];
                   for ($j=0;$j<size($temp_dian);$j++)
                       {
                        string$temp=$temp_dian[$j];
                        if($Dian==$temp)
                           {
                            int$size=size($aaa);
                            $aaa[$size]=$Dian;
                            }
                        }
                   }
                   
            select -r $aaa; 
            select -d   $vtx;   
            string$temp_dianA[]=`ls -sl -fl `;
            for ($aa=0;$aa<size($temp_dianA);$aa++)  
                {
                string$tempe_yy=$temp_dianA[$aa];
                float$dian_pos_A[]=`xform -q -ws -t $vtx`;
                float$dian_pos_B[]=`xform -q -ws -t $tempe_yy`;
                if($dian_pos_A[1]<$dian_pos_B[1])
                   {
                    int$size=size($upS);
                    $upS[$size]=$tempe_yy;
                    }
                
                 if($dian_pos_A[1]>$dian_pos_B[1])
                   {
                    int$size=size($dwS);
                    $dwS[$size]=$tempe_yy;
                    }
                
                
                }   
             
           

             }
      string$RRRRRRLLLL="L";      
     if($duicheng_bn==0){$RRRRRRLLLL="R";}  
    string$qvxian_up=$qvxian+"UP_"+$RRRRRRLLLL  ;
    string$qvxian_dw=$qvxian+"DW_"+ $RRRRRRLLLL ;
    select -r $upS ;
    polySelectSp -loop;
    select -add $LR ;
    
    
      
    string$all_dian[]=`ls -sl -fl `;
    string$paichu[];
    clear $paichu;
    for ($bb=0;$bb<size($vtxs);$bb++)
        {
            string$ming=$vtxs[$bb];
            for ($ee=0;$ee<size($all_dian);$ee++)
                {
                    string$ming_a=$all_dian[$ee];
                   if($ming==$ming_a)
                      {
                       int$size=size($paichu);
                       $paichu[$size]=$ming;
                       }
                }
            
        }
    select -r $paichu;
    
    
    PolySelectConvert 20;
    polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_up;
    select -r$dwS ;
    polySelectSp -loop;
    select -add $LR ;
    
    string$all_diana[]=`ls -sl -fl `;
    string$paichua[];
    clear $paichua;
    for ($bb=0;$bb<size($vtxs);$bb++)
        {
            string$ming=$vtxs[$bb];
            for ($ee=0;$ee<size($all_diana);$ee++)
                {
                    string$ming_a=$all_diana[$ee];
                   if($ming==$ming_a)
                      {
                       int$size=size($paichua);
                       $paichua[$size]=$ming;
                       }
                }
            
        }
    select -r $paichua;
    
    
    PolySelectConvert 20;
    polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $qvxian_dw;



select -r $qvxian_up  $qvxian_dw;

 

 
}




///////////////////检查模型工具////////////////////////
global proc zxb_jianchamode_xuanzhuanweiyisuofang_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "检查模型位移旋转缩放及其轴心点工具" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------检查工具--------------" -h 50  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 150 200 -l "Character（模型最外层组）" -tx " " -ed 0  zxb_mode;
string$mode="zxb_mode";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;


setParent ..; 
button -l "检查" -c "jianchamode_fangfa";
rowColumnLayout -nc 2 -cw 1 100 -cw 2 300;


checkBox -l "删除模型历史" -value 1 shanchu;
textFieldGrp  -cw2 50 200 -l "面部模型" -tx " " -ed 0  zxb_xingjiedian;
string$zxb_xingjiedian="zxb_xingjiedian";
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+$zxb_xingjiedian+"\")") ;

setParent ..; 
button -l "检查" -c "zxb_jianchaxingjiedian_fangfa";



showWindow  ;
}

 
  global proc jianchamode_fangfa()
  {
  //string$modes[]=`ls -sl`;
  string $modes=`textFieldGrp -q -tx zxb_mode `;
  string $andbn[]=`listRelatives -c -ad -pa $modes`; 
  select -r $andbn;
  string$modess[]=`ls -sl  -type "transform"`;
 int$t=size($modess);
 $modess[37]=$modes;
  select -r $modess;
  for ($y=0;$y<size($modess);$y++)
      {
       string$temp=$modess[$y];
       float$a[]=`getAttr ($temp+".translate") `;
       float$b[]=`getAttr ($temp+".rotate") `;
       float$c[]=`getAttr ($temp+".scale") `;
       
       
       float$weiyixuanzhun=$a[0]+$a[1]+$a[2]+$b[0]+$b[1]+$b[2];
       if($weiyixuanzhun>0)
         {
          select -r  $temp;
          makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
         }
         float$suofang=$c[0]+$c[1]+$c[2];
         if($suofang!=3)
            { 
            select -r  $temp;
            makeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;
            }
        string$temp_loc="temp_loc";  
       spaceLocator -p 0 0 0 -n $temp_loc ;
       delete`parentConstraint $temp $temp_loc`;
       float $temp_pos[]=`xform -q -wd -t $temp_loc`;
       float$qq= $temp_pos[0]+$temp_pos[1] +$temp_pos[2];
       if($qq>0)
         {
          select -r  $temp;
          ResetTransformations;
          }
      select -r  $temp;
      DeleteHistory;
      delete $temp_loc;
      
      
      
      }
      print "检查完毕 所有坐标全部冻结  模型清除历史";
//help xform
}


///////////////////////////////////////////////////////排除引擎多余骨骼
global proc zxb_youxiyingqing_gujia_proc(){
string $din[]=`ls -sl `;
string $andbn[]=`listRelatives -c -ad $din[0]`; 
select -r $andbn ;
string $gu[]=`ls -sl -type "joint" `;
select -r $gu ;
for ($y=0;$y<size($gu);$y++)
{
    if($gu[$y]=="ik_foot_root"||$gu[$y]=="ik_foot_l"||$gu[$y]=="ik_foot_r"||$gu[$y]=="ik_hand_root"||$gu[$y]=="ik_hand_gun"||$gu[$y]=="ik_hand_l"||$gu[$y]=="ik_hand_r")
    {
        select -d $gu[$y] ;
     
     }
}
}
///////////////////////////////////////////////////////清除前缀
global proc xb_qingchuqianzui_pasted_proc(){
string $din[]=`ls -sl `;
string $a;
for ($y=0;$y<size($din);$y++)
{
    $a=startString($din[$y], 9);//找要查找的到前缀
    string $b=endString($a, 1);//截取药修改的名字
    $c=startString($din[$y], 8);//找到前缀原始名字
    select -r $din[$y];//选中要修改的对象
    if($c=="pasted__")//判断是否有前缀
    {
            searchReplaceNames $a $b "selected";//查找 替换
    }else{
    print "文件名字无前缀或者前缀名字不是pasted__";
    };


     
    
}
}



/////////////////////////////////////////////////////ADV FK关节隐藏
global proc zxb_ADV_FK_yingcang_proc()
{
string $bianliang[]=`ls -sl -type "joint"`;//选中骨骼
for ($y=0;$y<size($bianliang);$y++)
{
   string $bn= $bianliang[$y];
   setAttr ($bn+".drawStyle") 2;
   setAttr -l true { ($bn+".ds") };
}
}




////////////////////////////////////////////选点拷贝权重
global proc xb_xuandiankaobei()
{if(`window -ex xb_xuandiankaobeichuangkou`)
deleteUI xb_xuandiankaobeichuangkou;
window -t "拷贝权重" xb_xuandiankaobeichuangkou;
rowColumnLayout -nc 2 -cw 1 100-cw 2 300  ;
textField -tx " " xb_kaobeidingdian;
button -l "载入顶点" -c ("xb_zairudingdian");
textField -tx " " xb_kaobeimoxing;
button -l "载入模型" -c ("xb_zairudingmoxing");
text -l " " ;
button -l "拷贝权重" -c ("xb_kaobeidingdianmoxing");
showWindow xb_xuandiankaobeichuangkou;
}


global proc xb_zairudingdian()
{
string $din[]=`ls -sl -fl `;//保存顶点权重
string $nn=stringArrayToString($din, " ");
string $aa=`textField -e -tx $nn xb_kaobeidingdian`;
//print($nn);
}
global proc xb_zairudingmoxing()
{
string $dinb[]=`ls -sl `;
string $aa=`textField -e -tx $dinb xb_kaobeimoxing`;
}


global proc xb_kaobeidingdianmoxing( )
{ string $xb_kaobeimoxing="xb_kaobeimoxing";
string $xb_kaobeidingdian="xb_kaobeidingdian";
string $xb_moxing =`textField -q -tx $xb_kaobeimoxing`;
string $xb_dingdian =`textField -q -tx $xb_kaobeidingdian`;
string $array[];
$array = stringToStringArray($xb_dingdian," ");
select -r $xb_moxing ;
select -add $array ;
CopySkinWeights;


}
////////////////////////////////////////////////////自动刷权重





//////////////////自动刷权重////////////////////////


global proc xiao_zidongshuaquanzhong()
{
if(`window -ex xiao_zidongshuaquanzhongmianban`)
deleteUI xiao_zidongshuaquanzhongmianban;
window -t "刷权重" xiao_zidongshuaquanzhongmianban;


rowColumnLayout -nc 2 -cw 1 300 -cw 2 300 ;


showWindow  xiao_zidongshuaquanzhongmianban;  




textFieldGrp -l  "模型"  -text "名称"    mode;
button -l "载入模型" -c ("xiao_zairu");


textFieldGrp -l  "次数"  -text "4"    wuti;
button -l "自动刷权重" -c ("xiao_zairucishu");






}




/////////////
global proc xiao_zairu()
{
string $mode[]=`ls -sl`;


textFieldGrp -e -text  $mode[0] mode;


}




global proc xiao_zairucishu()
{
string $bianliang=`textFieldGrp -q -tx  wuti`;






string $mode[]=`ls -sl`;
string $skinClus[]=`listHistory $mode[0]`;//列出
string $skinCluster="";//保存一个变量
for ($y=0;$y<size($skinClus);$y++){
		if (`objectType $skinClus[$y]`=="skinCluster")//如果这个变量是蒙皮类
			{
			$skinCluster=$skinClus[$y];//保存变量
			}	
			//print $skinCluster;
        int $ex=`objExists ($skinCluster+".matrix")`;//查询这个变量是否存在
        if($ex==1)
     {
        string $bn[]=`listConnections -s 1 -d 0 ($skinCluster+".matrix")`;//列出连接matrix的物体
        select -r ($bn);//选中关节
        // print "已经成功选择选择物体的蒙皮关节";
      }else
           {
            print "当前选择的物体没有骨骼蒙皮变形历史，请确认选择正确的物体";
           }
     }
     
 string $mengpiBN[]=`ls -sl`;
 select -r $mode ;
artAttrSkinToolScript 3;


int $aa=$bianliang;
//print $aa;//
for ($i=0;$i<size($mengpiBN);$i++)
{


setSmoothSkinInfluence $mengpiBN[$i];artSkinRevealSelected artAttrSkinPaintCtx;//选中要平滑的关节
artAttrPaintOperation artAttrSkinPaintCtx Smooth;//设置平滑模式
for ($j=0;$j<$aa;$j++)
{
artAttrSkinPaintCtx -e -clear `currentCtx`;
}
}


}

global proc zxb_jisuanlianbu_ciji_proc(){


if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "嘴巴计算次级权重" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;
text -l "--------------嘴巴计算次级权重--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;




checkBox -l "生成曲线或者重命名" -v 0 zxb_jingxiang_qvxian;
button -l "生成曲线" -c "zxb_zuiba_jisuanquanzhong_chuangjianqvxian" ; 
textFieldGrp  -cw2 100 130 -l "载入被计算的骨骼" -tx "载入被计算的骨骼" -ed 0  zxb_jisuanlianbu_ciji_guge_A;
button -l "载入被计算的骨骼" -c "zxb_jisuanlianbu_ciji_proc_zairuguge" ;


textFieldGrp  -cw2 100 130 -l "载入所有次级骨骼" -tx "载入所有次级骨骼" -ed 0  zxb_jisuanlianbu_ciji_guge_B;
button -l "载入所有次级骨骼" -c "zxb_jisuanlianbu_ciji_proc_zairuguge_A" ;


textFieldGrp  -cw2 100 130 -l "载入最大权重骨骼" -tx "载入最大权重骨骼" -ed 0  zxb_jisuanlianbu_ciji_guge_C;
button -l "载入最大权重骨骼" -c "zxb_jisuanlianbu_ciji_proc_zairuguge_B" ;
text " ";

checkBox -l "镜像整体权重" -v 0 zxb_jingxiang;

setParent ..; 







button -l "计算权重（选中线条）" -c "zxb_zuiba_jisuanquanzhong";

text "   ";
text "   ";
text "   ";


button -l "计算整体权重(选中模型)" -c "zxb_zuiba_jisuanquanzhong_pinghua";




showWindow  ;
}





//////////////////////////////////编辑簇权重工具//////////////////////////////////////////////////////
global proc gtClusterDeformToolEditWin(){


if(`window -ex gtClusterDeformToolEditWin`) deleteUI -window gtClusterDeformToolEditWin;
window -wh 420 200 -t "编辑簇变形工具" gtClusterDeformToolEditWin;
scrollLayout gtmainBSL;


columnLayout -adj 1 -w 380 gtBSColumlayout;
separator -style single  sep1;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


textFieldGrp  -cw2 100 130 -l "变形模型" -tx "请载入变形模型" -ed 0 gtTextBSLCluster3b;
button -l "载入变形模型" -c "gtBSLoadClusterMeshb" gtButBSC3;


setParent..;
floatSliderGrp -l "影响半径" -v 0.5 -s 0.001 -f 1 gtClusterRadius;


rowColumnLayout -nc 4 -cw 1 100  -cw 2 140 -cw 3 140;
text -l "";
checkBox -l "嘴巴模式" gtClusterMouth;
button -l "编辑簇权重" -c "gtClusterToolEditProcLCA;" but3ab;


setParent..;
separator -style single  sep2;


showWindow  gtClusterDeformToolEditWin;
}


//////////////////////////////
global proc gtBSLoadClusterMeshb(){
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++){
    $obj+=(" "+$sel[$i]);
}
textFieldGrp -e -tx ($obj) gtTextBSLCluster3b;
}
//////////////////////////////////
global proc gtClusterToolEditProcLCA (){
    
string $sel[]=`ls -sl`;
string $mesh=`textFieldGrp -q -tx gtTextBSLCluster3b`;


int $mouth=`checkBox -q -v gtClusterMouth`;
float $dismt=`floatSliderGrp -q -v gtClusterRadius`;
float $mind=$dismt*0.2;


for($ii=0;$ii<size($sel);$ii++){    
string $clustA=$sel[$ii];
int $vexAll[]=`polyEvaluate -v $mesh`;


string $clusA[]=`listConnections -s 0 -d 1 ($clustA+".worldMatrix[0]")`;
string $cluster=$clusA[0];
$tempStringA=`listConnections ($clusA[0]+".message")`;


    string$cluster_temp="";
   
   for ($j=0;$j<size($tempStringA);$j++)
         {
          string$type=`nodeType $tempStringA[$j]`;
          if($type=="objectSet")
             {
                 $cluster_temp=$tempStringA[$j];
             }
         }
//print $cluster;
string $clusterSet=$cluster_temp;
select `sets -q ($clusterSet)`;
$dvtxs=`ls -sl -fl`;
	string $geometry=$mesh;
		
	int $ex=`objExists 	closestSampler`;
	if($ex==1)delete closestSampler;
	
createNode -n closestSampler closestPointOnMesh;
$tempString=`listRelatives -ni -s $geometry`;
connectAttr -f ($tempString[0]+".outMesh") closestSampler.inMesh;
connectAttr -f ($geometry+".worldMatrix[0]") closestSampler.inputMatrix;


spaceLocator -p 0 0 0 -n ($clustA+"loc");
select -r ($clustA);
select -add  ($clustA+"loc");
delete `pointConstraint`;
float $posAA[]=`xform -q -ws -t ($clustA+"loc")`;
delete ($clustA+"loc");
int $closestOppositeVtxNr;


float $mag;
select -r ($mesh+".vtx[0:999999]");


if($mouth==0){
string $vtxs[]=`ls -sl -fl`;	
select -cl;
	for($cc=0;$cc<size($vtxs);$cc++){
	    float $posB[]=`xform -q -ws -t $vtxs[$cc]`;
	 $mag=mag (<<($posAA[0]-$posB[0]),($posAA[1]-$posB[1]),($posAA[2]-$posB[2])>>);
        if($mag<($dismt+$dismt*0.1)) select -add $vtxs[$cc];
	}


	string $vex[]=`ls -sl -fl`;
		if(size($vex)>0)
		sets -add ($clusterSet) `ls -sl`;
		
}else{
    	string $vex[]=`ls -sl -fl`;
		if(size($vex)>0)
		sets -add ($clusterSet) `ls -sl`;
        
//select -r $vtxs;


	setAttr -type float3 closestSampler.inPosition ($posAA[0]) $posAA[1] $posAA[2];
	$closestOppositeVtxNr=`getAttr closestSampler.result.closestVertexIndex`;
float $posA[]=`xform -q -ws -t ($geometry+".vtx["+$closestOppositeVtxNr+"]")`;
	
select -r ($geometry+".vtx["+$closestOppositeVtxNr+"]");
GrowPolygonSelectionRegion;
select -d ($geometry+".vtx["+$closestOppositeVtxNr+"]");


string $tempVext[]=`ls -sl -fl`;	


float $tempDis=0;
float $tempDisA=100;
for($cc=0;$cc<size($tempVext);$cc++){
	    float $posB[]=`xform -q -ws -t $tempVext[$cc]`;
	 $mag=mag (<<($posA[0]-$posB[0]),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>);
        if($mag>$tempDis){$tempDis=$mag;select -r  $tempVext[$cc];}
        if($mag<$tempDisA){$tempDisA=$mag;}
	}	
    //print ($tempDis);
    //print ($tempDisA);
    
string $tempVex[]=`ls -sl -fl`;	
select -r ($tempVex[0]);
float $posA[]=`xform -q -ws -t ($tempVex[0])`;
	
GrowPolygonSelectionRegion;
select -d ($tempVex[0]);


string $tempVext[]=`ls -sl -fl`;		
float $tempDis1=0;
float $tempDisA1=100;
for($cc=0;$cc<size($tempVext);$cc++){
	    float $posB[]=`xform -q -ws -t $tempVext[$cc]`;
	 $mag=mag (<<($posA[0]-$posB[0]),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>);
        if($mag>$tempDis1){$tempDis1=$mag;select -r  $tempVext[$cc];}
        if($mag<$tempDisA1){$tempDisA1=$mag;}
	}	
	//print ($tempDis1);
    //print ($tempDisA1);
    
string $tempVex[]=`ls -sl -fl`;	
select -r ($tempVex[0]);
float $posA[]=`xform -q -ws -t ($tempVex[0])`;
	
GrowPolygonSelectionRegion;
select -d ($tempVex[0]);


string $tempVext[]=`ls -sl -fl`;		
float $tempDis2=0;
float $tempDisA2=100;
for($cc=0;$cc<size($tempVext);$cc++){
	    float $posB[]=`xform -q -ws -t $tempVext[$cc]`;
	 $mag=mag (<<($posA[0]-$posB[0]),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>);
        if($mag>$tempDis2){$tempDis2=$mag;}
        if($mag<$tempDisA2){$tempDisA2=$mag;select -r  $tempVext[$cc];}
	}	
	//print ($tempDis2);
    //print ($tempDisA2);
    string $tempVex[]=`ls -sl -fl`;	
select -r ($tempVex[0]);
float $posA[]=`xform -q -ws -t ($tempVex[0])`;
	
GrowPolygonSelectionRegion;
select -d ($tempVex[0]);


string $tempVext[]=`ls -sl -fl`;		
float $tempDis3=0;
float $tempDisA3=100;
for($cc=0;$cc<size($tempVext);$cc++){
	    float $posB[]=`xform -q -ws -t $tempVext[$cc]`;
	 $mag=mag (<<($posA[0]-$posB[0]),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>);
        if($mag>$tempDis3){$tempDis3=$mag;select -r  $tempVext[$cc];}
        if($mag<$tempDisA3){$tempDisA3=$mag;}
	}	
    
int $loop=0;
    $loop=($dismt+$dismt*0.1)/(($tempDis+$tempDisA+$tempDis1+$tempDisA1+$tempDis2+$tempDisA2+$tempDis3+$tempDisA3)/8.0)+1;
select -r ($geometry+".vtx["+$closestOppositeVtxNr+"]");
	for($cc=0;$cc<$loop;$cc++){
GrowPolygonSelectionRegion;
    }
    
}
    delete closestSampler;


$cVext=`ls -sl -fl`;


global string $gMainProgressBar;
//print ($posAA);
progressBar -e -st ("编辑簇权重："+$sel[$ii]) -bp -ii 1 -min 0 -max `size($cVext)` $gMainProgressBar;
for ($i=0;$i<size($cVext);$i++)
	{
	if (`progressBar -q -ic $gMainProgressBar`)
		break;
	progressBar -e -s 1 $gMainProgressBar;
    float $posB[]=`xform -q -ws -t $cVext[$i]`;
	$mag=mag (<<($posAA[0]-$posB[0]),($posAA[1]-$posB[1]),($posAA[2]-$posB[2])>>);


	float $weightV=1-(smoothstep($mind,$dismt,$mag));	
	$tempFloat[0]=$weightV;
		
	percent -v $tempFloat[0] $cluster $cVext[$i];
	}
	progressBar -e -ep $gMainProgressBar;


select -r ($mesh+".vtx[0:999999]");
select -d $cVext;
$cVext=`ls -sl -fl`;
if(size($cVext))
sets -rm ($clusterSet) $cVext;
    }
select -r ($sel);
}














//////////////////////簇权重绘制工具/////////////////
global proc gtClusterWeightPaintWin(){


if(`window -ex gtClusterWeightPaintWin`) deleteUI -window gtClusterWeightPaintWin;
window -wh 420 200 -t "簇权重绘制工具" gtClusterWeightPaintWin;
scrollLayout gtmainBSL;


columnLayout -adj 1 -w 380 gtBSColumlayout;
separator -style single  sep1;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


textFieldGrp  -cw2 100 130 -l "变形模型" -tx "请载入变形模型" -ed 0 gtTextBSLCluster3;
button -l "载入变形模型" -c "gtBSLoadClusterMesh" gtButBSC3;


setParent..;
separator -style single  sep3;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;
text -l "选择变形簇";


button -l "绘制簇变形权重" -c "gtClusterWeightPaintProc;" but3ab;


setParent..;
separator -style single  sep2;


showWindow  gtClusterWeightPaintWin;
}
///////////////////////
global proc gtBSLoadClusterMesh(){
string $sel[]=`ls -sl`;
int $size=size($sel);
if($size>1) error "只能选择一个模型";
textFieldGrp -e -tx ($sel[0]) gtTextBSLCluster3;
}
////////////////////
global proc gtClusterWeightPaintProc (){
    string $sel[]=`ls -sl`;
    string $mesh=`textFieldGrp -q -text  gtTextBSLCluster3`;
    
    string $clusA[]=`listConnections -s 0 -d 1 ($sel[0]+".worldMatrix[0]")`;   
    select -cl;
    string  $clusterSets[]=`listConnections ($clusA[0]+".message")`;


    string$cluster_temp="";
   
   for ($j=0;$j<size( $clusterSets);$j++)
         {
          string$type=`nodeType  $clusterSets[$j]`;
          if($type=="objectSet")
             {
                 $cluster_temp= $clusterSets[$j];
             }
         }


    string $currentMembers[]=`sets -q $cluster_temp`;


		select ($mesh+".vtx[0:999999]");
		select -d $currentMembers;
		string $vex[]=`ls -sl`;
		if(size($vex)>0){
		sets -add ($cluster_temp) `ls -sl`;
		percent -v 0 $clusA[0] `ls -sl`;
		}
    artAttrToolScript 4 "cluster";
eval ("artSetToolAndSelectAttr( \"artAttrCtx\", \"cluster."+$clusA[0]+".weights\")");
select $mesh;
evalEcho ("artSetToolAndSelectAttr( \"artAttrCtx\", \"cluster."+$clusA[0]+".weights\")");
}












///////////////////////////////////簇变形权重镜像绑定工具/////////////////////////////////////////////////////
global proc gtClusterDeformToolMirrorWin(){


if(`window -ex gtClusterDeformToolMirrorWin`) deleteUI -window gtClusterDeformToolMirrorWin;
window -wh 420 200 -t "簇变形权重镜像绑定工具" gtClusterDeformToolMirrorWin;
scrollLayout gtmainBSL;


columnLayout -adj 1 -w 380 gtBSColumlayout;
separator -style single  sep1;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


textFieldGrp  -cw2 100 130 -l "变形模型" -tx "请载入变形模型" -ed 0 gtTextBSLCluster3a;
button -l "载入变形模型" -c "gtBSLoadClusterMesha" gtButBSC3;


setParent..;


rowColumnLayout -nc 3 -cw 1 60  -cw 2 180 -cw 3 140;
text -l "";
checkBox -l "轴向：- X  到 + X" -v 0 gtClusterMirror;
button -l "镜像簇权重" -c "gtClusterWeightMirrorMiddleLCA;" but3bb;


setParent..;
separator -style single  sep2;


showWindow  gtClusterDeformToolMirrorWin;
}
//////////////////////////////
global proc gtBSLoadClusterMesha(){
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++){
    $obj+=(" "+$sel[$i]);
}
textFieldGrp -e -tx ($obj) gtTextBSLCluster3a;
}


///////////////////////////////////////////
global proc gtClusterWeightMirrorMiddleLCA(){
string $sel[]=`ls -sl`;
string $mesh=`textFieldGrp -q -text  gtTextBSLCluster3a`;
    int $state=`checkBox -q -v gtClusterMirror`;


for($ii=0;$ii<size($sel);$ii++){
    
string $clustA=$sel[$ii];
float $maxDist,$mag;


int $vexAll[]=`polyEvaluate -v $mesh`;


string $clusA[]=`listConnections -s 0 -d 1 ($clustA+".worldMatrix[0]")`;
string $cluster=$clusA[0];
$tempStringA=`listConnections ($clusA[0]+".message")`;






    string$cluster_temp="";
   
   for ($j=0;$j<size( $tempStringA);$j++)
         {
          string$type=`nodeType  $tempStringA[$j]`;
          if($type=="objectSet")
             {
                 $cluster_temp= $tempStringA[$j];
             }
         }


string $clusterSet=$cluster_temp;
select `sets -q ($cluster_temp)`;
$dvtxs=`ls -sl -fl`;


select -r ($mesh+".vtx[0:999999]");
$vtxs=`ls -sl -fl`;


int $vexNum=size($vtxs);
//int $state=1;


	string $geometry=$mesh;


if($state==1){
select -cl;
for ($i=0;$i<size($vtxs);$i++)
	{
	$pos=`xform -q -ws -t $vtxs[$i]`;
	if($pos[0]>0.001)
	   select -add $vtxs[$i];
	}	
}
if($state==0){
select -cl;
for ($i=0;$i<size($vtxs);$i++)
	{
	$pos=`xform -q -ws -t $vtxs[$i]`;
	if($pos[0]<-0.001)
	   select -add $vtxs[$i];
	    }	
	}
string $cVext[]=`ls -sl -fl`;	
		select -d $dvtxs;
		string $vex[]=`ls -sl -fl`;
		if(size($vex)>0){
		sets -add ($clusterSet) `ls -sl`;
		percent -v 0 $clusA[0] `ls -sl`;
		}
				
createNode -n closestSampler closestPointOnMesh;
$tempString=`listRelatives -ni -s $geometry`;
connectAttr -f ($tempString[0]+".outMesh") closestSampler.inMesh;
connectAttr -f ($geometry+".worldMatrix[0]") closestSampler.inputMatrix;
int $closestOppositeVtxNr;
global string $gMainProgressBar;


progressBar -e -st ("镜像簇权重："+$sel[$ii]) -bp -ii 1 -min 0 -max `size($cVext)` $gMainProgressBar;
for ($i=0;$i<size($cVext);$i++)
	{
	if (`progressBar -q -ic $gMainProgressBar`)
		break;
	progressBar -e -s 1 $gMainProgressBar;
	$posB=`xform -q -ws -t $cVext[$i]`;
	setAttr -type float3 closestSampler.inPosition ($posB[0]*-1) $posB[1] $posB[2];
	$closestOppositeVtxNr=`getAttr closestSampler.result.closestVertexIndex`;
	$tempFloat=`percent -q -v $cluster ($geometry+".vtx["+$closestOppositeVtxNr+"]")`;
	
	if (!`sets -im $clusterSet ($geometry+".vtx["+$closestOppositeVtxNr+"]")`)
		$tempFloat[0]=0;		
	percent -v $tempFloat[0] $cluster $cVext[$i];
	}
progressBar -e -ep $gMainProgressBar;
delete closestSampler;
    }
}
////////////////////////////////////////////










////////////////////MAYA镜像拷贝簇权重绑定工具/////////////////////
global proc gtClusterDeformToolMirrorCopyWin(){


if(`window -ex gtClusterDeformToolMirrorCopyWin`) deleteUI -window gtClusterDeformToolMirrorCopyWin;
window -wh 420 200 -t "镜像拷贝簇权重绑定工具" gtClusterDeformToolMirrorCopyWin;
scrollLayout gtmainBSL;


columnLayout -adj 1 -w 380 gtBSColumlayout;
separator -style single  sep1;


rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;


textFieldGrp  -cw2 100 130 -l "变形模型" -tx "请载入变形模型" -ed 0 gtTextBSLCluster3c;
button -l "载入变形模型" -c "gtBSLoadClusterMeshc" gtButBSC3;


setParent..;


rowColumnLayout -nc 2 -cw 1 240  -cw 2 140;
text -l "选择目标簇，加选被拷贝簇";


button -l "拷贝簇权重" -c "gtClusterWeightEditLCA;" but3aa;
setParent..;
separator -style single  sep2;


showWindow  gtClusterDeformToolMirrorCopyWin;
}
//////////////////////////////
global proc gtBSLoadClusterMeshc(){
string $sel[]=`ls -sl`;
string $obj="";
for($i=0;$i<size($sel);$i++){
    $obj+=(" "+$sel[$i]);
}
textFieldGrp -e -tx ($obj) gtTextBSLCluster3c;
}
///////////////////////////////////////////////
global proc gtClusterWeightEditLCA (){
string $sel[]=`ls -sl`;
string $clustA=$sel[0];
string $clustB=$sel[1];
string $mesh=`textFieldGrp -q -text  gtTextBSLCluster3c`;
float $maxDist,$mag;


int $vexAll[]=`polyEvaluate -v $mesh`;


string $clusA[]=`listConnections -s 0 -d 1 ($clustA+".worldMatrix[0]")`;
string $cluster=$clusA[0];
$tempStringA=`listConnections ($clusA[0]+".message")`;


  string$cluster_temp_A="";
   
   for ($j=0;$j<size($tempStringA);$j++)
         {
          string$type=`nodeType $tempStringA[$j]`;
          if($type=="objectSet")
             {
                 $cluster_temp_A=$tempStringA[$j];
             }
         }






string $clusterSet=$cluster_temp_A;
select `sets -q ($cluster_temp_A)`;
$rightVtxs=`ls -sl -fl`;
int $vexNum=size($rightVtxs);


string $clusB[]=`listConnections -s 0 -d 1 ($clustB+".worldMatrix[0]")`;
$tempStringB=`listConnections ($clusB[0]+".message")`;


  string$cluster_temp="";
   
   for ($j=0;$j<size($tempStringB);$j++)
         {
          string$type=`nodeType $tempStringB[$j]`;
          if($type=="objectSet")
             {
                 $cluster_temp=$tempStringB[$j];
             }
         }




string $oppositeCluster=$clusB[0];
percent -v 0 ($clusB[0]) ($mesh+".vtx[0:"+$vexAll[0]+"]");


spaceLocator -p 0 0 0 -n ($clustA+"loc");
select -r ($clustA);
select -add  ($clustA+"loc");
delete `pointConstraint`;
float $posA[]=`xform -q -ws -t ($clustA+"loc")`;
delete ($clustA+"loc");
	float $mag=mag(<<2,3,1>>);


float $maxDist=0;
for ($i=0;$i<size($rightVtxs);$i++){
	float $posB[]=`xform -q -ws -t $rightVtxs[$i]`;
	 $mag=mag (<<($posA[0]-$posB[0]),($posA[1]-$posB[1]),($posA[2]-$posB[2])>>);
	
	if ($mag>$maxDist)$maxDist=$mag;
	}
$maxDist=$maxDist+($maxDist/20.0);
	
select -r ($mesh);
sets -add ($cluster_temp) ($mesh);
polySelectConstraint -mode 3 -type 1 -dist 1 -distbound 0 $maxDist -distpoint  ($posA[0]*-1) $posA[1] $posA[2];


string $vtxs[]=`ls -sl -fl`;
polySelectConstraint -m 0;


string $geometry=$mesh;


createNode -n closestSampler closestPointOnMesh;
$tempString=`listRelatives -ni -s $geometry`;
connectAttr -f ($tempString[0]+".outMesh") closestSampler.inMesh;
connectAttr -f ($geometry+".worldMatrix[0]") closestSampler.inputMatrix;
int $closestOppositeVtxNr;
global string $gMainProgressBar;
progressBar -e -st ("镜像簇权重: "+$sel[1]) -bp -ii 1 -min 0 -max `size($vtxs)` $gMainProgressBar;
for ($i=0;$i<size($vtxs);$i++)
	{
	if (`progressBar -q -ic $gMainProgressBar`)
		break;
	progressBar -e -s 1 $gMainProgressBar;
	$posB=`xform -q -ws -t $vtxs[$i]`;
	setAttr -type float3 closestSampler.inPosition ($posB[0]*-1) $posB[1] $posB[2];
	$closestOppositeVtxNr=`getAttr closestSampler.result.closestVertexIndex`;
	$tempFloat=`percent -q -v $cluster ($geometry+".vtx["+$closestOppositeVtxNr+"]")`;


	if (!`sets -im $clusterSet ($geometry+".vtx["+$closestOppositeVtxNr+"]")`)
		$tempFloat[0]=0;


	percent -v $tempFloat[0] $oppositeCluster $vtxs[$i];
	}	
progressBar -e -ep $gMainProgressBar;
delete closestSampler;
}


///////////////////////////////////////////////////////////////////////////模型点约束物体
global proc zxb_moxingdianyuesuwuti_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "模型点约束物体" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------模型点约束物体--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 100 130 -l "模型" -tx "  " -ed 0  zxb_mode;
string$zxb_qvxian="zxb_mode";
button -l "载模型" -c ("zxb_zairufangfa_A_proc(\""+$zxb_qvxian+"\")") ;


textFieldGrp  -cw2 100 130 -l "物体" -tx "  " -ed 0  zxb_zairuwuti;
string$wuti="zxb_zairuwuti";
button -l "所有被约束物体" -c ("zxb_zairufangfa_A_proc(\""+$wuti+"\")") ;


 setParent..;
button -l "创建约束" -c "zxb_moxingdianyuesuwuti_fangfa_proc";

showWindow  ;
}





global proc zxb_moxingdianyuesuwuti_fangfa_proc()
{
string$mode=`textFieldGrp -q -tx  zxb_mode`;  
string$wuti=`textFieldGrp -q -tx   zxb_zairuwuti`;
string$wutiss[]= stringToStringArray($wuti, " ");//字符串转化数组

for ($i=0;$i<size($wutiss);$i++)
    {
     string$obj=$wutiss[$i];
     float $obj_pos[]=`xform -q -ws -t $obj`;
     select -r ($mode+".vtx[0:99999999]") ;
     string$cvs[]=`ls -sl -fl`;
     string$cvv="";
     float$diss=10000000;
     for ($ii=0;$ii<size($cvs);$ii++)
         {
             string$cv=$cvs[$ii];
             float $cv_pos[]=`xform -q -ws -t $cv`;
             float $weizhi=mag(<<$obj_pos[0],$obj_pos[1],$obj_pos[2]>>-<< $cv_pos[0] ,$cv_pos[1] ,$cv_pos[2]>>);////////计算距离
             if($weizhi<$diss)
                {
                 $diss=$weizhi;
                 $cvv=$cv;
                 }
                 
           }
     print $cvv;
     doMenuComponentSelectionExt($mode, "vertex", 1);
     select -r $cvv;
     
     select -add $obj;
      pointOnPolyConstraint -maintainOffset  -weight 1;
     }
}






////////////////////////////////////////////////动力学头发
global proc zxb_donglixuetoufa_fangfa()
{
      string $bns[]=`ls -sl`;
int$ex=`objExists "HAIR_FX"`;
string$qvxian_FXA="";
string$qvxian_FXB="";
if($ex==0)
{
$qvxian_FXA=`curve -d 1 -p 3.236364 0 0 -p 3.236364 5.423471 0 -p 7.417025 5.423471 0 -p 7.417025 6.67438 0 -p 3.236364 6.67438 0 -p 3.236364 10.677522 0 -p 8.216033 10.677522 0 -p 8.216033 11.94463 0 -p 1.541488 11.94463 0 -p 1.541488 0 0 -p 3.236364 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 `;
$qvxian_FXB= `curve -d 1 -p 10.736134 -0.112173 0 -p 13.780147 4.437122 0 -p 16.690358 -0.0452719 0 -p 18.898105 0.0216295 0 -p 15.051274 6.109657 0 -p 18.764302 11.829727 0 -p 17.125217 11.930079 0 -p 14.148105 7.447685 0 -p 11.304796 11.762825 0 -p 9.297754 11.96353 0 -p 12.94388 6.076206 0 -p 9.030148 -0.0452719 0 -p 10.736134 -0.0452719 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n "HAIR_FX"` ;
string$fxs[]=`listRelatives -s $qvxian_FXA`; 
select -r $fxs[0];
select -add $qvxian_FXB;
parent -r -s ;
delete  $qvxian_FXA;

int$ex=`objExists ($qvxian_FXB+".kaiguan")`;    ///判断
select -r $qvxian_FXB;
if($ex==0)
{
 addAttr -ln "kaiguan"  -at bool  -k 1 $qvxian_FXB;
 setAttr ($qvxian_FXB+".kaiguan") 1;
 }
 }
 
 
 
  ///////////////总组
 string$heir_heir_zongzu_grp="heir_zongzu_grp";
      int$ex=`objExists $heir_heir_zongzu_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_heir_zongzu_grp;}
 
 
 ///////////////动力学组
      string$heir_donglixueqvxian_grp="heir_donglixueqvxian_grp";
      int$ex=`objExists $heir_donglixueqvxian_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_donglixueqvxian_grp;  parent  $heir_donglixueqvxian_grp  $heir_heir_zongzu_grp;}
      
      
       ///////////////毛囊组
 string$heir_maonang_grp="heir_maonang_grp";
      int$ex=`objExists $heir_maonang_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_maonang_grp;  parent  $heir_maonang_grp  $heir_heir_zongzu_grp;}
      
             ///////////////hairSystem组
 string$heir_hairSystem_grp="heir_hairSystem_grp";
      int$ex=`objExists $heir_hairSystem_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_hairSystem_grp;  parent  $heir_hairSystem_grp  $heir_heir_zongzu_grp;}
      
                   ///////////////控制器组
 string$heir_kongzhiqi_grp="heir_kongzhiqi_grp";
      int$ex=`objExists $heir_kongzhiqi_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_kongzhiqi_grp;  parent  $heir_kongzhiqi_grp  $heir_heir_zongzu_grp;}
      
                         ///////////////IK控制柄组
 string$heir_IKkonghziqbing_grp="heir_IKkonghziqbing_grp";
      int$ex=`objExists $heir_IKkonghziqbing_grp`;    ///判断
      if($ex==0){group -empty -n  $heir_IKkonghziqbing_grp;  parent  $heir_IKkonghziqbing_grp  $heir_heir_zongzu_grp;}
      
for($ii=0;$ii<size($bns);$ii++)
   {
    string$bn=$bns[$ii];
    string $bns[]=`listRelatives -c -ad $bn`;   
    string$cbns[];
    clear$cbns;
    $cbns[0]=$bn;
    for($i=size($bns)-1;$i>=0;$i--)
       {
       string$temp_bn=$bns[$i];
       int$a=size($cbns);
       $cbns[$a]=$temp_bn;
       }

 string$qvxian=$bn+"_qvxian";
  
  int$cv_duanshu=size($cbns);
  if($cv_duanshu<3){error ($bn+"关节段数少于4截");}
  string$mingzi="curve -d 3 ";
   for($jj=0;$jj<size($cbns);$jj++)
      {
          string$mingzi_bnn=$cbns[$jj];
          float $temp[]=`xform -q -ws -t $mingzi_bnn`;
          $mingzi+="-p "+$temp[0]+" "+$temp[1]+" "+$temp[2]+" ";
      }
      string$cluste_grp="heir_grp";
      int$ex=`objExists $cluste_grp`;    ///判断
      if($ex==0){group -empty -n  $cluste_grp;  parent  $cluste_grp  $heir_kongzhiqi_grp;}
     $mingzi+=" -n "+ $qvxian;
     eval($mingzi); 
     parent $qvxian$cluste_grp;
    select -r($qvxian+".cv[0:999999]") ;
    string $cvs[]=`ls -sl -fl`;
    for($jjj=0;$jjj<size($cvs);$jjj++)
     {
      string$cv=$cvs[$jjj];
      string$cluster=$bn+"_cluster";
      select -r $cv;
      string$clusterss[]=`newCluster " -envelope 1" ` ;
      setAttr  ($clusterss[1]+".visibility") 0;
     parent $clusterss[1]$cluste_grp;
     curve -d 1 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -n ($clusterss[1]+"con"+$jjj) ;
     group -n ($clusterss[1]+"con"+$jjj+"grp_a");
     group -n ($clusterss[1]+"con"+$jjj+"grp_b");
     group -n ($clusterss[1]+"con"+$jjj+"grp_c");
     
     delete`parentConstraint $clusterss[1]($clusterss[1]+"con"+$jjj+"grp_c")`; 
     parent  $clusterss[1]($clusterss[1]+"con"+$jjj);
     parent ($clusterss[1]+"con"+$jjj+"grp_c") $cluste_grp;
     }
   select -r  $qvxian;
   makeCurvesDynamic 2 { "1", "0", "1", "1", "0"};
  string $maonang[]=`listRelatives -p $qvxian`; 
  string$follicle_a=$maonang[0];
  setAttr ($follicle_a+".pointLock") 1;
    string $follicle_a_shape[]=`listRelatives -s $follicle_a`; 
       string $follicle_weiyi[]=`listRelatives -p $follicle_a_shape[0]`;  
       parent $follicle_weiyi[0] $heir_maonang_grp ;
 string $outCurve[]=`listConnections -d 1 -s 0 -p 1 ($follicle_a_shape[0]+".outCurve")`;//列出链接属性  -d输入   -s输出  -p 列出属性 
 string$donglixue=$outCurve[0];
 string $mingzis[];
 clear $mingzis;//清除数组
 int $nemt=`tokenize $donglixue "."$mingzis`;//分离字符串存到变量
 string$donglixuess=$mingzis[0];
 string $dong[]=`listRelatives -p $donglixuess`; 
 string $dong_weiyi[]=`listRelatives -p $dong[0]`;  
parent  $dong_weiyi[0]  $heir_donglixueqvxian_grp ;
 
 string $hairSystemShape[]=`listConnections -d 0 -s 1 -p 1 ($follicle_a_shape[0]+".currentPosition")`;//列出链接属性  -d输入   -s输出  -p 列出属性 
 string $mingzisA[];
 clear $mingzisA;//清除数组
 int $nemt=`tokenize $hairSystemShape[0] "." $mingzisA`;//分离字符串存到变量
 string $hairSystem=$mingzisA[0];
  string $hairSystem_weiyi[]=`listRelatives -p $hairSystem`;  
parent $hairSystem_weiyi[0]  $heir_hairSystem_grp ;
 string$kaishi=$cbns[0];
 int$jiaoboa=size($cbns)-1;
 string$jiesu=$cbns[$jiaoboa];
 select -r $kaishi ;
 select -add $jiesu ;
 select -add $dong[0] ;
 string$ikikHandle[]= `ikHandle -sol ikSplineSolver -ccv false -pcv false`;

 parent $ikikHandle[0]  $heir_IKkonghziqbing_grp;
 string$kongzhiq="";
 string$kongzhiqizu="";
 
   for($jjj=0;$jjj<(size($cbns)-1);$jjj++)
      {
          
        string$joint=$cbns[$jjj];
        string$con=$joint+"_con_"+$jjj;
        circle -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $con ;
        group  -n ($con+"_grp_a");
        group -n ($con+"_grp_b");
        group  -n ($con+"_grp_c");
        group  -n ($con+"_grp_d");
        delete `parentConstraint $joint ($con+"_grp_d")`;
        parentConstraint $con $joint;
        $kongzhiq+=$con+" ";
        $kongzhiqizu+= ($con+"_grp_d")+" ";
       
       }
     //parent 
     string $kongzhiss[]= stringToStringArray($kongzhiq, " ");
      string $kongzhiqizus[]= stringToStringArray($kongzhiqizu, " ");
     for($kk=size($kongzhiqizus)-1;$kk>0;$kk--)
        {
         string$zu=$kongzhiqizus[$kk];
         int$jaiobuiao=$kk-1;
          string$kong=$kongzhiss[$jaiobuiao];
          parent  $zu $kong;
        }  
      parent  $kongzhiqizus[0]  $heir_kongzhiqi_grp;
  setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 0 -cd ("HAIR_FX"+".kaiguan") ($hairSystem+".simulationMethod");  
  setDrivenKeyframe -itt "linear" -ott "spline" -v 3 -dv 1 -cd ("HAIR_FX"+".kaiguan") ($hairSystem+".simulationMethod");  
    }
   

}
  /////////////////////////////////////////检查型节点  

global proc zxb_jianchaxingjiedian_fangfa()
{
   string $modes=`textFieldGrp -q -tx zxb_xingjiedian `;
    int$lishi=`checkBox -q -v shanchu`;
    string$modess[]= stringToStringArray($modes, " ");//字符串转化数组
    for($i=0;$i<size($modess);$i++)
       {
       string$moxing=$modess[$i];
       string $mode_shape[]=`listRelatives -s $moxing`; 
       for($ii=0;$ii<size($mode_shape);$ii++)
          {
           string$mode_org=$mode_shape[$ii];
           string$jiedian=$moxing+"Shape";
           if($mode_org!=$jiedian)
             { 
             string $z[]=`listConnections -d 0 -s 1  ($mode_org+".instObjGroups[0].objectGroups[0].objectGrpColor")`;//列出链接属性  -d输入   -s输出  -p 列出属性
              int$ex=`objExists $z[0]`;///判断
              if($ex==1)
                {
                 rename $mode_org $jiedian;
                 print ($modess[0]+"的型节点名称错误已经修改\n");
                 }
               if($ex==0)
                  {
                   if($lishi==1)
                   {
                       select -r $moxing;
                       DeleteHistory;
                    }
                    int$ex=`objExists $mode_org`;///判断
                    if($ex==1){ delete $mode_org ;}
                  
                   if($lishi==1){print ($modess[0]+"多余的型节点已经删除 并删除历史\n");}
                   if($lishi==0){print ($modess[0]+"多余的型节点已经删除\n");}
                  }  
             }
           
           
           if($mode_org==$jiedian){print ($modess[0]+"节点正确不用修改 \n");}
          }
       }
    
    
}

//////////////////////////////////////创建拉链嘴巴


global proc zxb_zuiba_tiqvqvxian_proc(){

if(`window -ex zxb_jisuanlianbu_ciji_Win`) deleteUI  zxb_jisuanlianbu_ciji_Win;
window -wh 420 200 -t "嘴巴曲线提取" zxb_jisuanlianbu_ciji_Win;
columnLayout -adj 1 -w 300 gtBSColumlayout;

text -l "--------------提取曲线--------------" -h 25;

rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;

textFieldGrp  -cw2 200 50 -l "选中线中线（最平的一段）" -tx "  " -ed 0  zxb_zairuxian;
string$xian="zxb_zairuxian";
button -l "载入线" -c ("zxb_zairufangfa_A_proc(\""+$xian+"\")") ;


textFieldGrp  -cw2 100 130 -l "曲线前缀" -tx "lalian"   zxb_qvxianmingzi;

text -l "  " ;

textFieldGrp  -cw2 200 70 -l "反向嘴巴模型（闭合模型）" -tx "  " -ed 0  zxb_zairumode;
string$mode="zxb_zairumode";
button -l "载模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;


 setParent..;
button -l "创建张嘴曲线A" -c "zxb_zuiba_tiqvqvxianfangfa_proc";
button -l "创建闭嘴曲线无后缀" -c "zxb_zuiba_tiqvqvxianfangfa_bizui_proc";
button -l "创建跟随曲线D" -c "zxb_zuiba_tiqvqvxianfangfa_gnesui_proc";
text -l "--------------创建拉链--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;




checkBox -l "选中点" -value 0 panduan_dian;
checkBox -l "反选控定位器（拉链效果默认闭合的话勾选他）" -value 1 fanxuan;

textFieldGrp  -cw2 150 100 -l "跟随曲线（D曲线）" -tx " "   locqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"locqvxian"+"\")") ;


textFieldGrp  -cw2 150 100 -l "张开 闭合 曲线" -tx " "   openclose;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"openclose"+"\")") ;



textFieldGrp  -cw2 150 100 -l "张开曲线(曲线A)" -tx " "   openA;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"openA"+"\")") ;



textFieldGrp  -cw2 150 100 -l "闭合曲线(曲线B)" -tx " "   close;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"close"+"\")") ;


//button -l "提取反向嘴曲线(暂时无用)" -c "zxb_xuanzebutongmoxing_jiluxuanzhededian";
//textFieldGrp  -cw2 100 130 -l "载入基础模型" -tx "模型" -ed 0  zxb_zairumodea;
//string$mode="zxb_zairumode";
//button -l "载入基础模型" -c ("zxb_zairufangfa_A_proc(\""+$mode+"\")") ;
setParent ..; 
button -l "定位器控制曲线（D曲线）" -c "zxb_dingweiqi_kongzhiqvxian";
button -l "曲线控制定位器(张开 闭合 曲线)" -c "zxb_dingweiqi_gensuiqvxian";
button -l "创建拉链" -c "zxb_global_bolangzui";



text -l "--------------创建线包裹--------------" -h 20  -bgc 0.3 0.7 0.3;
rowColumnLayout -nc 2 -cw 1 240 -cw 2 140;



textFieldGrp  -cw2 150 130 -l "载入基础模型" -tx "模型" -ed 0  zxb_zairumodeA;
string$modeA="zxb_zairumodeA";
button -l "载入模型" -c ("zxb_zairufangfa_A_proc(\""+$modeA+"\")") ;

textFieldGrp  -cw2 150 130 -l "载入D曲线 按顺序选中" -tx "曲线" -ed 0  Dqvxian;
string$Dqvxian="Dqvxian";
button -l "载入D曲线" -c ("zxb_zairufangfa_A_proc(\""+$Dqvxian+"\")") ;



textFieldGrp  -cw2 150 130 -l "载入张嘴曲线 按顺序选中" -tx "曲线" -ed 0  zhangzuiqvxian;
string$zhangzuiqvxian="zhangzuiqvxian";
button -l "张嘴曲线" -c ("zxb_zairufangfa_A_proc(\""+$zhangzuiqvxian+"\")") ;

setParent ..; 
button -l "生成包裹" -c "zxb_lalianbaoguo_poc";

text -l "--------------生成波浪--------------" -h 20  -bgc 0.3 0.7 0.3;
button -l "生成" -c "zxb_boliangzui_mianban_proc";


text -l "--------------骨骼跟随曲线--------------" -h 20  -bgc 0.3 0.7 0.3;
button -l "生成" -c "xiao_gugegengsuiqvxian_proc_columnLayout";

showWindow  ;
}




global proc zxb_zuiba_tiqvqvxianfangfa_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;
string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];


string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
   print $R;
   print $L;
   select -cl  ; 
   select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
string$head_qvxian=$Axianxian+"_open_UP_A";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;


select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
string$head_qvxian_b=$Axianxian+"_open_DW_A";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;
}








/////////////////////提取闭嘴曲线//////////////////////
global proc zxb_zuiba_tiqvqvxianfangfa_bizui_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;

string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];

string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
 
 
 
 
select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
zxb_xuanzebutongmoxing_jiluxuanzhededian_a 0 $modess;

string$head_qvxian_c=$Axianxian+"_close_UP_B";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_c;


select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
zxb_xuanzebutongmoxing_jiluxuanzhededian_a 0 $modess;
string$head_qvxian_d=$Axianxian+"_close_DW_B";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_d;
 
 
}


///////////////////提取跟随曲线//////////////////////////
global proc zxb_zuiba_tiqvqvxianfangfa_gnesui_proc()
{

string$xian=`textFieldGrp -q -tx  zxb_zairuxian`;
string$modess=`textFieldGrp -q -tx  zxb_zairumode`;


string$Aqvxianss=`textFieldGrp -q -tx zxb_qvxianmingzi `;
  string$Aqvxians[];
  clear $Aqvxians;
  int $nemt=`tokenize $Aqvxianss" " $Aqvxians`;//分离字符串存到变量
  string$Axianxian=$Aqvxians[0];
  
string$qvxianss[]= stringToStringArray($xian, " ");//字符串转化数组
string $bianliang[]=$qvxianss;
select -r $bianliang;
ConvertSelectionToVertices;
string $dingdian[]=`ls -sl -fl`;

string$diandian_L="";
string$diandian_R="";
float$R=-0.00000000001;
float$L=0.00000000001;


for($i=0;$i<size($dingdian);$i++)
   {
      string$vs=$dingdian[$i];
      float $trsa[]=`xform -q -ws -t $vs`;
      if($trsa[0]>$L)
         {
             $L=$trsa[0];
            $diandian_L=$vs;
         }
      if($trsa[0]<$R)
        {
            $R=$trsa[0];
            $diandian_R=$vs;
        }
   }
   
   
   print $R;
   print $L;
   select -cl  ; 
   select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]<$trsb[1])
      {
       select -d $vs;
       }
   }
   
ConvertSelectionToContainedEdges;
    string$head_qvxian=$Axianxian+"_follow_UP_D";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian;
DeleteHistory;

select -cl  ; 
select -r $dingdian;
for($i=0;$i<size($dingdian);$i++)
   {
    string$vs=$dingdian[$i];
    float $trsa[]=`xform -q -ws -t $vs`;
     float $trsb[]=`xform -q -ws -t $diandian_R`;
    if($trsa[1]>$trsb[1])
      {
       select -d $vs;
       }
   }
  
ConvertSelectionToContainedEdges;
string$head_qvxian_b=$Axianxian+"_follow_DW_D";
polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $head_qvxian_b;
DeleteHistory;
}



///////////选择方式

global proc zxb_xuanzebutongmoxing_jiluxuanzhededian()
{
  int $panduan=`checkBox -q  -value panduan_dian`;
  string $fanxiang_modces=`textFieldGrp -q -tx  zxb_zairumode`;
  string$modess[];
  clear $modess;
  int $nemt=`tokenize  $fanxiang_modces " " $modess`;//分离字符串存到变量
  string$fanxiang_mode=$modess[0];
    
     string $mesh_name=$fanxiang_mode;
   //string $mesh_name="head_mesh_zuiba_nianlian";
   string $bianliang[]=`ls -sl -fl`;

 //int $panduan=0;
   string $dian="vtx";
   if($panduan==0)
    {
    $dian="e";
    }else
    {
     $dian="vtx";
     }

   select -cl  ;


  for ($ll=0;$ll<size($bianliang);$ll++)
  {
    string $temp_name[];
    int $chafen=`tokenize $bianliang[$ll] "[" $temp_name`;
    int $chafen=`tokenize $temp_name[1] "]" $temp_name`;
    int $xuhao=$temp_name[0];
    select -add ($mesh_name+"."+$dian+"["+$xuhao+"]");
   // print  $temp_name;
    
   }
}



//////////////定位器控制器曲线/////////////////////

global proc  zxb_dingweiqi_kongzhiqvxian()
{
//string $bianliang[]=`ls -sl`;//选中曲线D  没有历史记录的曲线
 string $bianliang_sss=`textFieldGrp -q -tx  locqvxian`;
string $bianliang[]= stringToStringArray($bianliang_sss, " ");//字符串转化数组
for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian_A=$bianliang[$i];
    select -r ($qvxian_A+".cv[0:999999999999]");
    string  $cvs[]=`ls -sl -fl`;
    
    int $panduan=`objExists ($qvxian_A+"_locGrp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian_A+"_locGrp");
        }
     select -cl  ;
     group -empty -n ($qvxian_A+"_locGrp");
     setAttr ($qvxian_A+"_locGrp.visibility") 0;
     setAttr -lock true ($qvxian_A+"_locGrp"+".v");
     int $panduanA=`objExists ($qvxian_A+"_gengsui_"+"nearestPointOnCurve")`;//查询这个物体是否纯在
     if($panduanA==1){ delete ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");}
     createNode nearestPointOnCurve -n  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");//创建曲线最近点节点
     string $qvxian_shp[]=`listRelatives -s $qvxian_A`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]")  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve.inputCurve");
       
    for($j=0;$j<size($cvs);$j++) 
    {
        string  $cvdian_bianliang=$cvs[$j];
       spaceLocator -p 0 0 0 -n($qvxian_A+"_loc_A_"+$j);
       spaceLocator -p 0 0 0 -n($qvxian_A+"_loc_B_"+$j);
       parent ($qvxian_A+"_loc_B_"+$j)  ($qvxian_A+"_loc_A_"+$j);
       
       select -r ($qvxian_A+"_loc_B_"+$j);
       group -n  ($qvxian_A+"_locgrp_"+$j);
       group -n  ($qvxian_A+"_locgrp_A"+$j);
       group -n  ($qvxian_A+"_locgrp_B"+$j);
       //parent  ($qvxian_A+"_locgrp_B"+$j) ($qvxian_A+"_loc_A_"+$j);
       parent  ($qvxian_A+"_loc_A_"+$j) ($qvxian_A+"_locGrp");
       float $poslist[]= `xform -q -ws -t  $cvdian_bianliang`;
       setAttr -type float3 ($qvxian_A+"_gengsui_"+"nearestPointOnCurve"+".inPosition") $poslist[0] $poslist[1] $poslist[2];
       float $poslist_A[]=`getAttr ($qvxian_A+"_gengsui_"+"nearestPointOnCurve"+".position")`;
      xform -ws -t    $poslist_A[0] $poslist_A[1] $poslist_A[2] ($qvxian_A+"_loc_A_"+$j);//定位器1的位置
       xform -ws -t  $poslist[0] $poslist[1] $poslist[2]($qvxian_A+"_loc_B_"+$j) ;//定位器1的位置
       string $loc_shp[]=`listRelatives -s ($qvxian_A+"_loc_B_"+$j)`;
       connectAttr -f ($loc_shp[0]+".worldPosition[0]") ($qvxian_shp[0]+".controlPoints["+$j+"]");
     }
     
     delete  ($qvxian_A+"_gengsui_"+"nearestPointOnCurve");
}

}

////////////////////////////曲线控制器定位器//////////////////////////////////////////

global proc  zxb_dingweiqi_gensuiqvxian()
{
//string $bianliang[]=`ls -sl`;//选中另外4条曲线
 string $bianliang_sss=`textFieldGrp -q -tx  openclose`;
string $bianliang[]= stringToStringArray($bianliang_sss, " ");//字符串转化数组


 int $panduan_A=`objExists ("temp_qvxian_nearestPointOnCurve")`;//查询这个物体是否纯在
 if($panduan_A==1){delete ("temp_qvxian_nearestPointOnCurve"); }
createNode nearestPointOnCurve -n  ("temp_qvxian_nearestPointOnCurve");//创建曲线最近点节点

for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian=$bianliang[$i]; 
     string $qvxian_shp[]=`listRelatives -s $qvxian`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ("temp_qvxian_nearestPointOnCurve.inputCurve") ;
    
 
    
     int $panduan=`objExists ($qvxian+"_B_Grp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian+"_B_Grp");
        }
     select -cl  ;
     group -empty -n ($qvxian+"_B_Grp");
     setAttr ($qvxian+"_B_Grp.visibility") 0;
     setAttr -lock true ($qvxian+"_B_Grp"+".v");
     
     
    int $panduan=`objExists ($qvxian+"_A_Grp")`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete ($qvxian+"_A_Grp");
        }
     select -cl  ;
     group -empty -n ($qvxian+"_A_Grp");
     setAttr ($qvxian+"_A_Grp.visibility") 0;
     setAttr -lock true ($qvxian+"_A_Grp"+".v");

   select -r ($qvxian+".cv[0:99999999999]");
    string $cvs[]=`ls -sl -fl`;
    
  global string $gSelect;
global string $gMainProgressBar;
setToolTo $gSelect;
progressBar -e -st ("创建定位器...") -bp -ii 1 -min 0 -max `size($cvs)` $gMainProgressBar;
    for($j=0;$j<size($cvs);$j++) 
    {
         if(`progressBar -q -ic $gMainProgressBar`)
         break;
         progressBar -e -s 1 $gMainProgressBar;
         string $cv_dian=$cvs[$j];
        spaceLocator -p 0 0 0 -n ($qvxian+"_loc_A_"+$j);
        spaceLocator -p 0 0 0 -n ($qvxian+"_loc_B_"+$j);
        parent ($qvxian+"_loc_B_"+$j) ($qvxian+"_B_Grp");
        parent ($qvxian+"_loc_A_"+$j)  ($qvxian+"_A_Grp");
        float $pos_a[]=`xform -q -ws -t $cvs[$j]`;
        setAttr  -type float3 ("temp_qvxian_nearestPointOnCurve.inPosition")  $pos_a[0] $pos_a[1] $pos_a[2];
         addAttr -ln ("canshu")  -at double   -dv 0 -k  1 ($qvxian+"_loc_A_"+$j);//添加属性
        float $canshu=`getAttr "temp_qvxian_nearestPointOnCurve.parameter"`;
        setAttr  ($qvxian+"_loc_A_"+$j+".canshu") $canshu;
        setAttr -lock true ($qvxian+"_loc_A_"+$j+".canshu");
        
         int $panduan_A=`objExists ($qvxian+"_pointOnCurveInfo_loc_"+$j)`;//查询这个物体是否纯在
         if($panduan_A==1){delete ($qvxian+"_pointOnCurveInfo_loc_"+$j); }
        createNode "pointOnCurveInfo" -n ($qvxian+"_pointOnCurveInfo_loc_"+$j);//创建曲线信息节点
        connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".inputCurve");
        connectAttr -force ($qvxian+"_loc_A_"+$j+".canshu") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".parameter");
        connectAttr -force ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position") ($qvxian+"_loc_A_"+$j+".t");
        
        float $pos_c[]=`getAttr ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position")`;
         setAttr -type float3 ($qvxian+"_loc_B_"+$j+".t") $pos_c[0] $pos_c[1] $pos_c[2];
     }
     progressBar -e -ep $gMainProgressBar;
    
}
delete ("temp_qvxian_nearestPointOnCurve");
}






///////////////////////创建拉链效果/////////////////////////
global proc zxb_global_bolangzui(){

//string $bianliang[]=`ls -sl`;//选中默认曲线

string $openA_sss=`textFieldGrp -q -tx  openA`;
string $openAs[]= stringToStringArray($openA_sss, " ");//字符串转化数组

string $close_sss=`textFieldGrp -q -tx  close`;
string $close_Bs[]= stringToStringArray($close_sss, " ");//字符串转化数组

 string $follow_sss=`textFieldGrp -q -tx  locqvxian`;
string$follow_Ds[]= stringToStringArray($follow_sss, " ");//字符串转化数组

 string $qianzui_sss=`textFieldGrp -q -tx  zxb_qvxianmingzi`;
 string$qianzui_a[];
  clear $qianzui_a;
  int $nemt=`tokenize $qianzui_sss" " $qianzui_a`;//分离字符串存到变量
  string$qianzui=$qianzui_a[0];

string $bianliang[]=$close_Bs;
 int $fanxiang_a=`checkBox -q  -value fanxuan`;
 int $panduan_a=`objExists ($bianliang[0]+"_curveInfo")`;
 if($panduan_a==1){delete ($bianliang[0]+"_curveInfo");}
shadingNode -asUtility curveInfo -n ($bianliang[0]+"_curveInfo");

string $qvxian_shp[]=`listRelatives -c ($bianliang[0])`;
connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($bianliang[0]+"_curveInfo.inputCurve");

 int $panduan=`objExists ($bianliang[0]+".changdu")`;
if($panduan==0){addAttr -ln "changdu"  -at double  -dv 0 -k 1($bianliang[0]);}
setAttr -lock 0  ($bianliang[0]+".changdu");
connectAttr -force  ($bianliang[0]+"_curveInfo.arcLength") ($bianliang[0]+".changdu");
setAttr -lock 1  ($bianliang[0]+".changdu");


select -r  ($bianliang[0]+".cv[0:9999999999]") ;
string $qvxian_dian[]=`ls -sl -fl`;
int $qvxian_size=size($qvxian_dian);
float $pos_A[]=`xform -q -ws -t ($bianliang[0]+".cv[0]")`;
float $pos_B[]=`xform -q -ws -t ($bianliang[0]+".cv["+($qvxian_size-1)+"]")`;
float $pos_l_panduan[]=$pos_A;
float $pos_r_panduan[]=$pos_B;
if ( $pos_r_panduan[0]>$pos_l_panduan[0])
{
     $pos_l_panduan=$pos_B;
     $pos_r_panduan=$pos_A;
}

string$zuiba_loc_L=($bianliang[0]+"LL_ZUIBA_LOC");
string$zuiba_loc_R=($bianliang[0]+"RR_ZUIBA_LOC");
spaceLocator -p 0 0 0 -n $zuiba_loc_L;
spaceLocator -p 0 0 0 -n $zuiba_loc_R;
xform  -ws -t  $pos_l_panduan[0]  $pos_l_panduan[1]  $pos_l_panduan[2] $zuiba_loc_L;
xform  -ws -t  $pos_r_panduan[0]  $pos_r_panduan[1]  $pos_r_panduan[2] $zuiba_loc_R;


 int $panduan_b=`objExists ($zuiba_loc_L+".shuaijian")`;
 float $changdu=`getAttr ($bianliang[0]+".changdu")`;
 float $changduzhi= $changdu/5.0;
if($panduan_b==0)
{
addAttr -ln "shuaijian"  -at double  -dv $changduzhi -k 1 ($zuiba_loc_L);
setAttr -keyable false -channelBox true ($zuiba_loc_L+".shuaijian");
}

move -r  ($changduzhi*1.25) 0 0 ($zuiba_loc_L) ;
move -r  ($changduzhi*-1.25) 0 0 ($zuiba_loc_R) ;
//print `size($qvxian_dian)`;
for($j=0;$j<size($bianliang);$j++)
{
 

for($i=0;$i<size($qvxian_dian);$i++)
 {
     
     string $qvxian_B=$close_Bs[$j];
     string$qvxian_A= $openAs[$j];
     string$qvxian_D=$follow_Ds[$j];
     
     string$qvxian_loc=($qvxian_B+"_loc_A_"+$i);
     string$qvxian_locA=($qvxian_A+"_loc_A_"+$i);
     string$qvxian_locD=($qvxian_D+"_loc_A_"+$i);
    
         select -r $qvxian_loc ;
         select -add $qvxian_locA ;
         select -add $qvxian_locD;
     string $dianyuesu_bianliang[]=`pointConstraint`;
     
     
      int $panduan_C=`objExists ($qvxian_B+"_plusMinusAverage_L_"+$i)`;
      if($panduan_C==1){delete ($qvxian_B+"_plusMinusAverage_L_"+$i); }
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_L_"+$i);//创建加减节点
     connectAttr -force  ($zuiba_loc_L+".tx") ($qvxian_B+"_plusMinusAverage_L_"+$i+".input1D[0]");
     connectAttr -force  ($qvxian_locA+".tx") ($qvxian_B+"_plusMinusAverage_L_"+$i+".input1D[1]");
     setAttr ($qvxian_B+"_plusMinusAverage_L_"+$i+".operation") 2;
      
      int $panduan_F=`objExists ($qvxian_B+"setRange_A_"+$i)`;
      if($panduan_F==1){delete ($qvxian_B+"setRange_A_"+$i); }
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_A_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_A_"+$i+".maxX") 1;
     connectAttr -f ($zuiba_loc_L+".shuaijian")($qvxian_B+"setRange_A_"+$i+".oldMaxX");
     connectAttr -f ($qvxian_B+"_plusMinusAverage_L_"+$i+".output1D") ($qvxian_B+"setRange_A_"+$i+".valueX");
     
      
     int $panduan_D=`objExists ($qvxian_B+"_plusMinusAverage_R_"+$i)`;
     if($panduan_D==1){delete ($qvxian_B+"_plusMinusAverage_R_"+$i); }
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_R_"+$i);//创建加减节点
     connectAttr -force  ($zuiba_loc_R+".tx") ($qvxian_B+"_plusMinusAverage_R_"+$i+".input1D[1]");//中间减→→右边 右边数值是负数
     connectAttr -force  ($qvxian_locA+".tx") ($qvxian_B+"_plusMinusAverage_R_"+$i+".input1D[0]");
     setAttr ($qvxian_B+"_plusMinusAverage_R_"+$i+".operation") 2;
     
      int $panduan_F=`objExists ($qvxian_B+"setRange_B_"+$i)`;
      if($panduan_F==1){delete ($qvxian_B+"setRange_B_"+$i); }
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_B_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_B_"+$i+".maxX") 1;
     connectAttr -f ($zuiba_loc_L+".shuaijian")($qvxian_B+"setRange_B_"+$i+".oldMaxX");
     connectAttr -f ($qvxian_B+"_plusMinusAverage_R_"+$i+".output1D") ($qvxian_B+"setRange_B_"+$i+".valueX");
     
     
     int $panduan_E=`objExists ($qvxian_B+"_plusMinusAverage_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"_plusMinusAverage_M_"+$i);}
     shadingNode -asUtility plusMinusAverage -n ($qvxian_B+"_plusMinusAverage_M_"+$i);//创建加减节点
     setAttr ($qvxian_B+"_plusMinusAverage_M_"+$i+".operation") 2;
     setAttr ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[0]") 2;
     connectAttr -f ($qvxian_B+"setRange_A_"+$i+".outValueX")  ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[1]");
     connectAttr -f ($qvxian_B+"setRange_B_"+$i+".outValueX")  ($qvxian_B+"_plusMinusAverage_M_"+$i+".input1D[2]");



     int $panduan_E=`objExists ($qvxian_B+"setRange_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"setRange_M_"+$i);}
     shadingNode -asUtility  setRange -n ($qvxian_B+"setRange_M_"+$i);//创建范围节点
     setAttr ($qvxian_B+"setRange_M_"+$i+".maxX") 1;
     setAttr ($qvxian_B+"setRange_M_"+$i+".oldMaxX") 1;
     connectAttr -f ($qvxian_B+"_plusMinusAverage_M_"+$i+".output1D") ($qvxian_B+"setRange_M_"+$i+".valueX");
     
     
      int $panduan_E=`objExists ($qvxian_B+"reverse_M_"+$i)`;
     if( $panduan_E==1){delete ($qvxian_B+"reverse_M_"+$i);}
     shadingNode -asUtility reverse -n($qvxian_B+"reverse_M_"+$i); //创建反向节点
     connectAttr -f ($qvxian_B+"setRange_M_"+$i+".outValueX") ($qvxian_B+"reverse_M_"+$i+".inputX");
     if($fanxiang_a==1)
        {
         connectAttr -f  ($qvxian_B+"setRange_M_"+$i+".outValueX") ($dianyuesu_bianliang[0]+"."+$qvxian_loc+"W0")  ;
          connectAttr -f  ($qvxian_B+"reverse_M_"+$i+".outputX") ($dianyuesu_bianliang[0]+"."+$qvxian_locA+"W1") ;
         }
        else{
          connectAttr -f  ($qvxian_B+"reverse_M_"+$i+".outputX") ($dianyuesu_bianliang[0]+"."+$qvxian_loc+"W0")  ;
          connectAttr -f   ($qvxian_B+"setRange_M_"+$i+".outValueX")($dianyuesu_bianliang[0]+"."+$qvxian_locA+"W1") ;
           }
        
 }
 
}
 
}
 
///////////////////////////生成包裹

global proc zxb_lalianbaoguo_poc()
 {
  string $lalian_modces=`textFieldGrp -q -tx  zxb_zairumodeA`;
  string $qvxianDs=`textFieldGrp -q -tx Dqvxian  `;
  string $zhangzuiqvxians=`textFieldGrp -q -tx zhangzuiqvxian  `;
  
  string$qvxianDss[]=stringToStringArray($qvxianDs, " ");
   string$zhangzuiqvxianss[]=stringToStringArray($zhangzuiqvxians, " ");
  string$mod[];
  clear $mod;
  int $nemt=`tokenize  $lalian_modces " " $mod`;//分离字符串存到变量
  string$lalian_modce=$mod[0];
  
for ($i=0;$i<size($qvxianDss);$i++)
    {
    string$qvxian=$qvxianDss[$i];
    string$qvxian_A=$zhangzuiqvxianss[$i];
    string$baoguoa[]=`wire -gw false -en 1.000000 -ce 0.000000 -li 0.000000 -w $qvxian $lalian_modce`;
    setAttr ($baoguoa[0]+".rotation") 0.2;
    setAttr ($baoguoa[0]+".dropoffDistance[0]") 10;
    select -r  $qvxian_A;
    select -add  $qvxian_A ($qvxian+"BaseWire");
    string$bs[]=`blendShape`;
    
    setAttr ($bs[0]+"."+$qvxian_A) 1;
    
    }


}





////////////////////////骨骼跟随曲线


global proc xiao_gugegengsuiqvxian_proc_columnLayout() 
{
if(`window -ex zxb_chibangWin_columnLayout`) deleteUI zxb_chibangWin_columnLayout; 

window -t "翅膀" zxb_chibangWin_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;

 
 text -l " 关节跟随曲线 " -h 25;
 text -l "  " -h 25;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;

textFieldGrp  -cw2 100 300 -l "曲线" -tx "曲线" -ed 0  qvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"qvxian"+"\")") ;


setParent ..; 

text -l "  " -h 25;
button -l "创建" -c "zxb_gugegengsuiqvxian_a_proc" ;
showWindow zxb_chibangWin_columnLayout; 
}
 


global proc zxb_gugegengsuiqvxian_a_proc()
{
      string $qvxianss=`textFieldGrp -q -tx  qvxian `;
      string$qvxian_s[]= stringToStringArray($qvxianss, " ");//关节
      
     string $bianliang[]=$qvxian_s;//

 int $panduan_A=`objExists ("temp_qvxian_nearestPointOnCurve")`;//查询这个物体是否纯在
 if($panduan_A==1){delete ("temp_qvxian_nearestPointOnCurve"); }
createNode nearestPointOnCurve -n  ("temp_qvxian_nearestPointOnCurve");//创建曲线最近点节点

for($i=0;$i<size($bianliang);$i++) 
{
    string $qvxian=$bianliang[$i]; 
     string $qvxian_shp[]=`listRelatives -s $qvxian`;
     connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ("temp_qvxian_nearestPointOnCurve.inputCurve") ;
    
     string$qvxian_grp=($qvxian+"_bn_Grp");
    
     int $panduan=`objExists $qvxian_grp`;//查询这个物体是否纯在
    if($panduan==1)
        {
         delete $qvxian_grp;
        }
     select -cl  ;
     group -empty -n $qvxian_grp;
     setAttr ($qvxian_grp+".visibility") 0;
    // setAttr -lock true ($qvxian_grp+".v");
     
  

   select -r ($qvxian+".cv[0:99999999999]");
    string $cvs[]=`ls -sl -fl`;
    
  global string $gSelect;
global string $gMainProgressBar;
setToolTo $gSelect;
progressBar -e -st ("创建骨骼...") -bp -ii 1 -min 0 -max `size($cvs)` $gMainProgressBar;
    for($j=0;$j<size($cvs);$j++) 
    {
         if(`progressBar -q -ic $gMainProgressBar`)
         break;
         progressBar -e -s 1 $gMainProgressBar;
         string $cv_dian=$cvs[$j];
         string$bn=($qvxian+"_bn_"+$j);
         select -cl  ;
         joint -p 0 0 0 -n $bn;
       
        parent $bn  $qvxian_grp;
        float $pos_a[]=`xform -q -ws -t $cvs[$j]`;
        setAttr  -type float3 ("temp_qvxian_nearestPointOnCurve.inPosition")  $pos_a[0] $pos_a[1] $pos_a[2];
         addAttr -ln ("canshu")  -at double   -dv 0 -k  1 $bn;//添加属性
        float $canshu=`getAttr "temp_qvxian_nearestPointOnCurve.parameter"`;
        setAttr  ($bn+".canshu") $canshu;
        setAttr -lock true ($bn+".canshu");
        
         int $panduan_A=`objExists ($qvxian+"_pointOnCurveInfo_loc_"+$j)`;//查询这个物体是否纯在
         if($panduan_A==1){delete ($qvxian+"_pointOnCurveInfo_loc_"+$j); }
        createNode "pointOnCurveInfo" -n ($qvxian+"_pointOnCurveInfo_loc_"+$j);//创建曲线信息节点
        connectAttr -force ($qvxian_shp[0]+".worldSpace[0]") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".inputCurve");
        connectAttr -force ($bn+".canshu") ($qvxian+"_pointOnCurveInfo_loc_"+$j+".parameter");
        connectAttr -force ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position") ($bn+".t");
        
        float $pos_c[]=`getAttr ($qvxian+"_pointOnCurveInfo_loc_"+$j+".position")`;
        // setAttr -type float3 ($qvxian+"_loc_B_"+$j+".t") $pos_c[0] $pos_c[1] $pos_c[2];
     }
     progressBar -e -ep $gMainProgressBar;
    
}
delete ("temp_qvxian_nearestPointOnCurve");
      
      

}




/////////////////////鸟类绑定///////////////////////////////////////////////////////////鸟类绑定//////////////////////////////////////

global proc xiao_chibang_proc_columnLayout() 
{
if(`window -ex zxb_chibangWin_columnLayout`) deleteUI zxb_chibangWin_columnLayout; 

window -t "翅膀" zxb_chibangWin_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
 
 
textFieldGrp  -cw2 100 300 -l "载入翅膀关节 按顺序选中" -tx "关节" -ed 0  zxb_ganjie;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_ganjie"+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入模型" -tx "模型" -ed 0  zxb_modee;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_modee"+"\")") ;

textFieldGrp  -cw2 100 130 -l "载入要提取的边" -tx "边" -ed 0  mode_bian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"mode_bian"+"\")") ;

setParent ..; 

button -l "创建毛囊附着表面" -c "zxb_chibang_proc_maonang" zxb_moanang_proc;
button -l "提取曲线" -c "zxb_tiqvbian_proc_maonang" zxb_tiqv_proc;
button -l "创建目标约束曲线" -c "zxb_ahucngajianchibangqvxian_A_proc_maonang" zxb_mubiao_proc;
button -l "保存关节原始长度与" -c "zxb_baochun_bn_changdu_A_proc" zxb_changdu_proc;
rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
 
 
textFieldGrp  -cw2 150 200 -l "切线约束曲线 曲线B" -tx "曲线" -ed 0  zxb_qiexianqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_qiexianqvxian"+"\")") ;

textFieldGrp  -cw2 150 200 -l "切线曲线跟随绑定 曲线A" -tx "曲线" -ed 0  zxb_maonangqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_maonangqvxian"+"\")") ;


textFieldGrp  -cw2 150 200 -l "跟随模型曲线" -tx "曲线" -ed 0  zxb_gensuiqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_gensuiqvxian"+"\")") ;

textFieldGrp  -cw2 150 200 -l "IK曲线" -tx "曲线" -ed 0  zxb_IKqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_IKqvxian"+"\")") ;

textFieldGrp  -cw2 150 200 -l "动力学曲线FX" -tx "曲线" -ed 0  zxb_FXqvxian;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_FXqvxian"+"\")") ;



setParent ..; 
button -l "羽毛关节切线切线约束定位器" -c "zxb_qiexianyuesdingweiqi_proc" zxb_qiexian_proc;

button -l "定位器目标约关节" -c "zxb_niaolei_guanjiemubiaoyuesu_proc" zxb_mubiao_loc_proc;

textFieldGrp  -cw2 150 200 -l "关节段数" -tx "4"   zxb_bn_duanshu;

button -l "创建次级关节" -c "zxb_niaolei_chuangjiancijiguanjie_proc" zxb_cijiguanjie_proc;


textFieldGrp  -cw2 150 200 -l "IK关节" -tx " " -ed 0  zxb_FXqvxian_IKbn;


button -l "羽毛次级IK控制器" -c "zxb_niaolei_ikkongzhiqi_proc" zxb_IK_kongzhiqi_proc;


 rowColumnLayout -nc 3 -cw 1 200 -cw 2 200  -cw 3 200 ;

textFieldGrp  -cw3 150 150 150  -l "所有参与解算的控制器A" -tx "曲控制器" -ed 0  zxb_jiesuankongzhiqi;
string$batenn="buttonajiesuan";
string$tex="zxb_jiesuankongzhiqi";
button -l "载入" -c   ("zxb_butt_tex_proc(\""+$batenn+"\",\""+$tex+"\")")  buttonajiesuan;
string$fangfa="zxb_zairufangfa_C_proc(\""+"buttonajiesuan"+"\",\""+"zxb_jiesuankongzhiqi"+"\")";
button -l "清除" -c $fangfa ;


textFieldGrp  -cw3 150 150 150  -l "添加控制器" -tx "曲控制器" -ed 0  zxb_jiesuankongzhiqi_add;
string$batenn_add="buttonajiesuan_add";
string$tex_add="zxb_jiesuankongzhiqi_add";
button -l "载入" -c   ("zxb_butt_tex_proc(\""+$batenn_add+"\",\""+$tex_add+"\")")  buttonajiesuan_add;
string$fangfaA="zxb_zairufangfa_C_proc(\""+$batenn_add+"\",\""+$tex_add+"\")";

button -l "清除" -c $fangfaA ;

textFieldGrp  -cw3 150 150 150  -l "所有结算器" -tx "" -ed 0  zxb_alljiesuanqi;
string$alljiesuanqi="zxb_alljiesuanqi";
string$button_all="alljiesuanqibutton";
button -l "载入" -c   ("zxb_butt_tex_proc(\""+$button_all+"\",\""+$alljiesuanqi+"\")")  alljiesuanqibutton;

string$fangfab="zxb_zairufangfa_C_proc(\""+$button_all+"\",\""+$alljiesuanqi+"\")";

button -l "清除" -c $fangfab;
setParent ..; 

button -l "创建动力学交互实时控制表达式生成" -c "zxb_niaolei_donglixue_proc" ;
showWindow zxb_chibangWin_columnLayout; 
}
 


global proc zxb_chibang_proc_maonang()
{
      string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
      string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
      string $mode=`textFieldGrp -q -tx  zxb_modee `;//mode
      zxb_zairufangfa_vsanniu_on_proc ("zxb_moanang_proc");
      string$buyidongzu="GlobalSetting";
      zxb_ADD_kongzu_proc($buyidongzu);
      for($i=0;$i<size($bns);$i++)
         {
             string$temp_bn=$bns[$i];
             setAttr ($temp_bn+".drawStyle") 2;
             
             string $mode_Shape[]=`listRelatives -s $mode`; 
             string$maonangzu=$mode+"maonang_GRP";
             zxb_ADD_kongzu_proc($maonangzu);
             string$fujiedian[]=`listRelatives -p $maonangzu`; 
             int $ex=`objExists $fujiedian[0]`;
             if($ex==0){parent $maonangzu $buyidongzu ;  setAttr ($maonangzu+".visibility") 0; setAttr -lock true ($maonangzu+".v");};
             float $temp_pos[]=`xform -q -a -ws -t $temp_bn`;//////查询位置
             string$closestPointOnMesh_mode_A=$mode+"_closestPointOnMesh_A_"+$i;
             int $ex=`objExists $closestPointOnMesh_mode_A`;//查询这个物体是否纯在
             if($ex==0)
                { createNode "closestPointOnMesh"   -n $closestPointOnMesh_mode_A;}//模型信息节点	
                
             connectAttr -force ($mode_Shape[0]+".outMesh") ($closestPointOnMesh_mode_A+".inMesh");
             setAttr  -type float3 ($closestPointOnMesh_mode_A+".inPosition")  $temp_pos[0] $temp_pos[1] $temp_pos[2] ;
             float$U=`getAttr  ($closestPointOnMesh_mode_A+".parameterU")`;
             float$V=`getAttr  ($closestPointOnMesh_mode_A+".parameterV")`;
             
             string$maonang= $temp_bn+"_maonang_"+$i;
             int $ex=`objExists $maonang`;//查询这个物体是否纯在\
             if ($ex==0){  createNode "follicle" -n $maonang ;}//创建毛囊
             string$maonang_a=$maonang+"_follicle";
             select -r  $maonang;
             pickWalk -d up;
             rename  $maonang_a;
             connectAttr -force ($mode_Shape[0]+".outMesh") ($maonang+".inputMesh");
             connectAttr -force ($mode_Shape[0]+".worldMatrix[0]") ($maonang+".inputWorldMatrix");
             connectAttr -f ($maonang+".outRotate") ($maonang_a+".rotate");
             connectAttr -f ($maonang+".outTranslate") ($maonang_a+".translate");
             
             setAttr ($maonang+".parameterU") $U;
             setAttr ($maonang+".parameterV") $V;

             parent  $maonang_a  $maonangzu;
             delete  $closestPointOnMesh_mode_A;
             pointConstraint   $maonang_a $temp_bn  ;
            setAttr ($maonang_a+".visibility") 0; 

          }
      
      

}



/////////////////提取曲线
global proc zxb_tiqvbian_proc_maonang()
{
     string $bianss=`textFieldGrp -q -tx  mode_bian `;
     string $mode=`textFieldGrp -q -tx  zxb_modee `;//mode
     string$qvxian[]= stringToStringArray($bianss, " ");//关节
     string$tiqv_qvxian=$mode+"qvxian_A";
     string$tiqv_qvxian_IK=$mode+"qvxian_IK";
     string$tiqv_qvxian_FX=$mode+"qvxian_FX";
     string$qvxin_grp=$mode+"qvxian_grp";
     
     
     
     string$buyidongzu="GlobalSetting";
     
     textFieldGrp -e -tx $tiqv_qvxian zxb_gensuiqvxian ;
     textFieldGrp -e -tx $tiqv_qvxian_IK zxb_IKqvxian ;
     textFieldGrp -e -tx $tiqv_qvxian_FX  zxb_FXqvxian ;
     zxb_ADD_kongzu_proc($qvxin_grp);
      zxb_zairufangfa_vsanniu_on_proc("zxb_tiqv_proc");    
      int $ex=`objExists $tiqv_qvxian`;
      if($ex==0)
        {
        select -r  $qvxian;
        polyToCurve -form 2 -degree 1 -conformToSmoothMeshPreview 1 -n $tiqv_qvxian ;
      
        select -r  $tiqv_qvxian;
        duplicate -rr  -n $tiqv_qvxian_IK;
        select -r  $tiqv_qvxian;
        duplicate -rr  -n $tiqv_qvxian_FX;
        parent $tiqv_qvxian $qvxin_grp;
        parent $tiqv_qvxian_IK $qvxin_grp;
        parent $tiqv_qvxian_FX $qvxin_grp;
         }else{error "曲线以及存在 无需重复生成";}

    string$fujiedian[]=`listRelatives -p $qvxin_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $qvxin_grp $buyidongzu ;};   
    setAttr ($qvxin_grp+".visibility") 0;
    setAttr -lock true ($qvxin_grp+".v"); 
}
////////////////////定位器控制B曲线
global proc zxb_ahucngajianchibangqvxian_A_proc_maonang()
{
   string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
   string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
   string$mingzi="curve -d 3 ";
   string$qvxian_nmiongzi=$bns[0]+"qvxian_A";
   string$qvxian_nmiongziB=$bns[0]+"qvxian_B";
   string$loc_grp=$qvxian_nmiongziB+"loc_grp";
   
   string$buyidongzu="GlobalSetting";
    
   textFieldGrp -e -tx $qvxian_nmiongzi zxb_maonangqvxian ;
   textFieldGrp -e -tx $qvxian_nmiongziB  zxb_qiexianqvxian ;
   string$qvxian_grp=$qvxian_nmiongziB+"qvxian_grp";
   zxb_ADD_kongzu_proc($loc_grp);
   zxb_ADD_kongzu_proc($qvxian_grp);
   
   string$fujiedian[]=`listRelatives -p $loc_grp`; 
   int $ex=`objExists $fujiedian[0]`;
   if($ex==0){parent $loc_grp $buyidongzu ; setAttr ($loc_grp+".visibility") 0; setAttr -lock true ($loc_grp+".v"); };
      
   string$fujiedian[]=`listRelatives -p $qvxian_grp`; 
   int $ex=`objExists $fujiedian[0]`;
   if($ex==0){parent $qvxian_grp $buyidongzu ;   setAttr ($qvxian_grp+".visibility") 0; setAttr -lock true ($qvxian_grp+".v"); };
   
   zxb_zairufangfa_vsanniu_on_proc("zxb_mubiao_proc");
   for($jj=0;$jj<size($bns);$jj++)
       {
        string$mingzi_bnn=$bns[$jj];
        
        float $temp[]=`xform -q -a -ws -t $mingzi_bnn`;
        $mingzi+="-p "+$temp[0]+" "+$temp[1]+" "+$temp[2]+" ";
        }
      //$mingzi+=" -n "+ $qvxian_nmiongzi;
    eval($mingzi);
     string$cv_qvxian[]=`ls -sl `;  
    rename $cv_qvxian[0] $qvxian_nmiongzi; 
    select -r $qvxian_nmiongzi ;   
    duplicate -rr -n $qvxian_nmiongziB;
    select -r  $qvxian_nmiongziB;
    rebuildCurve -ch 0 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s 4 -d 3 -tol 0.0001 $qvxian_nmiongziB;
    string $qvxianb_shape[]=`listRelatives -s $qvxian_nmiongziB`; 
    string $qvxianb_Ashape[]=`listRelatives -s $qvxian_nmiongzi`; 

    select -r ($qvxian_nmiongziB+".cv[0:9999999]") ;
    string$cv_dian[]=`ls -sl -fl`;
    for($i=0;$i<size($cv_dian);$i++)
       {
         string$cv=$cv_dian[$i];
         float $temp_pos[]=`xform -q -a -ws -t $cv`;
         string$temp_loc_kongzhi=$qvxian_nmiongziB+"loc_kongzhiq"+$i;
         string$temp_loc=$qvxian_nmiongziB+"loc"+$i;
        string$nearestPointOnCurve_A=$qvxian_nmiongziB+"nearestPointOnCurve"+$i;

       // spaceLocator -p 0 0 0 -n  $temp_loc_kongzhi;
        spaceLocator -p 0 0 0 -n  $temp_loc;
        setAttr -type float3 ($temp_loc+".translate") $temp_pos[0] $temp_pos[1] $temp_pos[2];
        string $loc_a_shape[]=`listRelatives -s $temp_loc`; 
        connectAttr -f ($loc_a_shape[0]+".worldPosition[0]") ($qvxianb_shape[0]+".controlPoints["+$i+"]");

        int $ex=`objExists $nearestPointOnCurve_A `;//查询这个物体是否纯在
         if($ex==0){createNode nearestPointOnCurve -n  $nearestPointOnCurve_A;}//创建曲线最近点节点
         connectAttr -force  ($qvxianb_Ashape[0]+".worldSpace[0]") ($nearestPointOnCurve_A+".inputCurve");
         float$loc_weizhgi[]=`getAttr ($temp_loc+".t")`;
         setAttr ($nearestPointOnCurve_A+".inPosition")  $loc_weizhgi[0] $loc_weizhgi[1] $loc_weizhgi[2];
         
         string$pointOnCurveInfo_A=$qvxian_nmiongziB+"pointOnCurveInfo_A"+$i;
         int $ex=`objExists $pointOnCurveInfo_A `;//查询这个物体是否纯在
         if($ex==0){ createNode "pointOnCurveInfo" -n$pointOnCurveInfo_A ;}//创建曲线信息节点
        float$parameter=`getAttr ($nearestPointOnCurve_A+".parameter")`;
        connectAttr -force ($qvxian_nmiongzi+".worldSpace[0]") ($pointOnCurveInfo_A+".inputCurve");
        setAttr ($pointOnCurveInfo_A+".parameter") $parameter;
        delete $nearestPointOnCurve_A;
        connectAttr -f ($pointOnCurveInfo_A+".position") ($temp_loc+".translate");
        parent $temp_loc  $loc_grp;
        

        }
  
        parent $qvxian_nmiongziB $qvxian_grp;
        parent $qvxian_nmiongzi $qvxian_grp;
      
      
 }
 //////////////////保存关节长度
 global proc zxb_baochun_bn_changdu_A_proc()
{
   string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
   string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
   
   zxb_zairufangfa_vsanniu_on_proc("zxb_changdu_proc");
   for($i=0;$i<size($bns);$i++)
       {
        string$bn=$bns[$i];
        string $andbn[]=`listRelatives -c  -type "joint" $bn`; 
        select -r $andbn;
        string$qqq[]= `ls -sl -type "joint"`;
        int$www=size($qqq);
        if($www>=2){error "关节命名重复";}
        setAttr -type float3 ($andbn[0]+".jointOrient") 0 0 0;
        float$temp_posx=`getAttr  ($andbn[0]+".translateX")`;
        int $ex=`objExists ($bn+".yuanshichangdu") `;
        if($ex==0)
        {
        select -r $bn;
        addAttr -ln "yuanshichangdu"  -at double  -dv $temp_posx -k 1  $bn;
        }

       }

}


global proc zxb_qiexianyuesdingweiqi_proc()
{
   string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
   string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
   string $qvxianss=`textFieldGrp -q -tx  zxb_qiexianqvxian `;
   string $qvxianAss=`textFieldGrp -q -tx  zxb_maonangqvxian `;
   string $qvxianAss_Shape[]=`listRelatives -s $qvxianAss`;
   
   
   string $mode=`textFieldGrp -q -tx  zxb_modee `;//mode
   string$buyidongzu="GlobalSetting";
   //zxb_ADD_kongzu_proc($loc_grp);
   zxb_zairufangfa_vsanniu_on_proc("zxb_qiexian_proc");
   for($i=0;$i<size($bns);$i++)
      {
       string$bn=$bns[$i];
       string$loc_A=$bn+"loc_pos_A"+$i;
       string$loc_B=$bn+"loc_B"+$i;
       spaceLocator -p 0 0 0 -n $loc_A;
      // setAttr ($loc_A+".visibility") 0; 
       //setAttr ($loc_B+".visibility") 0; 
       delete` parentConstraint $bn  $loc_A`;
       spaceLocator -p 0 0 0 -n $loc_B;
       delete` parentConstraint $bn  $loc_B`;
       string $fu_bn[]=`listRelatives -p $bn`;
       string$loc_grp=$fu_bn[0]+"_loc_grp";
       
       zxb_ADD_kongzu_proc($loc_grp);
       

       string$fujiedian[]=`listRelatives -p $loc_grp`; 
       int $ex=`objExists $fujiedian[0]`;
       if($ex==0){ setAttr ($loc_grp+".visibility") 0; setAttr -lock true ($loc_grp+".v");};

     
     
       delete `pointConstraint   $fu_bn[0] $loc_grp `;
       string $fu_bn_pa[]=`listRelatives -p $loc_grp`;
       int $ex=`objExists $fu_bn_pa[0] `;//查询这个物体是否纯在
       if( $ex==0){ parent $loc_grp $fu_bn[0];}
      
       parent  $loc_A  $loc_grp ;
       parent  $loc_B  $loc_grp ;
       
       string $yuesu[]=`listConnections -d 0 -s 1  ($bn+".tx")`;//列出链接属性  -d输入   -s输出  -p 列出属性
       string $maonang[]=`listConnections -d 0 -s 1  ($yuesu[0]+".target[0].targetTranslate")`;//列出链接属性  -d输入   -s输出  -p 列出属性
       pointConstraint -mo $maonang[0] $loc_A;
       pointConstraint -mo $maonang[0] $loc_B;
       
       select -cl  ;
       select -r $qvxianss ;
       select -add $loc_A;
       tangentConstraint -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject $loc_B;


      string $loc_Shape[]=`listRelatives -s $loc_B`;
      
       connectAttr -force ($loc_Shape[0]+".worldPosition") ($qvxianAss_Shape[0]+".controlPoints["+$i+"]");
      }
      
      
 }
 
 
 global proc zxb_niaolei_guanjiemubiaoyuesu_proc() 
{
   string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
   string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
   string $IKs=`textFieldGrp -q -tx   zxb_IKqvxian`;
   string $FXs=`textFieldGrp -q -tx   zxb_FXqvxian`;
   string $gensui_qvxians=`textFieldGrp -q -tx zxb_gensuiqvxian  `;
   
   string $gensui_qvxians_shape[]=`listRelatives -s $gensui_qvxians`;
   
   string $IKs_Shape[]=`listRelatives -s $IKs`;
   zxb_zairufangfa_vsanniu_on_proc("zxb_mubiao_loc_proc");
   string$zu="cibangbn_loc_mubiao_grp";
   zxb_ADD_kongzu_proc($zu);
   
   string$buyidongzu="GlobalSetting";
    string$fujiedian[]=`listRelatives -p $zu`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $zu $buyidongzu ;};  
    int$a=`getAttr  ($zu+".visibility")`;
    if($a==1)
      { setAttr ($zu+".visibility") 0;
        setAttr -lock true ($zu+".v");
       
       }
   
   
   
   for($i=0;$i<size($bns);$i++)
      {
       string$bn=$bns[$i];
       string$loc_A=$bn+"_loc_mubiao_"+$i;
       string$loc_B=$bn+"_loc_mubiao_temp_"+$i;
       spaceLocator -p 0 0 0 -n $loc_A ;
       spaceLocator -p 0 0 0 -n $loc_B;
       string $chi[]=`listRelatives -c -type "joint" $bn`;
       delete `parentConstraint   $chi[0] $loc_B`;
       
       string$nearestPointOnCurve_a="_nearestPointOnCurve_"+$loc_A+$bn+$i;
        int $ex=`objExists $nearestPointOnCurve_a `;
        if($ex==1){delete $nearestPointOnCurve_a;}
       createNode nearestPointOnCurve -n $nearestPointOnCurve_a;//创建曲线最近点节点
       connectAttr -force ($IKs_Shape[0]+".worldSpace")  ($nearestPointOnCurve_a+".inputCurve");
       connectAttr -force ($loc_B+".t")  ($nearestPointOnCurve_a+".inPosition");
       float$Param=`getAttr ($nearestPointOnCurve_a+".parameter")`;
       delete $loc_B  $nearestPointOnCurve_a;
       
         string$pointOnCurveInfo_a="_pointOnCurveInfo_"+$loc_A+$bn+$i;
        int $ex=`objExists $pointOnCurveInfo_a `;
        if($ex==1){delete $pointOnCurveInfo_a;}
        createNode "pointOnCurveInfo" -n $pointOnCurveInfo_a;//创建曲线信息节点
        connectAttr -force ($IKs_Shape[0]+".worldSpace")  ($pointOnCurveInfo_a+".inputCurve");
        setAttr ($pointOnCurveInfo_a+".parameter") $Param;
        connectAttr -force ($pointOnCurveInfo_a+".position") ($loc_A+".t");
        
        
        
        string$loc_AA=$bn+"loc_pos_A"+$i;
        string$loc_BB=$bn+"loc_B"+$i;
        select -r $loc_A;
        select -add $bn;
       aimConstraint -offset 0 0 0 -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject $loc_AA;
       parent $loc_A $zu;
      }
   string$zuB="cibangbn_IK_kongzhiqi_grp";
   zxb_ADD_kongzu_proc($zuB);
   
   
     string$fujiedian[]=`listRelatives -p $zuB`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $zuB $buyidongzu ;};   
   // setAttr ($zu+".visibility") 0;
    //setAttr -lock true ($zu+".v"); 
   
   select -r ($IKs+".cv[0:9999999]") ;
   string$cvss[]=`ls -sl -fl`;
   
   select -r ($FXs+".cv[0:9999999]") ;
   string$FX[]=`ls -sl -fl`;
   
   
   select -r ($gensui_qvxians+".cv[0:9999999]") ;
   string$gensui[]=`ls -sl -fl`;
   
    for($i=0;$i<size($cvss);$i++)
        {
         string$cv=$cvss[$i];
         string$Clus=$IKs+"cluster"+$i;
         select -r $cv;
         string$Clusters[]= `newCluster " -envelope 1"`;
         rename $Clusters[1] $Clus;
         string$kongzhiqi=$Clus+"_kongzhiqi_"+$i;
         string$komgzhiqi_grp=$kongzhiqi+"GRP";
         string$komgzhiqi_grpA=$kongzhiqi+"GRP_A";
         string$komgzhiqi_grpB=$kongzhiqi+"GRP_B";
         string$komgzhiqi_grpC=$kongzhiqi+"GRP_C";
         curve -d 1 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16  -n $kongzhiqi ; 
         group -n  $komgzhiqi_grp;
         group -n  $komgzhiqi_grpA;
         group -n  $komgzhiqi_grpB;
         group -n  $komgzhiqi_grpC;
         delete `parentConstraint $Clus  $komgzhiqi_grpC`;
         parent  $Clus $kongzhiqi;
         parent $komgzhiqi_grpC $zuB;
         string $kongzhiqi_shape[]=`listRelatives -s $kongzhiqi`;
         setAttr ($kongzhiqi_shape[0]+".overrideEnabled") 1;
         setAttr($kongzhiqi_shape[0]+".overrideColor") 13;
         
         
         string$cvA=$FX[$i];
         string$ClusA=$FXs+"cluster"+$i;
         select -r $cvA;
         string$Cls[]= `newCluster " -envelope 1"`;
         rename $Cls[1] $ClusA;
         
         string$kongzhiqiA=$ClusA+"_kongzhiqi_"+$i;
         string$komgzhiqiA_grp=$kongzhiqiA+"GRP";
         string$komgzhiqiA_grpA=$kongzhiqiA+"GRP_A";
         string$komgzhiqiA_grpB=$kongzhiqiA+"GRP_B";
         string$komgzhiqiA_grpC=$kongzhiqiA+"GRP_C";
         circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $kongzhiqiA ; 
         group -n  $komgzhiqiA_grp;
         group -n  $komgzhiqiA_grpA;
         group -n  $komgzhiqiA_grpB;
         group -n  $komgzhiqiA_grpC;
        
         delete `parentConstraint $ClusA $komgzhiqiA_grpC `;
         parent  $ClusA $kongzhiqiA;
         parent $komgzhiqiA_grpC  $kongzhiqi;
         
         
         string$gensui_cv=$gensui[$i];
         float $temp_pos[]=`xform -q -a -ws -t $gensui_cv`;
         
         string$nearestPointOnCurve_A=$gensui_qvxians+"_nearestPointOnCurve_"+$i;
        int $panduan_A=`objExists $nearestPointOnCurve_A`;//查询这个物体是否纯在
        if($panduan_A==1){delete $nearestPointOnCurve_A; }
        createNode nearestPointOnCurve -n  $nearestPointOnCurve_A;//创建曲线最近点节点
        connectAttr -force ($gensui_qvxians_shape[0]+".worldSpace[0]") ($nearestPointOnCurve_A+".inputCurve") ;
        connectAttr -force  ($komgzhiqi_grpC+".t") ($nearestPointOnCurve_A+".inPosition");
        float$palete=`getAttr   ($nearestPointOnCurve_A+".parameter")`;
        delete $nearestPointOnCurve_A;
        
        string$pointOnCurveInfo_A=$gensui_qvxians+"_pointOnCurveInfo_"+$i;
         int $panduan_A=`objExists $pointOnCurveInfo_A`;//查询这个物体是否纯在
         if($panduan_A==1){delete $pointOnCurveInfo_A; }
        createNode "pointOnCurveInfo" -n $pointOnCurveInfo_A;//创建曲线信息节点
        
        connectAttr -force ($gensui_qvxians_shape[0]+".worldSpace[0]") ($pointOnCurveInfo_A+".inputCurve");
        setAttr ($pointOnCurveInfo_A+".parameter") $palete;
        connectAttr -force ($pointOnCurveInfo_A+".position") ($komgzhiqi_grpC+".t");
        
         
         
         }
         
             
  
}

 global proc zxb_niaolei_chuangjiancijiguanjie_proc() 
{
   string $bn_ss=`textFieldGrp -q -tx  zxb_ganjie `;
   string$bns[]= stringToStringArray($bn_ss, " ");//关节
   string $shuliang_ss=`textFieldGrp -q -tx  zxb_bn_duanshu `;
   int$shuliang=$shuliang_ss;
   string$seqq="chibang_all_set";
   select -cl  ;
   int $ex=`objExists $seqq`;//查询这个物体是否纯在
    if($ex==0)
          {
              sets -n $seqq;
           
           }
           
           
    string $moduan_Fx_bn="";        
   for($i=0;$i<size($bns);$i++)
       {
        string$bn=$bns[$i];
        string $andbn[]=`listRelatives -c -type "joint" $bn`; 
        float$changdu= `getAttr ($bn+".yuanshichangdu")`;
        float$changdu_a=$changdu/$shuliang;
        string$bbn=$bn+"_ciji_"+$i;
        select -cl  ;
        joint -p 0 0 0 -n $bbn ;
        for($ii=1;$ii<$shuliang+1;$ii++)
            {
             string$bbbn=$bbn+"_SIK_"+$ii;
             joint -p 0 0 0 -n $bbbn ;
             setAttr ($bbbn+".translateX") $changdu_a;

             }
        delete `parentConstraint $bn  $bbn`;
        select -r  $bbn;
        makeIdentity -apply true -t 0 -r 1 -s 0 -n 0 -pn 1;
        parent $bbn  $bn;
        
        string$IKBNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_IK_");
        string$FKBNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_FK_");
        string$ROT_A_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_A_");
        string$ROT_B_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_B_");
        string$ROT_C_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_C_");
        string$sik_bnss=zxb_baocunguanjie_mingzi_proc($bbn,0);
        
         string$ik_bns[]= stringToStringArray($IKBNSS ," ");//关节 
         string$fk_bns[]= stringToStringArray($FKBNSS ," ");//关节 
         string$rot_A_bns[]= stringToStringArray($ROT_A_BNSS ," ");//关节 
         string$rot_B_bns[]= stringToStringArray($ROT_B_BNSS ," ");//关节 
         string$rot_C_bns[]= stringToStringArray($ROT_C_BNSS," ");//关节 
         string$sik_bns[]= stringToStringArray($sik_bnss," ");//关节 
         
         $moduan_Fx_bn+=$ik_bns[0]+" ";
         for($ii=0;$ii<size($fk_bns);$ii++)
             {
             string$temp_bn=$fk_bns[$ii];
             string$temp_qvxian=$temp_bn+"_FK_kongzhiq"+$ii;
              circle -c 0 0 0 -nr 1 0 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $temp_qvxian;
              delete `parentConstraint $temp_bn  $temp_qvxian`;
              string $temp_zi[]=`listRelatives -s  $temp_qvxian `; 
              select -r  $temp_zi[0];
              select -add $temp_bn;
               parent -r -s ;
               delete $temp_qvxian;
             }
       
       
         string $moduan_FK_bn="";
         
         
         for($ii=0;$ii<size($rot_A_bns);$ii++)
            {
             string$bna=$rot_A_bns[$ii];
             string$bnb=$rot_B_bns[$ii];
             string$bnc=$rot_C_bns[$ii];
             string$bnfk=$fk_bns[$ii];
             string$sik_bn=$sik_bns[$ii];
             string$bn_ik=$ik_bns[$ii];
             int$a=$ii+1;
             
             string$xiayige=$rot_A_bns[$a];
             parent $bnb  $bna;
             int$qq=size($rot_A_bns)-1;
             
             if($ii==$qq){$moduan_FK_bn+=$bnfk+" ";}
             
             if($ii<$qq){parent $xiayige  $bnb;}
             
             parent $bnc  $bnb;
             if($ii<$qq){parent $xiayige  $bnc;}
             parent  $bnfk  $bnc;
             if($ii<$qq){parent $xiayige  $bnfk;}
             parentConstraint -mo $bnc   $sik_bn;
             
             connectAttr -force  ($bn_ik+".t") ($bna+".t");
             connectAttr -force  ($bn_ik+".r") ($bna+".r");
             connectAttr -force  ($bn_ik+".s") ($bna+".s");
             }

        string$set_namen=$bn+"set"+$i;
        select -cl  ;
        select -r $sik_bns;
        int $ex=`objExists $set_namen`;//查询这个物体是否纯在
        if($ex==0)
          {
              sets -n $set_namen;
             // parent  $set_namen $seqq;
              sets -add $seqq $set_namen ;
           }
        
        
         string$moduan_FK_bns[]= stringToStringArray($moduan_FK_bn," ");//关节 
         
         for($ii=0;$ii<size($moduan_FK_bns);$ii++)
            {
                
              string$temp_fk=$moduan_FK_bns[$ii];
             zxb_ADD_shuxing_double_proc($temp_fk,"rotx");
             zxb_ADD_shuxing_double_proc($temp_fk,"roty");
             zxb_ADD_shuxing_double_proc($temp_fk,"rotz");
              for($t=0;$t<size($rot_B_bns);$t++)
                 {
                  string$temp_bbn=$rot_C_bns[$t];
                  connectAttr -force ($temp_fk+".rotx") ($temp_bbn+".rx");
                  connectAttr -force ($temp_fk+".roty") ($temp_bbn+".ry");
                  connectAttr -force ($temp_fk+".rotz") ($temp_bbn+".rz");
                  }
                  
                  
             zxb_ADD_shuxing_double_proc($temp_fk,"root_rotx");
             zxb_ADD_shuxing_double_proc($temp_fk,"root_roty");
             zxb_ADD_shuxing_double_proc($temp_fk,"root_rotz");
             
             connectAttr -force ($temp_fk+".root_rotx") ($rot_B_bns[0]+".rx");    
             connectAttr -force ($temp_fk+".root_roty") ($rot_B_bns[0]+".ry"); 
             connectAttr -force ($temp_fk+".root_rotz") ($rot_B_bns[0]+".rz"); 
             }
             
             
             
             
        }
   
   
   textFieldGrp -e -tx $moduan_Fx_bn zxb_FXqvxian_IKbn ;
   
  zxb_zairufangfa_vsanniu_on_proc("zxb_cijiguanjie_proc");
 }
 
 
 
   global proc zxb_niaolei_ikkongzhiqi_proc() 
{
   string $bn_ss=`textFieldGrp -q -tx  zxb_ganjie `;
   string $bns[]= stringToStringArray($bn_ss, " ");//关节
   string $FX_SSS=`textFieldGrp -q -tx  zxb_FXqvxian `;
   string $FX_SSS_shape[]=`listRelatives -s  $FX_SSS `; 
   string $FX_bnsss=`textFieldGrp -q -tx zxb_FXqvxian_IKbn `;
   string $FX_bns[]= stringToStringArray($FX_bnsss, " ");//关节
   string$buyidongzu="GlobalSetting";
   int$ex=`objExists "niaolei_FX"`;
   string$qvxian_FXA="";
   string$qvxian_FXB="niaolei_FX";
   if($ex==0)
     {
    $qvxian_FXA=`curve -d 1 -p 3.236364 0 0 -p 3.236364 5.423471 0 -p 7.417025 5.423471 0 -p 7.417025 6.67438 0 -p 3.236364 6.67438 0 -p 3.236364 10.677522 0 -p 8.216033 10.677522 0 -p 8.216033 11.94463 0 -p 1.541488 11.94463 0 -p 1.541488 0 0 -p 3.236364 0 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 `;
    $qvxian_FXB= `curve -d 1 -p 10.736134 -0.112173 0 -p 13.780147 4.437122 0 -p 16.690358 -0.0452719 0 -p 18.898105 0.0216295 0 -p 15.051274 6.109657 0 -p 18.764302 11.829727 0 -p 17.125217 11.930079 0 -p 14.148105 7.447685 0 -p 11.304796 11.762825 0 -p 9.297754 11.96353 0 -p 12.94388 6.076206 0 -p 9.030148 -0.0452719 0 -p 10.736134 -0.0452719 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n "niaolei_FX"` ;
    string$fxs[]=`listRelatives -s $qvxian_FXA`; 
    select -r $fxs[0];
    select -add $qvxian_FXB;
    parent -r -s ;
    delete  $qvxian_FXA;

   int$ex=`objExists ($qvxian_FXB+".kaiguan")`;    ///判断
   select -r $qvxian_FXB;
   if($ex==0)
     {
    addAttr -ln "kaiguan"  -at bool  -k 1 $qvxian_FXB;
    setAttr ($qvxian_FXB+".kaiguan") 1;
     }
     
   int$ex=`objExists ($qvxian_FXB+".startCurve")`;    ///判断
   select -r $qvxian_FXB;
   if($ex==0)
   {  
    addAttr -ln "startCurve"  -at double  -min 0 -max 1 -dv 0.1  -k 1 $qvxian_FXB;
    //setAttr ($qvxian_FXB+".startCurve") 1;
    }
    
   int$ex=`objExists ($qvxian_FXB+".motionDrag")`;    ///判断
   
   select -r $qvxian_FXB;
   if($ex==0)
   {  
    addAttr -ln "motionDrag"  -at double  -min 0 -max 1 -dv 0.5  -k 1 $qvxian_FXB;
    //setAttr ($qvxian_FXB+".startCurve") 1;
    }
   
   select -r niaolei_FX ;
   CenterPivot;
   makeIdentity -apply true -t 0 -r 1 -s 0 -n 0 -pn 1;
   numericalInputChangeCommand abs;
   channelBoxCommand -freezeAll;
   }
   
   
   
   string$lk_loc_FX_grp="FX_loc"+"_grp";
   zxb_ADD_kongzu_proc($lk_loc_FX_grp);
   
    string$fujiedian[]=`listRelatives -p $lk_loc_FX_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $lk_loc_FX_grp $buyidongzu ;};   
    int$ww=`getAttr ($lk_loc_FX_grp+".v")`;
    if($ww==1)
      {
       setAttr ($lk_loc_FX_grp+".visibility") 0;
       setAttr -lock true ($lk_loc_FX_grp+".v"); 
      }
   for($i=0;$i<size($bns);$i++)
      {
      string$temp_bn=$bns[$i];
      string $bn_zi[]=`listRelatives -c -type "joint" $temp_bn  `; 
      string$lk_loc_A=$temp_bn+"_ik_loc"+$i;
      string$lk_loc_A_grp=$lk_loc_A+"_grp";
      spaceLocator -p 0 0 0 -n$lk_loc_A;
      
      
      group -n $lk_loc_A_grp ;
      delete `parentConstraint $bn_zi[0]  $lk_loc_A_grp`;
      parent $lk_loc_A_grp $temp_bn;
      
       setAttr ($lk_loc_A+".visibility") 0; setAttr -lock true ($lk_loc_A+".v"); 
      string$lk_loc_B=$temp_bn+"_ik_loc_B"+$i;
      
      spaceLocator -p 0 0 0 -n  $lk_loc_B;
      delete `parentConstraint $bn_zi[0] $lk_loc_B` ;
      
       setAttr ($lk_loc_B+".visibility") 0; setAttr -lock true ($lk_loc_B+".v");
       string$nearestPointOnCurve_A=$temp_bn+"_nearestPointOnCurve_"+$i;
        int $panduan_A=`objExists $nearestPointOnCurve_A`;//查询这个物体是否纯在
        if($panduan_A==1){delete $nearestPointOnCurve_A; }
        createNode nearestPointOnCurve -n  $nearestPointOnCurve_A;//创建曲线最近点节点
        connectAttr -force ($FX_SSS_shape[0]+".worldSpace[0]") ($nearestPointOnCurve_A+".inputCurve") ;
        connectAttr -force ($lk_loc_B+".t") ($nearestPointOnCurve_A+".inPosition");
        float$palete=`getAttr   ($nearestPointOnCurve_A+".parameter")`;
        delete $nearestPointOnCurve_A;
        
         string$pointOnCurveInfo_A=$temp_bn+"_pointOnCurveInfo_"+$i;
         int $panduan_A=`objExists $pointOnCurveInfo_A`;//查询这个物体是否纯在
         if($panduan_A==1){delete $pointOnCurveInfo_A; }
        createNode "pointOnCurveInfo" -n $pointOnCurveInfo_A;//创建曲线信息节点
        
        connectAttr -force ($FX_SSS_shape[0]+".worldSpace[0]") ($pointOnCurveInfo_A+".inputCurve");
        setAttr ($pointOnCurveInfo_A+".parameter") $palete;
        connectAttr -force ($pointOnCurveInfo_A+".position") ($lk_loc_B+".t");
        pointConstraint $lk_loc_B  $lk_loc_A ;
        parent $lk_loc_B  $lk_loc_FX_grp;
        
        
        
        
       
      }
      
     
     
     string$chibang_zongzu_grp="chibang_zongzu_grp";
     
     zxb_ADD_kongzu_proc($chibang_zongzu_grp);
     
     

    //setAttr ($lk_loc_FX_grp+".visibility") 0;
    //setAttr -lock true ($lk_loc_FX_grp+".v"); 
     
     ///////////////动力学组
     string$chiabng_donglixueqvxian_grp="chibang_donglixueqvxian_grp";
     
     zxb_ADD_kongzu_proc($chiabng_donglixueqvxian_grp);
     
    string$fujiedian[]=`listRelatives -p $chiabng_donglixueqvxian_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $chiabng_donglixueqvxian_grp $chibang_zongzu_grp;};   
       ///////////////毛囊组
     string$chiabang_maonang_grp="chibang_maonang_grp";
      
     zxb_ADD_kongzu_proc($chiabang_maonang_grp);
    string$fujiedian[]=`listRelatives -p $chiabang_maonang_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $chiabang_maonang_grp $chibang_zongzu_grp;};   
             ///////////////hairSystem组
     string$chibang_hairSystem_grp="chibang_hairSystem_grp";
      zxb_ADD_kongzu_proc($chibang_hairSystem_grp);
      
    string$fujiedian[]=`listRelatives -p $chibang_hairSystem_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $chibang_hairSystem_grp $chibang_zongzu_grp;};  
     
 
     
      
      
                         ///////////////IK控制柄组
      string$chibang_IKkonghziqbing_grp="chibang_IKkonghziqbing_grp";
      zxb_ADD_kongzu_proc($chibang_IKkonghziqbing_grp);
      
     string$fujiedian[]=`listRelatives -p $chibang_IKkonghziqbing_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $chibang_IKkonghziqbing_grp $buyidongzu; 
    setAttr ($chibang_IKkonghziqbing_grp+".visibility") 0;
    setAttr -lock true ($chibang_IKkonghziqbing_grp+".v"); };
     
     
     
     
       
      string$cluste_grp="chibang_cluste_grp";
      zxb_ADD_kongzu_proc($cluste_grp);
      
     string$fujiedian[]=`listRelatives -p $cluste_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $cluste_grp $chibang_zongzu_grp;};
     
     string$zu_c="";
      for($jj=0;$jj<size($FX_bns);$jj++)
       {
           
        string $bbb=$FX_bns[$jj];
        string$chibang_bn=$bns[$jj];
        string$lk_loc_A=$chibang_bn+"_ik_loc"+$jj;
        string$mingzi="curve -d 3 ";
        string$qvxianmingzi=$bbb+"_IK_donglixue_"+$jj;
        string$mingzi_bnn=$FX_bns[$jj];
        string$temp_bnss=zxb_baocunguanjie_mingzi_proc($mingzi_bnn,0);
        string$temp_bns[]= stringToStringArray($temp_bnss, " ");//关节
        for($h=0;$h<size($temp_bns);$h++)
           {
               
            string$bbbn=$temp_bns[$h];
            spaceLocator -p 0 0 0 -n "temp_loc";
            delete `parentConstraint  $bbbn "temp_loc"`;
            float $temp[]=`xform -q -a -ws -t "temp_loc"`;
            delete "temp_loc";
             $mingzi+="-p "+$temp[0]+" "+$temp[1]+" "+$temp[2]+" ";
           }
         $mingzi+=" -n "+ $qvxianmingzi;
          eval($mingzi);
          parent  $qvxianmingzi $chiabng_donglixueqvxian_grp;
          
           select -r  $qvxianmingzi;
           makeCurvesDynamic 2 { "1", "0", "1", "1", "0"};
           string $maonang[]=`listRelatives -p $qvxianmingzi`; 
           string$follicle_a=$maonang[0];
           setAttr ($follicle_a+".pointLock") 1;
           string $follicle_a_shape[]=`listRelatives -s $follicle_a`; 
           string $follicle_weiyi[]=`listRelatives -p $follicle_a_shape[0]`;  
           
            setAttr ($follicle_weiyi[0]+".visibility") 0; setAttr -lock true ($follicle_weiyi[0]+".v"); 
           parent $follicle_weiyi[0] $chiabang_maonang_grp ;
           
           string $outCurve[]=`listConnections -d 1 -s 0 -p 1 ($follicle_a_shape[0]+".outCurve")`;//列出链接属性  -d输入   -s输出  -p 列出属性 
           string$donglixue=$outCurve[0];
           string $mingzis[];
           clear $mingzis;//清除数组
           int $nemt=`tokenize $donglixue "."$mingzis`;//分离字符串存到变量
           string$donglixuess=$mingzis[0];
           string $dong[]=`listRelatives -p $donglixuess`; 
           string $dong_weiyi[]=`listRelatives -p $dong[0]`;  
           
            setAttr ($dong_weiyi[0]+".visibility") 0; setAttr -lock true ($dong_weiyi[0]+".v"); 
           parent  $dong_weiyi[0]  $chiabng_donglixueqvxian_grp ;
 
           string $hairSystemShape[]=`listConnections -d 0 -s 1 -p 1 ($follicle_a_shape[0]+".currentPosition")`;//列出链接属性  -d输入   -s输出  -p 列出属性 
           string $mingzisA[];
           clear $mingzisA;//清除数组 
           int $nemt=`tokenize $hairSystemShape[0] "." $mingzisA`;//分离字符串存到变量
           string $hairSystem=$mingzisA[0];
           
           connectAttr -f ($qvxian_FXB+".startCurve") ($hairSystem+".startCurveAttract");
           connectAttr -f ($qvxian_FXB+".motionDrag") ($hairSystem+".motionDrag");
            
           string $hairSystem_weiyi[]=`listRelatives -p $hairSystem`;  
           
            setAttr ($hairSystem_weiyi[0]+".visibility") 0; setAttr -lock true ($hairSystem_weiyi[0]+".v"); 
           parent $hairSystem_weiyi[0]  $chibang_hairSystem_grp ;
           
           select -r $qvxianmingzi;
           select -add $dong[0];
           string$bss[]=`blendShape`;
           
           
           string$fanxiang=$bbb+"_reverse";
           int $ex=`objExists $fanxiang`;
           if($ex==0)
             {
                  shadingNode -asUtility reverse -n $fanxiang;
                  connectAttr -f "niaolei_FX.kaiguan" ($fanxiang+".inputX");
                  // connectAttr -f "niaolei_FX.kaiguan" ($fanxiang+".inputX");
                  connectAttr -f  ($fanxiang+".outputX") ($bss[0]+"."+$qvxianmingzi);
             }//创建返向节点}
          
           string$kaishi=$temp_bns[0];
           int$jiaoboa=size($temp_bns)-1;
           string$jiesu=$temp_bns[$jiaoboa];
           
           select -r $kaishi ;
           select -add $jiesu ;
           select -add $dong[0] ;
           string$ikikHandle[]= `ikHandle -sol ikSplineSolver -ccv false -pcv false`;
           parent $ikikHandle[0]  $chibang_IKkonghziqbing_grp;
           
           
         string$xunhuan_loc="";
          string$kongzhizu="";
          string$moduan_kongzhiqi="";
          select -r($qvxianmingzi+".cv[0:999999]") ;
          string $cvs[]=`ls -sl -fl`;
         
          for($jjj=0;$jjj<size($cvs);$jjj++)
             {
             string$cv=$cvs[$jjj];
             string$cluster=$bbb+"_cluster";
             string$temp_loc=$bbb+"loc_FX_"+$jjj;
             
             if($jjj<=1)
               {
                   
               select -r $cv;
               string$clusterss[]=`newCluster " -envelope 1" ` ;
               spaceLocator -p 0 0 0 -n $temp_loc;
               delete`parentConstraint  $clusterss[1]  $temp_loc`;
               parent  $clusterss[1]  $temp_loc;
               parent  $temp_loc $chibang_bn;
               setAttr ($clusterss[1]+".visibility") 0;
               setAttr ($temp_loc+".visibility") 0; setAttr -lock true ($temp_loc+".v");
               if($jjj==1)
                 {$xunhuan_loc=$temp_loc;}
                 
                }else
                   {
                       
                    select -r $cv;
                    string$clusterss[]=`newCluster " -envelope 1" ` ;
                    parent $clusterss[1]$cluste_grp;
                    setAttr ($clusterss[1]+".visibility") 0;
                    curve -d 1 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16   -n ($clusterss[1]+"con"+$jjj) ;; 
                   
                    group -n ($clusterss[1]+"con"+$jjj+"grp_a");
                    group -n ($clusterss[1]+"con"+$jjj+"grp_b");
                    group -n ($clusterss[1]+"con"+$jjj+"grp_c");
                    select -r  ($clusterss[1]+"con"+$jjj+".cv[0:159999]" );
                    move -r -os -wd 0 0 -2 ;
                     
                    string $kongzhiqi_shape[]=`listRelatives -s ($clusterss[1]+"con"+$jjj)`;
                    setAttr ($kongzhiqi_shape[0]+".overrideEnabled") 1;
                   setAttr($kongzhiqi_shape[0]+".overrideColor") 17;
                   
                    $kongzhizu+=($clusterss[1]+"con"+$jjj+" ");
                    int$ff=size($cvs)-1;
                    
                    delete`parentConstraint $clusterss[1]($clusterss[1]+"con"+$jjj+"grp_c")`; 
                    if($jjj==$ff)
                      {
                          $moduan_kongzhiqi=($clusterss[1]+"con"+$jjj); 
                          $zu_c=($clusterss[1]+"con"+$jjj+"grp_c");
                     
                       }
                    
                    string$loc_A=$chibang_bn+"loc_pos_A"+$jj;
                    select -r $chibang_bn;
                    select -add ($clusterss[1]+"con"+$jjj+"grp_c");
                    
                    aimConstraint -offset 0 0 0 -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject $loc_A;
                    
                    
                    parent  $clusterss[1] ($clusterss[1]+"con"+$jjj);
                    parent ($clusterss[1]+"con"+$jjj+"grp_c") $cluste_grp;
                    if($jjj<$ff)
                       {
                         setAttr ($clusterss[1]+"con"+$jjj+".visibility") 0;
                         setAttr -lock true ($clusterss[1]+"con"+$jjj+".v");
                         }
                    }
           
           }
           string $cu_zus[]= stringToStringArray($kongzhizu, " ");//关节
          print $kongzhizu;
           
          for($v=0;$v<(size($cu_zus)-1);$v++)
              {
                  
                  string$temp_zu=$cu_zus[$v];
                  select -r $xunhuan_loc;
                  select -add  $moduan_kongzhiqi;
                  select -add  $temp_zu;
                  string$yuesu[]=`pointConstraint -mo `;
                  if($v==0)
                     {
                      setAttr  ($yuesu[0]+"."+$xunhuan_loc+"W0") 0.7;
                      setAttr  ($yuesu[0]+"."+$moduan_kongzhiqi+"W1") 0.3;
                       int $ex=`objExists ($yuesu[0]+".offsetX")`;
                      int $ex=`objExists ($yuesu[0]+".offsetX")`;
                      if($ex==1)
                        { 
                        setAttr($yuesu[0]+".offsetX") 0 ;
                        setAttr($yuesu[0]+".offsetY") 0 ;
                        setAttr($yuesu[0]+".offsetZ") 0 ;
                        }
                      }
                      
                   if($v==1)
                     {
                      setAttr  ($yuesu[0]+"."+$xunhuan_loc+"W0") 0.4;
                      setAttr  ($yuesu[0]+"."+$moduan_kongzhiqi+"W1") 0.6;
                      int $ex=`objExists ($yuesu[0]+".offsetX")`;
                      if($ex==1)
                        { 
                        setAttr($yuesu[0]+".offsetX") 0 ;
                        setAttr($yuesu[0]+".offsetY") 0 ;
                        setAttr($yuesu[0]+".offsetZ") 0 ;
                        }
                      }
                  
               }
               
     
       string$loc_temp_weizhi=$lk_loc_A+"_ik_ts";               
       spaceLocator -p 0 0 0  -n $loc_temp_weizhi;                
       delete`parentConstraint $zu_c  $loc_temp_weizhi`;
       parent $loc_temp_weizhi $lk_loc_A;
       pointConstraint -mo $loc_temp_weizhi  $zu_c;
              
   string$fujiedian[]=`listRelatives -p $chibang_zongzu_grp`; 
    int $ex=`objExists $fujiedian[0]`;
    if($ex==0){parent $chibang_zongzu_grp $buyidongzu ;};         
          
          
   
   setDrivenKeyframe -itt "linear" -ott "spline" -v 1 -dv 0 -cd ("niaolei_FX"+".kaiguan") ($hairSystem+".simulationMethod");  
   setDrivenKeyframe -itt "linear" -ott "spline" -v 3 -dv 1 -cd ("niaolei_FX"+".kaiguan") ($hairSystem+".simulationMethod");  
     
     }
 zxb_zairufangfa_vsanniu_on_proc ("zxb_IK_kongzhiqi_proc");     
 }
 
 
 global proc zxb_niaolei_donglixue_proc() 
  {
      
 string $kongzhiqi_ss=`textFieldGrp -q -tx   zxb_jiesuankongzhiqi`;
 string $kongzhiqiA_ss=`textFieldGrp -q -tx  zxb_jiesuankongzhiqi_add `;
 string $kongzhiqibb_ss="";
 $kongzhiqibb_ss=$kongzhiqi_ss+$kongzhiqiA_ss;
 string $kongzhiqi_s[]= stringToStringArray($kongzhiqibb_ss, " ");//关节    
 string $jiesian_ss=`textFieldGrp -q -tx  zxb_alljiesuanqi `;     
 string $jiesian_s[]= stringToStringArray($jiesian_ss," ");//关节   
 select -r $jiesian_s;
 string $sel[]=`ls -sl`;
 string $jiesuanqi[]=$jiesian_s;
 string $kongzhiqi[]=$kongzhiqi_s;
 string $nemne="";

for ($ii=0;$ii<size($sel);$ii++)
{
    string $obj=$sel[$ii];
    string $yype_N=`nodeType $obj`;
    if($yype_N=="nucleus")
    {
        $nemne=$obj;
        continue;
     }
     
    //if($yype_N=="transform"){}
    string $shepp[]=`listRelatives -s $obj`;
    int $panduan=`objExists $shepp[0]`;//查询这个物体是否纯在
    if($panduan==1)
    {
      $yype=`nodeType $shepp[0]`;
      if($yype=="nurbsCurve")
      {
          $size=size($kongzhiqi);
          $kongzhiqi[$size]=$obj;
      }else
           {
            $size=`objExists ($obj+".currentTime")`;
            if($size==1)
               {
              $size=size($jiesuanqi);
              $jiesuanqi[$size]=$obj;
                }
            }
    }
    
}
//print $nemne;
string $z[]=`listConnections -d 0 -s 1 ($nemne+".currentTime")`;
if($z[0]=="time1"){disconnectAttr time1.outTime ($nemne+".currentTime");}



//select -r $kongzhiqi;
//print $nemne;
string$kaiguan="niaolei_FX";
int$ex=`objExists $kaiguan`;
if($ex==1)
{

int$ex=`objExists ($kaiguan+".kaishi")`;
if($ex==0){addAttr -ln "kaishi"  -at long  -dv 1  -k 1 $kaiguan;}

int$ex=`objExists ($kaiguan+".zhuangtai")`;
if($ex==0){addAttr -ln "zhuangtai"  -at "enum" -en "jiaohu:zidong:" -k 1 $kaiguan;}

int$ex=`objExists ($kaiguan+".shijian")`;
if($ex==0){addAttr -ln "shijian"  -at double  -dv 1  -k 1 $kaiguan;}


setAttr -keyable false -channelBox true ($kaiguan+".kaishi");
setAttr -keyable false -channelBox true ($kaiguan+".zhuangtai");
setAttr -keyable false -channelBox true ($kaiguan+".shijian");

}




string  $biaodashi=" float $aa=0;\n";
string  $weiyixuanzhuan[]={"tx","ty","tz","rx","ry","rz"};
for ($y=0;$y<size($kongzhiqi);$y++)
{
	for ($i=0;$i<size($weiyixuanzhuan);$i++)
	{
	$biaodashi+=("$aa="+$kongzhiqi[$y]+"."+$weiyixuanzhuan[$i]+";\n");
	}

}



 $biaodashi+="float $shijian=time1.outTime;\n";
 $biaodashi+="if("+$kaiguan+".kaishi>=frame)\n";
 $biaodashi+="{"+$kaiguan+".shijian=$shijian;}\n";
 $biaodashi+="else{"+$kaiguan+".shijian+=1;}\n";
 $biaodashi+="if("+$kaiguan+".zhuangtai==0)\n";
 $biaodashi+="{"+$nemne+".currentTime="+$kaiguan+".shijian;}\n";
 $biaodashi+="else{"+$nemne+".currentTime=$shijian;}\n";
 $biaodashi+=$nemne+".startFrame="+$kaiguan+".kaishi;\n";
 for($iii=0;$iii<size($jiesuanqi);$iii++)
 {
     $biaodashi+=$jiesuanqi[$iii]+"."+"startFrame="+$kaiguan+".kaishi;\n";
     $biaodashi+=$jiesuanqi[$iii]+"."+"currentTime="+$nemne+".currentTime;\n";
     
     string $zz[]=`listConnections -d 0 -s 1 ($jiesuanqi[$iii]+".currentTime")`;
     if($zz[0]=="time1"){disconnectAttr time1.outTime ($jiesuanqi[$iii]+".currentTime");}

     
      string $zzz[]=`listConnections -d 0 -s 1 ($jiesuanqi[$iii]+".startFrame")`;
     if($zzz[0]==$nemne){disconnectAttr ($nemne+".startFrame") ($jiesuanqi[$iii]+".startFrame");}
     
 }



print $biaodashi;	
  }
  
  
global proc zxb_piliangwuti_obj_proc() 
 {
  string$mode[]=`ls -sl `;
string$kongzhiqi="kongzhiqi_grp";
string$bn_grp="bn_grp";
 int$ex=`objExists $kongzhiqi`;    ///判断
if($ex==0){ group -em -n $kongzhiqi;}
 int$ex=`objExists $bn_grp`;    ///判断
if($ex==0){ group -em -n $bn_grp;}
for ($i=0;$i<size($mode);$i++)
    {
       string$temp= $mode[$i];
       
       string$bn_name=$temp+"_bn"+$i;
       string$bn_namekongzhiqi=$temp+"_kongzhiqi"+$i;
       string$bn_namekongzhiqi_grpA=$temp+"_kongzhiqi_grpA"+$i;
        string$bn_namekongzhiqi_grpB=$temp+"_kongzhiqi_grpB"+$i;
        string$bn_namekongzhiqi_grpC=$temp+"_kongzhiqi_grpC"+$i;
         spaceLocator -p 0 0 0 -n "temploc";
        delete `parentConstraint  $temp "temploc"`;
        float $trs[]=`xform -q -ws -t "temploc"`;//查询世界坐标的变量位移
        select -cl  ;
       joint  -p $trs[0] $trs[1] $trs[2] -n $bn_name;
       circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $bn_namekongzhiqi;
       group -n $bn_namekongzhiqi_grpA;
       group -n $bn_namekongzhiqi_grpB;
       group -n $bn_namekongzhiqi_grpC;
       delete `parentConstraint $bn_name $bn_namekongzhiqi_grpC ` ;//父子约束
       parentConstraint $bn_namekongzhiqi  $bn_name;
       
       select -r   $bn_name;
       select -add $temp; 
       newSkinCluster "-toSelectedBones -mi 1 -omi true -dr 6 -rui true";   //    skinCluster;   //蒙皮
         delete "temploc";
          parent  $bn_name $bn_grp;
          parent  $bn_namekongzhiqi_grpC $kongzhiqi;
    }
  }
  
  
  //////////////////////////////蛇的绑定///////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////
  
  
  
 
 
  global proc xiao_she_proc_columnLayout() 
{
if(`window -ex zxb_sheWin_columnLayout`) deleteUI zxb_sheWin_columnLayout; 

window -t "蛇" zxb_sheWin_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
 
 
textFieldGrp  -cw2 100 300 -l "脊椎关节" -tx "关节" -ed 0  zxb_ganjie;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"zxb_ganjie"+"\")") ;

textFieldGrp  -cw2 100 300 -l "头部关节" -tx "关节" -ed 0  UI_zxb_head_bn;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_zxb_head_bn"+"\")") ;

textFieldGrp  -cw2 100 300 -l "下巴关节" -tx "关节" -ed 0  UI_zxb_jaw_bn;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_zxb_jaw_bn"+"\")") ;

textFieldGrp  -cw2 100 130 -l "定位器" -tx "定位器" -ed 0  UI_zxb_loc;
button -l "载入" -c ("zxb_zairufangfa_A_proc(\""+"UI_zxb_loc"+"\")") ;
textFieldGrp  -cw2 100 130 -l "曲线长度" -tx "50" -ed 1  UI_zxb_changdu;
textFieldGrp  -cw2 100 130 -l "控制器大小" -tx "5" -ed 1  UI_zxb_changdu_kongzhiqi;


setParent ..; 

button -l "创建" -c "zxb_chibang_proc_maonang" ;
showWindow zxb_sheWin_columnLayout; 
}
 


global proc zxb_chibang_proc_maonang()
{
      string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
      //string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
      string $changdu_A=`textFieldGrp -q -tx  UI_zxb_changdu `;
      string $changdu_B=`textFieldGrp -q -tx  UI_zxb_changdu_kongzhiqi `;
      
      float$chang_a=$changdu_A;
      float$chang_b=$changdu_B;

      
      string$jizui_bn=zxb_baocunguanjie_mingzi_proc($xiaba_bn,0);
      string$bns[]= stringToStringArray($jizui_bn, " ");//关节
      
      string $head_bnss=`textFieldGrp -q -tx  UI_zxb_head_bn `; 
      string$head_bns[]= stringToStringArray($head_bnss, " ");//关节      
      string $jaw_bnss=`textFieldGrp -q -tx   UI_zxb_jaw_bn `;
      string$jaw_bns[]= stringToStringArray($jaw_bnss, " ");//关节
      string $loc=`textFieldGrp -q -tx   UI_zxb_loc `;//mode

string $Globalsetting="Globalsetting";
zxb_ADD_kongzu_proc($Globalsetting); 
string$wave_loc_AAAA="wave_loc_AAAA";
string$wave_loc_BBBB="wave_loc_BBBB";
spaceLocator -p 0 0 0 -n $wave_loc_AAAA;
spaceLocator -p 0 0 0 -n $wave_loc_BBBB;


setAttr ($wave_loc_BBBB+".visibility") 0;
setAttr -lock true ($wave_loc_BBBB+".v");
string$wave_loc_AAAA_grp="wave_loc_AAAA_grp";
zxb_ADD_kongzu_proc($wave_loc_AAAA_grp); 

parent $wave_loc_AAAA$wave_loc_AAAA_grp;
parent $wave_loc_BBBB $wave_loc_AAAA_grp;
parent $wave_loc_AAAA_grp $Globalsetting;
string$wave_loc_FK_grp="wave_loc_FK_grp";
zxb_ADD_kongzu_proc($wave_loc_FK_grp); 
parent $wave_loc_FK_grp $Globalsetting;
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r ($chang_b*10) -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n "Main";       
group -n "Curves"; 
string$loc_A="loc_A";
spaceLocator -p 0 0 0 -n $loc_A;
parent$loc_A "Main";
delete` parentConstraint $loc  $loc_A`;
parentConstraint $loc_A $loc ;//父子约束
scaleConstraint  $loc_A $loc ;//缩放约束
setAttr ($loc_A+".visibility") 0;


addAttr -ln "Paths"  -at double  -min 0 -max 100 -dv 0 -k 1 "Main";//路径属性
   
addAttr -ln "sin_Attr"  -at bool  -k 1 "Main";//尾巴属性
setAttr -lock true "Main.sin_Attr";
addAttr -ln "speed"  -at double  -min 0 -max 10 -dv 2 -k 1 "Main";
addAttr -ln "Amplitude"  -at double  -min 0 -max 100 -dv 2 -k 1 "Main";
addAttr -ln "offset"  -at double   -dv 0 -k 1 "Main";
addAttr -ln "delay"  -at double  -min 0 -dv 0.5 -k 1 "Main";
setAttr -keyable false -channelBox true "Main.delay";
addAttr -ln "decrease"  -at double   -dv 0 -k 1 "Main";


addAttr -ln "Rot_Attr"  -at bool  -k 1 "Main";//旋转属性
setAttr -lock true "Main.Rot_Attr";
addAttr -ln "Rot_x"  -at double   -dv 0 -k 1 "Main";
addAttr -ln "Rot_y"  -at double   -dv 0 -k 1 "Main";
addAttr -ln "Rot_z"  -at double   -dv 0 -k 1 "Main";

         
addAttr -ln "Scale_Attr"  -at bool  -k 1 "Main";//缩放属性
setAttr -lock true "Main.Scale_Attr";
addAttr -ln "Scale"  -at double  -min 0  -dv 0 -k 1 "Main";
addAttr -ln "Scalespeed"  -at double  -min 0 -max 10 -dv 2 -k 1 "Main";
addAttr -ln "ScalesAmplitude"  -at double  -min 0 -max 100 -dv 2 -k 1 "Main";
//addAttr -ln "Scalesoffset"  -at double  -min 0 -dv 0 -k 1 "Main";
addAttr -ln "Scaledelay"  -at double  -min 0 -dv 0.5 -k 1 "Main";
setAttr -keyable false -channelBox true "Main.Scaledelay";


    

addAttr -ln "Curlytail_Attr"  -at bool  -k 1 "Main";//尾巴卷曲属性
setAttr -lock true "Main.Curlytail_Attr";        
addAttr -ln "Curlytail"  -at double   -dv 0 -k 1 "Main";
addAttr -ln "RotationAngle"  -at double   -dv 90 -k 1 "Main";
addAttr -ln "range"  -at double   -dv 0.5 -k 1 "Main";



addAttr -ln "bodyrange_Attr"  -at bool  -k 1 "Main";//头部卷曲属性
setAttr -lock true "Main.bodyrange_Attr";   
addAttr -ln "bodyrange"  -at double   -dv 0 -k 1 "Main";
addAttr -ln "bodyRotationAngle"  -at double  -min 0 -dv 90 -k 1 "Main";
addAttr -ln "bodyattenuation"  -at double  -min 0 -max 1 -dv 1 -k 1 "Main";
setAttr -keyable false -channelBox true "Main.bodyattenuation";

addAttr -ln "twisty_Attr"  -at bool  -k 1 "Main";//扭曲
addAttr -ln "body_twisty"  -at double  -k 1 "Main";



addAttr -ln "show_Attr"  -at bool  -k 1 "Main";//控制器属性显示
setAttr -lock true "Main.sin_Attr";
addAttr -ln "show_FK"  -at bool -dv 1 -k 1 "Main";
addAttr -ln "show_IK"  -at bool -dv 1 -k 1 "Main";
addAttr -ln "show_IK_secondary"  -at bool -dv 0 -k 1 "Main";

addAttr -ln "stretch_Attr"  -at bool  -k 1 "Main";//IK拉伸
setAttr -lock true "Main.stretch_Attr";
addAttr -ln "stretch"  -at double  -min 1 -max 10 -dv 2 -k 1 "Main";
addAttr -ln "shorten"  -at double  -min 0.1 -max 1 -dv 0.5 -k 1 "Main";


string$SIK_jawss=zxb_chongxingmingming_bn_mingzi_proc( $jaw_bnss,"_jaw_SIK_");
string$SIK_headss=zxb_chongxingmingming_bn_mingzi_proc($head_bnss,"_head_SIK_");
string$SIK_jaws[]= stringToStringArray($SIK_jawss ," ");//关节 
string$SIK_heads[]= stringToStringArray($SIK_headss ," ");//关节 
string$JJAW_BN=zxb_baocunguanjie_mingzi_proc($jaw_bnss,0);
string$JAW_s[]= stringToStringArray($JJAW_BN," ");//关节 

string$HHEAD_BNS=zxb_baocunguanjie_mingzi_proc($head_bnss,0);
string$HEAD_s[]= stringToStringArray($HHEAD_BNS," ");//关节 


for($p=0;$p<size($SIK_jaws);$p++)
   {
     string$remp_jawbn=$SIK_jaws[$p];
     string$remp_jawbn_A=$JAW_s[$p];
     connectAttr -force ($remp_jawbn_A+".t") ($remp_jawbn+".t");
     connectAttr -force ($remp_jawbn_A+".r") ($remp_jawbn+".r");
     connectAttr -force ($remp_jawbn_A+".s") ($remp_jawbn+".s");
     }

for($p=0;$p<size($SIK_heads);$p++)
   {
     string$remp_head_bn=$SIK_heads[$p];
     string$remp_dead_A=$HEAD_s[$p];
     connectAttr -force ($remp_dead_A+".t") ($remp_head_bn+".t");
     connectAttr -force ($remp_dead_A+".r") ($remp_head_bn+".r");
     connectAttr -force ($remp_dead_A+".s") ($remp_head_bn+".s");
     }

zxb_FK_controller_proc($head_bnss);
zxb_FK_controller_proc($jaw_bnss);

string $all_head_bn[]=`listRelatives -c -ad -type "joint" ($head_bnss)`; 
int$yy=size($all_head_bn)-1;
string$hean_bn=zxb_baocunguanjie_mingzi_proc($head_bnss,0);
string$hean_s[]=stringToStringArray($hean_bn," ");//关节
string$ttemp=$hean_s[$yy];
string$head_kongzhiqi=$ttemp+"Con";
string$head_grp=$head_bnss+"ConGrpA";
string$bn_con_temp=$xiaba_bn+"_controller_0";
string$jaw_grp=$jaw_bnss+"ConGrpA"
;
parent  $jaw_grp $head_kongzhiqi;
select -r  $jaw_grp ;



string$hedd_con="heed_con_A";
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $chang_b -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $hedd_con; 
string$head_grp_A=$hedd_con+"_GRP_A";
string$head_grp_B=$hedd_con+"_GRP_B";
string$head_grp_C=$hedd_con+"_GRP_C";
group -n $head_grp_A;
group -n $head_grp_B;
group -n $head_grp_C;
select -r ($hedd_con+".cv[0:999999]") ;
move -r -os -wd 0 $chang_b 0 ;

delete`pointConstraint $head_bnss $head_grp_C `;
string $hedd_con_temp_zi[]=`listRelatives -s  $hedd_con `; 
setAttr ($hedd_con_temp_zi[0]+".overrideEnabled") 1;
setAttr ($hedd_con_temp_zi[0]+".overrideColor") 17;  
//////////////////////创建曲线    
string$Curve="she_IK_Curve";
string$Wave_Curve="Wave_Curve";
zxb_curve_establish_proc($bns,$Curve);
parent $Curve $Globalsetting;
string $Curve_curveShapes[]=`listRelatives -s $Curve`;
rename $Curve_curveShapes[0] ($Curve+"Shape");

select -r ($Curve+".cv[0:9999999999]") ; 
string $cvss[] = `ls -sl -fl`;

select -r $Curve;
duplicate -rr -n $Wave_Curve;
select -r $Wave_Curve;
DeleteHistory;
string $Wave_curve_Shapes[]=`listRelatives -s $Wave_Curve`;
rename $Wave_curve_Shapes[0] ($Wave_Curve+"Shape");
select -r ($Wave_Curve+".cv[0:9999999999]") ; 
string $Wave_cvs[] = `ls -sl -fl`;

string$biaodashi="";
string$biaodashi_Scale="";
float$temp_shu=1;
string$loc_zu="";
string$kongzhiqi_zu="";




string$SIK=zxb_chongxingmingming_bn_mingzi_proc($xiaba_bn,"_SIK_");
string$SIK_bns[]= stringToStringArray($SIK ," ");//关节 
string $bbn=$SIK_bns[0];
string$IKBNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_IK_");
string$FKBNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_FK_");
string$ROT_A_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_A_");
string$ROT_B_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_B_");
string$ROT_C_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_C_");
string$ROT_D_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_ROT_D_");
string$Scale_BNSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_Scale_");
string$PathSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_Path_");
string$skinSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_skin_");
string$WaveSS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_Wave_");
string$Wave_IK_SS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_Wave_IK_");

string$mengpi_SS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_mengpi_A_");
string$mengpib_SS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_mengpi_B_");
//string$mengpic_SS=zxb_chongxingmingming_bn_mingzi_proc($bbn ,"_mengpi_C_");


string$sik_bnss=zxb_baocunguanjie_mingzi_proc($bbn,0);
       
string$ik_bns[]= stringToStringArray($IKBNSS ," ");//关节 
string$fk_bns[]= stringToStringArray($FKBNSS ," ");//关节 
string$rot_A_bns[]= stringToStringArray($ROT_A_BNSS ," ");//关节 
string$rot_B_bns[]= stringToStringArray($ROT_B_BNSS ," ");//关节 
string$rot_C_bns[]= stringToStringArray($ROT_C_BNSS," ");//关节
string$rot_D_bns[]= stringToStringArray($ROT_D_BNSS," ");//关节  
string$sik_bns[]= stringToStringArray($sik_bnss," ");//关节 
string$Paths[]= stringToStringArray($PathSS," ");//关节  
string$Scale_sss[]= stringToStringArray($Scale_BNSS," ");//关节  
string$skins[]= stringToStringArray($skinSS," ");//关节  
string$Waves[]= stringToStringArray($WaveSS," ");//关节 
string$Waves_IK[]= stringToStringArray($Wave_IK_SS," ");//关节 
string$mengpi_s[]= stringToStringArray($mengpi_SS," ");//关节 
string$mengpi_B_s[]= stringToStringArray($mengpib_SS," ");//关节 
//string$mengpi_C_s[]= stringToStringArray($mengpic_SS," ");//关节 



setAttr ($ik_bns[0]+".visibility") 0;
setAttr -lock true ($ik_bns[0]+".v");

setAttr ($Waves[0]+".visibility") 0;
setAttr -lock true ($Waves[0]+".v");

//setAttr ($mengpi_s[0]+".visibility") 0;
//setAttr -lock true ($mengpi_s[0]+".v");

setAttr ($Paths[0]+".visibility") 0;
setAttr -lock true ($Paths[0]+".v");

int$aa=size($bns)-1;
select -r $Waves[0] ;
select -add $Waves[$aa];
select -add  $Wave_Curve;
string$IkHandle_Wave[]=`ikHandle -sol ikSplineSolver -ccv false -pcv false -ns 3`;
setAttr ($IkHandle_Wave[0]+".visibility") 0;
setAttr -lock true ($IkHandle_Wave[0]+".v");
parent $IkHandle_Wave[0]$Globalsetting;



int$Temp=size($Paths)-1;
select -r $Paths[$Temp];
RerootSkeleton;
string$LU_jing="IK_lujing";
string$mingzi="curve -bezier -d 3";
float $pos_Aee[]=`xform -q -ws -t $Paths[1]`;
float $pos_Arr[]=`xform -q -ws -t $Paths[0]`;
float$pos_tw=$pos_Aee[2]-$pos_Arr[2];
float$pos_tx=abs($pos_tw);

float$pos_txx=0;

float $pos_A_temp[]=`xform -q -ws -t $Paths[0]`;
 string$paths=zxb_baocunguanjie_mingzi_proc($Paths[$Temp],0);
 
string$paths_s[]= stringToStringArray($paths," ");//关节  
setAttr ($paths_s[0]+".visibility") 0;
setAttr -lock true ($paths_s[0]+".v");
int$temp_int=0;
for($ii=0;$ii<$chang_a;$ii++)
   {
    int$qvyu=$ii%3;
    string$bn=$paths_s[$ii];
    int $ex=`objExists $bn`;//查询这个物体是否纯在
    if($qvyu==0)
      {
       if($ex==1)
         { 
          float $pos_A[]=`xform -q -ws -t $bn`;
          $mingzi+="-p "+$pos_A[0]+" "+$pos_A[1]+" "+$pos_A[2]+" ";
          
          }else if($ii>0&&$ii<$chang_a)
              {
                float $pos_A[]=`xform -q -ws -t $Paths[0]`;
               //select -r$Paths[0];
                $temp_int=$temp_int+1;
                if($temp_int==1){ $pos_txx+=$pos_tx+$pos_tx+$pos_tx+$pos_A_temp[2];}
                if($temp_int>1){ $pos_txx+=$pos_tx+$pos_tx+$pos_tx;}
                $mingzi+="-p "+$pos_A[0]+" "+$pos_A[1]+" "+$pos_txx+" ";
               
               }
          
       }
    }
 $mingzi+=" -n "+ $LU_jing;
   eval($mingzi); 
string$lujing_grp=$LU_jing+"_rp";
group -n $lujing_grp;
parentConstraint -mo  "Main" $lujing_grp;
scaleConstraint -mo "Main" $lujing_grp;
parent $lujing_grp "Globalsetting";


select -r ($LU_jing+".cv[0:9999999999]") ;
string $lijings_cvs[] = `ls -sl -fl`;
int$size_lujing=size($lijings_cvs)-1;
float $pos_lujing[]=`xform -q -ws -t $lijings_cvs[$size_lujing]`;
xform  -ws -t  $pos_lujing[0] $pos_lujing[1] $pos_lujing[2] $wave_loc_AAAA;
string$dingwi_kongzhiqi=$wave_loc_AAAA+"_controller";
string$dingwi_grpA=$dingwi_kongzhiqi+"_grp_A";
string$dingwi_grpB=$dingwi_kongzhiqi+"_grp_B";
string$dingwi_grpC=$dingwi_kongzhiqi+"_grp_C";
string$dingwi_grpD=$dingwi_kongzhiqi+"_grp_D";
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $chang_b -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $dingwi_kongzhiqi;
group -n $dingwi_grpA;
group -n $dingwi_grpB;
group -n $dingwi_grpC;
group -n $dingwi_grpD;
select -r ($dingwi_kongzhiqi+".cv[0:9999999]") ;

move -r -os -wd 0 $chang_b 0 ;


scale -r -p  $chang_b $chang_b $chang_b ;
string $temp_kongzhiqi_sshepe[]=`listRelatives -s  $dingwi_kongzhiqi `; 
setAttr ($temp_kongzhiqi_sshepe[0]+".overrideEnabled") 1;
setAttr ($temp_kongzhiqi_sshepe[0]+".overrideColor") 17;  
delete`parentConstraint $wave_loc_AAAA $dingwi_grpD`;
select -r $wave_loc_AAAA;
select -add $LU_jing;
string$pathAnimation=`pathAnimation -fractionMode true -follow false -startTimeU 1 -endTimeU 30`;
string $wuti[]=`listConnections -d 0 -s 1 ($pathAnimation+".uValue")`;
addAttr -ln "wave_Distance"  -at double   -dv $chang_b -k 1 $dingwi_kongzhiqi;
addAttr -ln "offset" -at double  -dv 0.5 -k 1 $dingwi_kongzhiqi;
addAttr -ln "follow"  -at bool -dv 1 -k 1 $dingwi_kongzhiqi;



disconnectAttr  ($wuti[0]+".output") ($pathAnimation+".uValue");
setAttr ($pathAnimation+".uValue") 1;
parent $dingwi_grpD  $wave_loc_AAAA;
string$lujing_info=$LU_jing+"_curveInfo_A";
zxb_ADD_createNode_proc($lujing_info,"curveInfo");
string $LU_jing_shape[]=`listRelatives -s $LU_jing`;
connectAttr -force ($LU_jing_shape[0]+".worldSpace[0]") ($lujing_info+".inputCurve");

string$lujing_multiplyDivide=$LU_jing+"_multiplyDivide_A";
zxb_ADD_createNode_proc($lujing_multiplyDivide,"multiplyDivide");

connectAttr -f ($lujing_info+".arcLength") ($lujing_multiplyDivide+".input2X");
connectAttr -f ($dingwi_kongzhiqi+".tz")($lujing_multiplyDivide+".input1X");
setAttr ($lujing_multiplyDivide+".operation") 2;
connectAttr -f ($lujing_multiplyDivide+".outputX") ($pathAnimation+".uValue");

string$lujing_multiplyDivide_B=$LU_jing+"_multiplyDivide_B";
zxb_ADD_createNode_proc($lujing_multiplyDivide_B,"multiplyDivide");
connectAttr -f ($dingwi_kongzhiqi+".tz") ($lujing_multiplyDivide_B+".input1X");
setAttr ($lujing_multiplyDivide_B+".input2X") -1;
connectAttr -f ($lujing_multiplyDivide_B+".outputX") ($dingwi_grpC+".translateZ");
//float$changdu=`getAttr($lujing_info+".arcLength")`;
//transformLimits -tz -1 1 -etz 1 0 $dingwi_kongzhiqi;
//transformLimits -tz 0 1 -etz 1 0 $dingwi_kongzhiqi;
//transformLimits -tz 0 1 -etz 1 1 $dingwi_kongzhiqi;
//transformLimits -tz 0 $changdu -etz 1 1 $dingwi_kongzhiqi;

string$lujing_multiplyDivide_MAN=$LU_jing+"_multiplyDivide_MAN_suofang";
zxb_ADD_createNode_proc($lujing_multiplyDivide_MAN,"multiplyDivide");
connectAttr -f "Main.scaleX" ($lujing_multiplyDivide_MAN+".input1X");
connectAttr -f ($dingwi_kongzhiqi+".tz") ($lujing_multiplyDivide_MAN+".input2X");
connectAttr -f ($lujing_multiplyDivide_MAN+".outputX") ($lujing_multiplyDivide+".input1X");
scaleConstraint -mo "Main"  $dingwi_grpD ;
string $wave_loc_AAAA_shape[]=`listRelatives -s $wave_loc_AAAA`;
setAttr  ($wave_loc_AAAA_shape[0]+".visibility") 0;
pointConstraint -offset 0 0 0  $dingwi_kongzhiqi $wave_loc_BBBB;

select -r $LU_jing;
select -add $dingwi_grpD;
tangentConstraint -weight 1 -aimVector 0 0 1 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject "Main";

string$Wave_Curve_info=$Wave_Curve+"_curveInfo_A";
string $Wave_Curve_shape[]=`listRelatives -s $Wave_Curve`;
zxb_ADD_createNode_proc($Wave_Curve_info,"curveInfo");
connectAttr -force  ($Wave_Curve_shape[0]+".worldSpace[0]") ($Wave_Curve_info+".inputCurve");
string$Wave_Curve_multiplyDivide=$Wave_Curve+"_multiplyDivide_A";
zxb_ADD_createNode_proc($Wave_Curve_multiplyDivide,"multiplyDivide");
connectAttr -f "Main.scaleX" ($Wave_Curve_multiplyDivide+".input1X");
string$Wave_Curve_multiplyDivide_B=$Wave_Curve+"_multiplyDivide_B";
zxb_ADD_createNode_proc($Wave_Curve_multiplyDivide_B,"multiplyDivide");
connectAttr -f ($Wave_Curve_info+".arcLength") ($Wave_Curve_multiplyDivide_B+".input1X");
setAttr ($Wave_Curve_multiplyDivide_B+".operation") 2;
float$changdu_Wave=`getAttr ($Wave_Curve_info+".arcLength")`;
setAttr ($Wave_Curve_multiplyDivide+".input2X") $changdu_Wave;
connectAttr -f ($Wave_Curve_multiplyDivide+".outputX") ($Wave_Curve_multiplyDivide_B+".input2X");

string$man_plusMinusAverage_paths_A="man_plusMinusAverage_paths_A";
zxb_ADD_createNode_proc($man_plusMinusAverage_paths_A,"plusMinusAverage");
string$man_setRange_paths_A="man_setRange_paths_A";
zxb_ADD_createNode_proc($man_setRange_paths_A,"setRange");
connectAttr -f "Main.Paths" ($man_setRange_paths_A+".valueX");
//connectAttr -f "Main.Paths" ($man_plusMinusAverage_paths_A+".valueX");

setAttr  ($man_setRange_paths_A+".maxX") 1;
setAttr ($man_setRange_paths_A+".oldMaxX") 100;
connectAttr -f ($lujing_multiplyDivide+".outputX") ($man_plusMinusAverage_paths_A+".input1D[0]");
//connectAttr -f ($man_plusMinusAverage_paths_A+".output1D") ($pathAnimation+".uValue");
connectAttr -f ($man_setRange_paths_A+".outValueX") ($man_plusMinusAverage_paths_A+".input1D[1]");





select -cl  ;
select -r $Paths[$Temp];
select -add $Paths[0];
select -add $LU_jing;
string$ikHandle[]=`ikHandle -sol ikSplineSolver -ccv false -pcv false -ns 3`;
parent $ikHandle[0]  "Globalsetting";


setAttr ($ikHandle[0]+".dTwistControlEnable") 1;
setAttr ($ikHandle[0]+".dWorldUpType") 3;
connectAttr -f "Main.worldMatrix[0]" ($ikHandle[0]+".dWorldUpMatrix");
setAttr ($ikHandle[0]+".dForwardAxis") 1;
setAttr ($ikHandle[0]+".dWorldUpVectorY") 1;
setAttr  ($ikHandle[0]+".dWorldUpAxis") 0;

//setAttr ($ikHandle[0]+".offset") 1000;
//float$ik_offset=`getAttr ($ikHandle[0]+".offset")`;


string$ik_setRange_offset=($ikHandle[0]+"_setRange_offset");
zxb_ADD_createNode_proc($ik_setRange_offset,"setRange");

connectAttr -f "Main.Paths" ($ik_setRange_offset+".valueX");
setAttr ($ik_setRange_offset+".oldMaxX") 100;
//setAttr ($ik_setRange_offset+".maxX") 17;
//connectAttr -f ($ik_setRange_offset+".outValueX") ($ikHandle[0]+".offset");
string$Paths_loc_a="Paths_loc_a";
spaceLocator -p 0 0 0 -n $Paths_loc_a;
setAttr ($Paths_loc_a+".visibility") 0;
setAttr -lock true ($Paths_loc_a+".v");
select -r $Paths_loc_a;
select -add $LU_jing;
string$pathAnimation_A=`pathAnimation -fractionMode true -follow false -startTimeU 1 -endTimeU 30`;
string $pathAnimation_wuti[]=`listConnections -d 0 -s 1 ($pathAnimation_A+".uValue")`;
disconnectAttr  ($pathAnimation_wuti[0]+".output") ($pathAnimation_A+".uValue");
connectAttr -f ($man_setRange_paths_A+".outValueX") ($pathAnimation_A+".uValue");
select -r  $Paths_loc_a;
select -add $Paths[$aa];
pointConstraint -mo ;
setAttr ($ikHandle[0]+".rootOnCurve") 0;
parent   $Paths_loc_a "Globalsetting";
string$condition_LU_jing=$LU_jing+"_condition_A";
zxb_ADD_createNode_proc($condition_LU_jing,"condition");
connectAttr -f ($dingwi_kongzhiqi+".follow") ($condition_LU_jing+".firstTerm");

connectAttr -f ($man_plusMinusAverage_paths_A+".output1D") ($condition_LU_jing+".colorIfTrueR");
connectAttr -f ($lujing_multiplyDivide+".outputX") ($condition_LU_jing+".colorIfFalseR");
setAttr ($condition_LU_jing+".secondTerm") 1;
connectAttr -f ($condition_LU_jing+".outColorR") ($pathAnimation+".uValue");

string$plusMinusAverage_LU_jing_AA=$LU_jing+"_plusMinusAverage_AA";
zxb_ADD_createNode_proc($plusMinusAverage_LU_jing_AA,"plusMinusAverage");
connectAttr -f ($dingwi_kongzhiqi+".offset") ($plusMinusAverage_LU_jing_AA+".input1D[0]");
connectAttr -f ($man_setRange_paths_A+".outValueX") ($plusMinusAverage_LU_jing_AA+".input1D[1]");
connectAttr -f ($plusMinusAverage_LU_jing_AA+".output1D")($condition_LU_jing+".colorIfFalseR");
connectAttr -f ($plusMinusAverage_LU_jing_AA+".output1D")($man_plusMinusAverage_paths_A+".input1D[1]");




string$moduan_Fx_bn="";
$moduan_Fx_bn+=$ik_bns[0]+" ";
for($ii=0;$ii<size($fk_bns);$ii++)
{
string$temp_bn=$fk_bns[$ii];
string$temp_qvxian=$temp_bn+"_FK_kongzhiq"+$ii;
circle -c 0 0 0 -nr 1 0 0 -sw 360 -r $chang_b -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $temp_qvxian;
delete `parentConstraint $temp_bn  $temp_qvxian`;
string $temp_zi[]=`listRelatives -s  $temp_qvxian `; 
setAttr ($temp_zi[0]+".overrideEnabled") 1;
setAttr ($temp_zi[0]+".overrideColor") 17;  
connectAttr -force "Main.show_FK" ($temp_zi[0]+".visibility");
select -r  $temp_zi[0];
select -add $temp_bn;
parent -r -s ;
delete $temp_qvxian;
}

string $moduan_FK_bn="";
string$tr_grp="tr_grp";       

zxb_ADD_kongzu_proc($tr_grp);    
 parent   $tr_grp $Globalsetting; 
 for($ii=0;$ii<size($rot_A_bns);$ii++)
     {
             string$bna=$rot_A_bns[$ii];
             string$bnb=$rot_B_bns[$ii];
             string$bnc=$rot_C_bns[$ii];
             string$bnd=$rot_D_bns[$ii];
             string$bnfk=$fk_bns[$ii];
             string$sik_bn=$sik_bns[$ii];
             string$bn_ik=$ik_bns[$ii];
             string$jizui_bbn=$bns[$ii];
             string$Scale_a=$Scale_sss[$ii];
             
             string$skin=$skins[$ii];
             string$Wave_bn=$Waves[$ii];
             string$Wave_ik_bn=$Waves_IK[$ii];
             string$mengpi=$mengpi_s[$ii];
             string$mengpi_b=$mengpi_B_s[$ii];
            // string$mengpi_C= $mengpi_C_s[$ii];
             
             int$a=$ii+1;
             string$mubiao_bbn=$skins[$a];
             string$xiayige=$rot_A_bns[$a];
             
             setAttr ($bna+".drawStyle") 2;
             setAttr ($bnb+".drawStyle") 2;
             setAttr ($bnc+".drawStyle") 2;
             setAttr ($bnd+".drawStyle") 2;
             setAttr ($Scale_a+".drawStyle") 2;
             setAttr ($Wave_ik_bn+".drawStyle") 2;
             setAttr ($sik_bn+".drawStyle") 2;
             setAttr ($skin+".drawStyle") 2;
             setAttr ($bnfk+".drawStyle") 2;

             parent $bnb  $bna;
             parent $mengpi_b $mengpi;
             int$qq=size($rot_A_bns)-1;
             
             if($ii==$qq){$moduan_FK_bn+=$bnfk+" ";}
             
             if($ii<$qq){parent $xiayige  $bnb;}
             
             parent $bnc  $bnb;
             if($ii<$qq){parent $xiayige  $bnc;}
             
             parent $bnd  $bnc;
             if($ii<$qq){parent $xiayige $bnd ;}
              
             parent  $bnfk  $bnd;
            
             if($ii<$qq){parent $xiayige  $bnfk;}
             
            // parentConstraint -mo $bnc   $sik_bn;
            
            setAttr ($sik_bn+".segmentScaleCompensate") 0;
             setAttr ($mengpi+".segmentScaleCompensate") 0;

            setAttr ($mengpi_b+".segmentScaleCompensate") 0;

             pointConstraint -mo $Wave_bn $Wave_ik_bn  ;
            
            string$yuesu_aa[]=` parentConstraint -mo $skin  $mengpi`;
            string$yuesu_bb[]=` scaleConstraint -mo -skip x $skin  $mengpi_b`;
             
             parent$yuesu_aa[0]$tr_grp;
             parent$yuesu_bb[0]$tr_grp;
             parent $sik_bn  $bnfk;
             parent $Scale_a $bnfk;
             parent $skin $bnfk;
             parent $Wave_ik_bn $bnfk;
             
             connectAttr -force  ($bn_ik+".t") ($bna+".t");
             connectAttr -force  ($bn_ik+".r") ($bna+".r");
             connectAttr -force  ($bn_ik+".s") ($bna+".s");
             
             connectAttr -force ($sik_bn+".rx")($skin+".rx");
             string$sin_jianjian_A=$skin+"_plusMinusAverage_A";
             zxb_ADD_createNode_proc($sin_jianjian_A,"plusMinusAverage");
             string$sin_jianjian_B=$skin+"_plusMinusAverage_B";
             zxb_ADD_createNode_proc($sin_jianjian_B,"plusMinusAverage");
             string$sin_jianjian_C=$skin+"_plusMinusAverage_C";
             zxb_ADD_createNode_proc($sin_jianjian_C,"plusMinusAverage");
             //$Scale_a $Wave_ik_bn $sik_bn
             
             connectAttr -f ($sin_jianjian_A+".output3Dy") ($skin+".scaleY");
             connectAttr -f ($sin_jianjian_A+".output3Dz") ($skin+".scaleZ");
             connectAttr -f ($sik_bn+".scale")($sin_jianjian_A+".input3D[0]");
             
             connectAttr -f ($Scale_a+".scale") ($sin_jianjian_B+".input3D[0]");
             setAttr ($sin_jianjian_B+".operation") 2;
             setAttr -typ float3 ($sin_jianjian_B+".input3D[1]")1 1 1;
             
             connectAttr -f ($Wave_ik_bn+".scale") ($sin_jianjian_C+".input3D[0]");
             setAttr ($sin_jianjian_C+".operation") 2;
             setAttr -typ float3 ($sin_jianjian_C+".input3D[1]")1 1 1;
             
             connectAttr -f ($sin_jianjian_B+".output3D")($sin_jianjian_A+".input3D[1]");
             connectAttr -f ($sin_jianjian_C+".output3D")($sin_jianjian_A+".input3D[2]");

             select -r  $Wave_ik_bn;
             select -add $skin;
             pointConstraint -mo  ;


             
             connectAttr -f ($Wave_Curve_multiplyDivide_B+".outputX")($Wave_bn+".sx");
             parentConstraint -mo $jizui_bbn  $bn_ik;
             
             //connectAttr -force ($mengpi+".t") ($mengpi_b+".t");
            // connectAttr -force ($mengpi+".r") ($mengpi_b+".r");
             //connectAttr -force ($mengpi+".s") ($mengpi_C+".s");
             
       }



        
string$set_namen=$bbn+"_skin_set";
string$seqq="all_set";         
select -cl  ;
int $ex=`objExists $seqq`;//查询这个物体是否纯在
if($ex==0)
 {
  sets -n $seqq;
           
  }
select -cl  ;
select -r $mengpi_B_s;
//select -r  $skins;
int $ex=`objExists $set_namen`;//查询这个物体是否纯在
if($ex==0)
  {
   sets -n $set_namen;
  // parent  $set_namen $seqq;
    sets -add $seqq $set_namen ;
    }
        
        
string$moduan_FK_bns[]= stringToStringArray($moduan_FK_bn," ");//关节 
         
for($ii=0;$ii<size($moduan_FK_bns);$ii++)
   {
                
    string$temp_fk=$moduan_FK_bns[$ii];
         
    for($t=0;$t<size($rot_B_bns);$t++)
        {
         string$temp_bbn=$rot_C_bns[$t];
          connectAttr -force "Main.Rot_x" ($temp_bbn+".rx");
          connectAttr -force "Main.Rot_y" ($temp_bbn+".ry");
          connectAttr -force "Main.Rot_z" ($temp_bbn+".rz");
          }
                  
                  
             
   }




for($tt=0;$tt<(size($rot_A_bns)-1);$tt++)
   {
     int$a=$tt+1;
     string$skin=$skins[$tt];
     string$mubiao_bbn=$skins[$a];
     string$bnfk=$fk_bns[$tt];

     if($ii>0)
     {
         
      select -r  $mubiao_bbn;
     select -add $skin; 
     aimConstraint -mo -weight 1 -aimVector 1 0 0 -upVector 0 1 0 -worldUpType "objectrotation" -worldUpVector 0 1 0 -worldUpObject $bnfk -skip x;

     }
   }

string$ik_grp_C="";

string$ik_grp_B="";
string$ik_grp_C_con="";
string$ik_grp_moduan_C_con="";
int$size_moduan=size($cvss)-1;
for($i=0;$i<size($cvss);$i++)
         {
             string$cv=$cvss[$i];
             string$bn=$bns[$i];
             string$wave_cv=$Wave_cvs[$i];
             int$qvyu=$i%3;
             string$Wave_bn=$Waves[$i];
             string$Wave_ik_bn=$Waves_IK[$i];
             string$bn_con=$bn+"_controller_"+$i;
             string$bn_grpA=$bn+"_GRP_A_"+$i;
             string$bn_grpB=$bn+"_GRP_B_"+$i;
             string$bn_grpC=$bn+"_GRP_C_"+$i;
             string$bn_Clusters=$bn+"_Clusters_"+$i;
             string$wave_Clusters=$Wave_bn+"_Clusters_wave_"+$i;
             string$wave_loc=$Wave_bn+"_loc_wave_"+$i;
             string$wave_loc_grp=$Wave_bn+"_loc_wave_grp_"+$i;

             string$sik=$SIK_bns[$i];
             string$loc_temp=$bn+"_loc_"+$i;
             string$loc_temp_grp=$bn_con+"_loc_grp"+$i;
             string$suofang_bn=$Scale_sss[$i];
             string$Path_bbn=$Paths[$i];
             string$Path_bbn_loc=$Path_bbn+"_loc_A_"+$i;
             string$bnfk=$fk_bns[$i];
             string$FK_loc=$bnfk+"_FK_loc_A_"+$i;
            
             
             curve -d 1 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 -0.5 0.5 -p 0.5 0.5 0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22  -n $bn_con;
             group -n  $bn_grpA;
             group -n  $bn_grpB;
             group -n  $bn_grpC;
             select -r ($bn_con+".cv[0:99999999]") ;

             scale -r -p 0cm 0m 0cm $chang_b $chang_b $chang_b   ;

             if($i==0){$ik_grp_C=$bn_grpC;$ik_grp_C_con=$bn_con; $ik_grp_B=$bn_grpB;}
             if($i==$size_moduan){$ik_grp_moduan_C_con=$bn_con;}
              string $temp_zi[]=`listRelatives -s  $bn_con `; 
              setAttr ($temp_zi[0]+".overrideEnabled") 1;
              setAttr ($temp_zi[0]+".overrideColor") 17;  
   
             
             if($qvyu==0)
               { 
               setAttr ($temp_zi[0]+".overrideColor") 13; 
               spaceLocator -p 0 0 0 -n $loc_temp;
               group -n $loc_temp_grp;
               delete`parentConstraint $bn_con $loc_temp_grp`;
               parent $loc_temp_grp $bn_grpC;
               connectAttr -force  ($bn_con+".translate")  ($loc_temp+".translate");
               connectAttr -force  ($bn_con+".rotate")  ($loc_temp+".rotate");
               connectAttr -force  "Main.show_IK"   ($temp_zi[0]+".visibility");
               setAttr ($loc_temp+".visibility") 0;
               setAttr -lock true ($loc_temp+".v");
               $loc_zu+=$loc_temp+" ";
         
               }
             
             
            select -r $cv;
            string$Clusters[]=`newCluster " -envelope 1"`;
            rename $Clusters[1] $bn_Clusters;
            setAttr ($bn_Clusters+".visibility") 0;
            setAttr -lock true ($bn_Clusters+".v");
            delete`parentConstraint $bn $bn_grpC`;
            parent  $bn_Clusters $bn_con;
            parent $bn_grpC "Main";
            
            
            select -r $wave_cv;
            string$Clusters_A[]=`newCluster " -envelope 1"`;
            rename$Clusters_A[1] $wave_Clusters;
            setAttr ($wave_Clusters+".visibility") 0;
            spaceLocator -p 0 0 0 -n $wave_loc;
            group -n $wave_loc_grp;
            setAttr ($wave_loc_grp+".visibility") 0;
            setAttr -keyable false -channelBox false ($wave_loc_grp+".v");
            delete`pointConstraint $wave_Clusters $wave_loc_grp`;
            parent $wave_Clusters $wave_loc;
            parent $wave_loc_grp $bnfk ;
           // parent $wave_loc $wave_loc_AAAA_grp;
            
            spaceLocator -p 0 0 0 -n $FK_loc;
            delete`parentConstraint  $wave_loc $FK_loc`;
            parent $FK_loc $wave_loc_FK_grp;
            parentConstraint -mo $bnfk $FK_loc;
            setAttr ($FK_loc+".visibility") 0;
            setAttr -keyable false -channelBox false ($FK_loc+".v");
            
            select -r  $wave_loc_BBBB;
            select -add $FK_loc ;
            select -add $wave_loc;
            string$yuesu_ss[]=`pointConstraint -mo -skip z `;
            string$expression_yuesu=""; 
            
            if($i<3)
              {
               float$chushu=($i+1)*0.2;
            
               $expression_yuesu+="float$dis=mag(<<wave_loc_AAAA.tx,wave_loc_AAAA.ty,wave_loc_AAAA.tz>>-<<("+$FK_loc+".tx),("+$FK_loc+".ty),("+$FK_loc+".tz)>>)/"+$dingwi_kongzhiqi+".wave_Distance;\n";
               $expression_yuesu+="float$pinghua=1-smoothstep(0,1,$dis);\n";//linstep
               $expression_yuesu+=$yuesu_ss[0]+"."+$wave_loc_BBBB+"W0=clamp(0,1,$pinghua*"+$chushu+");\n";
               $expression_yuesu+=$yuesu_ss[0]+"."+$FK_loc+"W1=1-clamp(0,1,$pinghua*"+$chushu+");\n"; 
               }
               else
            {$expression_yuesu+="float$dis=mag(<<wave_loc_AAAA.tx,wave_loc_AAAA.ty,wave_loc_AAAA.tz>>-<<("+$FK_loc+".tx),("+$FK_loc+".ty),("+$FK_loc+".tz)>>)/"+$dingwi_kongzhiqi+".wave_Distance;\n";
            $expression_yuesu+="float$pinghua=1-smoothstep(0,1,$dis);\n";//linstep
            $expression_yuesu+=$yuesu_ss[0]+"."+$wave_loc_BBBB+"W0=$pinghua;\n";
            $expression_yuesu+=$yuesu_ss[0]+"."+$FK_loc+"W1=1-$pinghua;\n";
            }
            
            expression -s  $expression_yuesu  -n "bolang";
            
            
            string$expression_yuesu_suofang=""; 
            $expression_yuesu_suofang+="float$dis=mag(<<wave_loc_AAAA.tx,wave_loc_AAAA.ty,wave_loc_AAAA.tz>>-<<("+$FK_loc+".tx),("+$FK_loc+".ty),("+$FK_loc+".tz)>>)/"+$dingwi_kongzhiqi+".sz;\n";
            $expression_yuesu_suofang+="float$pinghua=1-smoothstep(0,1,$dis);\n";//linstep
            $expression_yuesu_suofang+=$Wave_ik_bn+".sy=1+$pinghua*("+$dingwi_kongzhiqi+".sy-1);\n";
            $expression_yuesu_suofang+=$Wave_ik_bn+".sz=1+$pinghua*("+$dingwi_kongzhiqi+".sx-1);\n";
            expression -s  $expression_yuesu_suofang  -n "shoudongsuofang";
            
            addAttr -ln "decrease_RG"  -at double   -dv 1 -k 1 $bn_con;
           if($i<10)
             {
                 float$temp_a=0.1*($i+1);
                  setAttr ($bn_con+".decrease_RG") $temp_a;
              }
          int$ex_int=size($bns)-6;
          int$ex_int_a=size($bns);
          if($i>$ex_int)
            {
             $temp_shu=$temp_shu-0.1;
              setAttr ($bn_con+".decrease_RG")  $temp_shu; 
             }
           $biaodashi+=$bn_grpA+".translateZ=sin(time*Main.speed+Main.Amplitude-"+$i+"*Main.delay)*Main.offset*(1+"+$i+"*Main.decrease)*"+$bn_con+".decrease_RG;\n";
           $biaodashi_Scale+=$suofang_bn+".scaleY="+$suofang_bn+".scaleZ=sin(time*Main.Scalespeed+Main.ScalesAmplitude-"+$i+"*Main.Scaledelay)*Main.Scale+Main.Scale+1;\n";
              ///////////////////////////////////////////////
               if($i>2&&$qvyu==0)
                 {
                  int$temp_a=$i-3;
                  int$temp_locshua=$i-2;
                  int$temp_locshub=$i-1;
                 // string$kongzhiqi_bb=$bns[$temp_a]+"_controller_"+$temp_a;
                 // string$kongzhiqi_cc=$bn_con;
                  
                  string$kongzhiqi_bb=$bns[$temp_a]+"_loc_"+$temp_a;
                  string$kongzhiqi_cc=$loc_temp;
                  string$zu_a=$bns[$temp_locshua]+"_GRP_B_"+$temp_locshua;
                  string$zu_b=$bns[$temp_locshub]+"_GRP_B_"+$temp_locshub;
                  string$siim_a=$SIK_bns[$temp_a];
                  string$siim_b=$SIK_bns[$temp_locshua];
                  string$siim_c=$SIK_bns[$temp_locshub];
                  string$siim_d=$sik;
                  
                  
                  string$kongzhqi_aaa=$bns[$temp_a]+"_controller_"+$temp_a;
                  string$kongzhqi_bbb=$bn_con;

                  select -r  $kongzhiqi_bb;
                  select -add $kongzhiqi_cc;
                  select -add $zu_a;
                  doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","0","1","","1" };
                 string$yuesu_s[]=`parentConstraint -mo `;
                 // string$yuesu_s[]=`parentConstraint -mo  -weight 1 $kongzhiqi_bb  $kongzhiqi_cc  $zu_a`;
                  setAttr ($yuesu_s[0]+"."+$kongzhiqi_bb+"W0") 0.8;
                  setAttr ($yuesu_s[0]+"."+$kongzhiqi_cc+"W1") 0.2;
                  
                  select -r  $kongzhiqi_bb;
                 select -add $kongzhiqi_cc;
                  select -add $zu_b;
                  doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","0","1","","1" };
                  string$yuesu_b[]=`parentConstraint -mo`;
                 //string$yuesu_b[]=`parentConstraint -mo -weight 1 $kongzhiqi_bb  $kongzhiqi_cc  $zu_b`;
                  setAttr ($yuesu_b[0]+"."+$kongzhiqi_bb+"W0") 0.2;
                  setAttr ($yuesu_b[0]+"."+$kongzhiqi_cc+"W1") 0.8;


                  select -r $kongzhqi_aaa;
                  select -add $siim_a;
                  scaleConstraint -mo -skip x -weight 1;
                  
                  select -r $kongzhqi_bbb;
                  select -add $siim_d;
                  scaleConstraint -mo -skip x -weight 1;
                  
                 
                  select -r $kongzhqi_aaa;
                  select -add $kongzhqi_bbb;
                  select -add $siim_b;
                  string$yuesu_c[]=`scaleConstraint -mo -skip x -weight 1`;
                  
                  setAttr ($yuesu_c[0]+"."+$kongzhqi_aaa+"W0") 0.8;
                  setAttr ($yuesu_c[0]+"."+$kongzhqi_bbb+"W1") 0.2;
                 
                 
                 
                  select -r $kongzhqi_aaa;
                  select -add $kongzhqi_bbb;
                  select -add $siim_c;
                  string$yuesu_e[]=`scaleConstraint -mo -skip x -weight 1`;
                  
                  setAttr ($yuesu_e[0]+"."+$kongzhqi_aaa+"W0") 0.2;
                  setAttr ($yuesu_e[0]+"."+$kongzhqi_bbb+"W1") 0.8;
                 
                  connectAttr -force ($kongzhqi_aaa+".rotateX") ($siim_a+".rotateX");
                  connectAttr -force ($kongzhqi_bbb+".rotateX") ($siim_d+".rotateX");
                  
                  
                  
                   string$chengchu_A=$kongzhqi_aaa+"_multiplyDivide_A";
                   zxb_ADD_jiedian_proc($chengchu_A,"multiplyDivide");
                   setAttr ($chengchu_A+".input2X") 0.8;
                   connectAttr -force ($kongzhqi_aaa+".rotateX") ($chengchu_A+".input1X");
                   
                   
                    string$chengchu_B=$kongzhqi_bbb+"_multiplyDivide_B";
                   zxb_ADD_jiedian_proc($chengchu_B,"multiplyDivide");
                   setAttr ($chengchu_B+".input2X") 0.2;
                   connectAttr -force ($kongzhqi_bbb+".rotateX") ($chengchu_B+".input1X");
                 
                   string$jiajian_A=$siim_b+"_plusMinusAverage_A";
                   zxb_ADD_jiedian_proc($jiajian_A,"plusMinusAverage");
                   
                   connectAttr -force ($chengchu_A+".outputX")  ($jiajian_A+".input1D[0]") ;
                   connectAttr -force ($chengchu_B+".outputX")  ($jiajian_A+".input1D[1]") ;

                   connectAttr -force ($jiajian_A+".output1D")   ($siim_b+".rotateX");
                   
                   
                   
                   
                    
                   string$chengchu_A_A=$kongzhqi_aaa+"_multiplyDivide_A_A";
                   zxb_ADD_jiedian_proc($chengchu_A_A,"multiplyDivide");
                   setAttr ($chengchu_A_A+".input2X") 0.2;
                   connectAttr -force ($kongzhqi_aaa+".rotateX") ($chengchu_A_A+".input1X");
                   
                   
                    string$chengchu_B_B=$kongzhqi_bbb+"_multiplyDivide_B_B";
                   zxb_ADD_jiedian_proc($chengchu_B_B,"multiplyDivide");
                   setAttr ($chengchu_B_B+".input2X") 0.8;
                   connectAttr -force ($kongzhqi_bbb+".rotateX") ($chengchu_B_B+".input1X");
                 
                   string$jiajian_A_A=$siim_b+"_plusMinusAverage_A_A";
                   zxb_ADD_jiedian_proc($jiajian_A_A,"plusMinusAverage");
                   
                   connectAttr -force ($chengchu_A_A+".outputX")  ($jiajian_A_A+".input1D[0]") ;
                   connectAttr -force ($chengchu_B_B+".outputX")  ($jiajian_A_A+".input1D[1]") ;

                   connectAttr -force ($jiajian_A_A+".output1D")   ($siim_c+".rotateX");
                   
                  }
               else if($i>0)
                   {
                       connectAttr -force  "Main.show_IK_secondary"   ($temp_zi[0]+".visibility");
                       $kongzhiqi_zu+=$bn_grpA+" ";
                       }
             

               
            spaceLocator -p 0 0 0 -n $Path_bbn_loc;
            setAttr ($Path_bbn_loc+".visibility") 0;
            setAttr -lock true ($Path_bbn_loc+".v");
            delete`parentConstraint    $Path_bbn $Path_bbn_loc `;
            parent $Path_bbn_loc $Path_bbn;
            parentConstraint -mo $Path_bbn_loc  $bn_grpC;
             

          }
/////////////////////////////尾巴波浪绑定表达式//////////////////////   
  //print $biaodashi;
  expression -s $biaodashi  -n"ikweiyi" ;
  expression -s $biaodashi_Scale  -n"suofang" ;
  
  
  

//////////////////////整理层级          
parent $head_grp $bn_con_temp;
string$ik_A=$bns[0];
string$ik_B=$bns[$aa];
select -r  $ik_A;
select -add  $ik_B;
select -add  $Curve;
string$IkHandle[]=`ikHandle -sol ikSplineSolver -ccv false -pcv false -ns 3`;
setAttr ($IkHandle[0]+".visibility") 0;
setAttr -lock true ($IkHandle[0]+".v");
parent $IkHandle[0]$Globalsetting;
connectAttr -f "Main.body_twisty"  ($IkHandle[0]+".twist");
setAttr ($IkHandle[0]+".dTwistControlEnable") 1;
setAttr ($IkHandle[0]+".dWorldUpType") 4;
connectAttr -f ($hedd_con+".worldMatrix[0]") ($IkHandle[0]+".dWorldUpMatrix");
string$hedd_con_B="heed_con_B";
circle -c 0 0 0 -nr 0 1 0 -sw 360 -r $chang_b -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n $hedd_con_B; 
string$head_grp_AA=$hedd_con_B+"_GRP_AA";
string$head_grp_BB=$hedd_con_B+"_GRP_BB";
string$head_grp_CC=$hedd_con_B+"_GRP_CC";
group -n $head_grp_AA;
group -n $head_grp_BB;
group -n $head_grp_CC;
select -r ($hedd_con_B+".cv[0:999999]") ;
move -r -os -wd 0 $chang_b 0 ;
delete`pointConstraint  $ik_grp_moduan_C_con $head_grp_CC`;
parentConstraint $ik_grp_moduan_C_con $head_grp_CC;

parent $head_grp_CC $Globalsetting;

string $hedd_con_Btemp_zi[]=`listRelatives -s  $hedd_con_B `; 
setAttr ($hedd_con_Btemp_zi[0]+".overrideEnabled") 1;
setAttr ($hedd_con_Btemp_zi[0]+".overrideColor") 17;  

connectAttr -f ($hedd_con_B+".worldMatrix[0]") ($IkHandle[0]+".dWorldUpMatrixEnd");

parent   $jaw_bnss $head_bnss;

parent $head_grp_C$ik_grp_C ;

parent $head_grp $hedd_con;

parent $ik_grp_B $hedd_con;
select -r $ik_grp_C_con;
select -add$head_grp;
pointConstraint -mo ;

///////////设置样条IK拉伸

string$Curve_curveInfo=$Curve+"_curveInfo";
string$Curve_multiplyDivide=$Curve+"_multiplyDivide";
string$Curve_multiplyDivide_A=$Curve+"_multiplyDivide_A";
zxb_ADD_createNode_proc($Curve_multiplyDivide,"multiplyDivide");
zxb_ADD_createNode_proc($Curve_multiplyDivide_A,"multiplyDivide");
zxb_ADD_createNode_proc($Curve_curveInfo,"curveInfo");
string $Curve_shapes[]=`listRelatives -s $Curve`; 
connectAttr -force ($Curve_shapes[0]+".worldSpace[0]") ($Curve_curveInfo+".inputCurve");
connectAttr -f "Main.scaleZ" ($Curve_multiplyDivide+".input1X");

connectAttr -f ($Curve_curveInfo+".arcLength") ($Curve_multiplyDivide_A+".input1X");
setAttr ($Curve_multiplyDivide_A+".operation") 2;

float$changdu=`getAttr ($Curve_curveInfo+".arcLength")`;
setAttr ($Curve_multiplyDivide+".input2X") $changdu;
setAttr ($Curve_multiplyDivide+".operation") 1;

connectAttr -f ($Curve_multiplyDivide+".outputX") ($Curve_multiplyDivide_A+".input2X");

string$Curve_condition=$Curve+"_condition";
string$Curve_condition_A=$Curve+"_condition_A";
zxb_ADD_createNode_proc($Curve_condition,"condition");
zxb_ADD_createNode_proc($Curve_condition_A,"condition");
connectAttr -f ($Curve_multiplyDivide_A+".outputX") ($Curve_condition+".firstTerm");
connectAttr -f ($Curve_multiplyDivide_A+".outputX")  ($Curve_condition+".colorIfTrueR");
connectAttr -f "Main.shorten" ($Curve_condition+".secondTerm");
connectAttr -f "Main.shorten" ($Curve_condition+".colorIfFalseR");
setAttr ($Curve_condition+".operation") 2;


connectAttr -f ($Curve_condition+".outColorR") ($Curve_condition_A+".colorIfTrueR");
connectAttr -f ($Curve_condition+".outColorR")  ($Curve_condition_A+".firstTerm");
connectAttr -f   "Main.stretch" ($Curve_condition_A+".secondTerm");
connectAttr -f  "Main.stretch"($Curve_condition_A+".colorIfFalseR");
setAttr ($Curve_condition_A+".operation") 4;
 for($i=0;$i<size($bns);$i++)
    {
     string$bbn=$bns[$i];
     connectAttr -f  ($Curve_condition_A+".outColorR")  ($bbn+".sx");
     
      }




////////////////////////////////////////创建身体绑定关节//////////////////////////////////////////////////////










//print$rot_C_bns;
int$ooo=size($rot_C_bns)-1;
string$biaodashi_a="";
string$bnshuxing="";


string$delete_bn="";
 for($iii=0;$iii<size($rot_B_bns);$iii++)
{
    
    string$www=$rot_B_bns[$iii];
    string$fk_temp=$fk_bns[$iii];
    string$ik_temp=$bns[$iii];
    addAttr -ln "loc_Angle"  -at double   -dv 1 -k 1 $fk_temp;
    setAttr -keyable false -channelBox true ($fk_temp+".loc_Angle");

    
    string$deleeee_bns[]= stringToStringArray($delete_bn ," ");//关节 
    select -r $rot_B_bns; 
    if($iii>0)
      {
     for($j=0;$j<size($deleeee_bns);$j++)
        {
            string$bn_te_mp=$deleeee_bns[$j];
            select -d $bn_te_mp;
         }                       
       }
    $delete_bn+=$www+" "; 
    string$qwqw[]=`ls -sl -type "joint"`;
   int$temop_int=size($qwqw)-1;
   string$biaoda="float $fd=(0";
   int$szie_i=(size($rot_B_bns))-1-$iii;
for($ii=($temop_int);$ii>0;$ii--)
   {
    string$bn_c=$qwqw[$ii];
    $biaoda+=("+"+$bn_c+".ry");
  
    }
    
    $biaoda+=");\n";
    $biaoda+="float $min=(-Main.RotationAngle+"+$szie_i+"*Main.range)*"+$fk_temp+".loc_Angle-"+$ik_temp+".ry"+";\n";
    $biaoda+="float $max=(Main.RotationAngle-"+$szie_i+"*Main.range)*"+$fk_temp+".loc_Angle-"+$ik_temp+".ry"+";\n";
    $biaoda+="if($min>0){$min=0;}\n";
    $biaoda+="if($max<0){$max=0;}\n";
    $biaoda+=$www+".rotateY=clamp($min,$max,Main.Curlytail*10-$fd);\n";
   
    expression -s  $biaoda -ae 1 -uc all -n "Curlytail";
    }
    
    
////////////////////body弯曲/////////////////////////    




select -cl  ;
for($ii=(size($rot_D_bns))-1;$ii>0;$ii--)
    {
        string$bn_ttmp=$rot_D_bns[$ii];
        select -add $bn_ttmp;
     }
string$dd_bns[]=`ls -sl -type "joint"`;



select -cl  ;
for($ii=(size($fk_bns))-1;$ii>0;$ii--)
    {
        string$bn_ttmp=$fk_bns[$ii];
        select -add $bn_ttmp;
     }
string$fffk_bns[]=`ls -sl -type "joint"`;


select -cl  ;
for($ii=(size($bns))-1;$ii>0;$ii--)
    {
        string$bn_ttmp=$bns[$ii];
        select -add $bn_ttmp;
     }
string$iiik_bns[]=`ls -sl -type "joint"`;

//print $dd_bns;
 for($iii=0;$iii<size($dd_bns);$iii++)
    {
        string$bn_temp=$dd_bns[$iii];
        string$fkk_bns=$fffk_bns[$iii];
        string$ikk_bns=$iiik_bns[$iii];
        
        addAttr -ln "bodyloc_Angle"  -at double   -dv 1 -k 1 $fkk_bns;
        setAttr -keyable false -channelBox true ($fkk_bns+".bodyloc_Angle");
        
        
        string$biaodashi_b="float $fd=(0";
        int$szie_i=(size($dd_bns))-1-$iii;
        for($jjj=$iii+1;$jjj<size($dd_bns);$jjj++)
            {
                string$bn_mm_temp=$dd_bns[$jjj];
              $biaodashi_b+=("+"+$bn_mm_temp+".ry");
             }
         $biaodashi_b+=");\n"; 
         $biaodashi_b+="float $min=-(Main.bodyRotationAngle+"+$szie_i+"*Main.bodyattenuation)*"+$fkk_bns+".bodyloc_Angle-"+$ikk_bns+".ry;\n";
         $biaodashi_b+="float $max=(Main.bodyRotationAngle-"+$szie_i+"*Main.bodyattenuation)*"+$fkk_bns+".bodyloc_Angle-"+$ikk_bns+".ry;\n";
         $biaodashi_b+="if($min>0){$min=0;}\n";
         $biaodashi_b+="if($max<0){$max=0;}\n";
         $biaodashi_b+=$bn_temp+".ry=clamp($min,$max,Main.bodyrange*10-$fd);\n";
         expression -s $biaodashi_b -ae 1 -uc all -n "bodyrange";

     }
     
     
zxb_ADD_kongzu_proc("Joints");
select -cl  ;

joint -p 0 0 0  -n UE_Root;
joint -p 0 0 0  -n UE_Root_M;
joint -p 0 0 0 -n   UE_Root_MM;
parent  UE_Root Joints;
delete`parentConstraint $loc "UE_Root_MM"`;
setAttr "UE_Root_MM.drawStyle" 2;

parentConstraint -mo   Main  UE_Root_M ;
scaleConstraint -mo  Main Joints;


parent $loc  $Globalsetting;
parent $mengpi_s[0] "UE_Root_MM";
parent   $SIK_heads[0]"UE_Root_MM";
parent  $SIK_jaws[0] $SIK_heads[0];
string $loc_shape_zi[]=`listRelatives -s  $loc `; 

setAttr ($loc_shape_zi[0]+".visibility") 0;
setAttr -lock true ($loc_shape_zi[0]+".v");


setAttr ($xiaba_bn+".visibility") 0;
setAttr -lock true ($xiaba_bn+".v");
} 






/////////////////////检查工具/////////////////////////////




global proc xiao_jiancha_proc_columnLayout() 
{
if(`window -ex zxb_chibangWin_columnLayout`) deleteUI zxb_chibangWin_columnLayout; 

window -t "检查模型" zxb_chibangWin_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
 
 




setParent ..; 



button -l "检查模型命名(绑定用)" -c "zxb_jianchamode_mingm_proc_maonang" ;
button -l "检查模型命名（模型用）" -c "zxb_jianchamode_mingm_proc_moxing" ;

button -l "创建控制器" -c "zxb_chuangjiankonzghiqi" ;
showWindow zxb_chibangWin_columnLayout; 
}
 

global proc zxb_jianchamode_mingm_proc_maonang()
{
    
string$mode[]=` ls -as`;
int$ex_panduana=0;
string$Character="";
for($ii=0;$ii<size($mode);$ii++)
   {
   string$temp=$mode[$ii];
   if($temp=="Character"||$temp=="Prop")
   {
       $ex_panduana=1;
    $Character=$temp;
    }
   
   }
if($ex_panduana==1){print "Character||Prop名称正确\n";}
else
{  
$dialog=`confirmDialog -t "错误" -m ("Character||Prop文件名称不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
if($dialog=="确定"){error "Character||Prop文件名称不正确\n";}
}
 
 
 select -cl  ;
 string $Character_ss[]=`listRelatives  -c -ad  -pa  $Character`; 
 int$ss=0;
for($ii=0;$ii<size($Character_ss);$ii++) 
   {
     string$Char=$Character_ss[$ii];
     int$aa=0;
     $aa=`gmatch $Char "*|*"`;
     if($aa>=1)
       {
           select -add $Char ;
         $ss=$ss+1;   
       }

    }
if($ss>=1)
{
 $dialog=`confirmDialog -t "错误" -m ("选中的文件名称重复 请重命名") -b "确定" -b "取消" -db "确认" -ds "确认"`;  
 if($dialog=="确定"){error "选中的文件名称重复 请重命名\n";}  
 }   
 
 zxb_jiancha_cengji_Character_Prop("Character","Prop","Mode_High");
 zxb_jiancha_cengji_Character_Prop("Character","Prop","Curves");
 zxb_jiancha_cengji_Character_Prop("Character","Prop","Joints");
 zxb_jiancha_cengji_Character("Mode_High","FBX_out");
 zxb_jiancha_cengji_Character("Mode_High","ABC_out");
 zxb_jiancha_cengji_Character("ABC_out","cloth_out");
 zxb_jiancha_cengji_Character("Joints","UE_Root");
 zxb_jiancha_cengji_Character("UE_Root","UE_Root_M");
 
 
string$mesh_sss[]=` listRelatives  -c -ad -type "mesh" "Mode_High" `;
int$ww=0;
select -cl  ;
//select -r $mesh_sss;
for($ii=0;$ii<size($mesh_sss);$ii++)
   {
      string$mesh_s=$mesh_sss[$ii];
      string$mesh_[]=` listRelatives -p $mesh_s`;
      string $skinCluster2=`findRelatedSkinCluster $mesh_[0]` ;//访问蒙皮节点
           
      if($skinCluster2=="")
         {
         select -add $mesh_[0];
          $ww= $ww+1;
       
         }
    }
    
    
    
if($ww>=1)
{
        
$dialog=`confirmDialog -t "错误" -m ("选中的文件没有蒙皮") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
if($dialog=="确定"){error "选中模型没有蒙皮\n";}
}
     
string$mesh_sss[]=` listRelatives  -c -ad -type "transform" "Mode_High" `;
select -cl  ;
int$jiancha_a=0;
for($ii=0;$ii<size($mesh_sss);$ii++)
   {
      string$mesh_s=$mesh_sss[$ii];
    float$trs[]=`getAttr ($mesh_s+".translate") `;
    float$trss[]=`getAttr ($mesh_s+".rotate") `;
    float$trsss[]=`getAttr ($mesh_s+".scale") `;
    float$zonghe=$trs[0]+$trs[1]+$trs[2]+$trss[0]+$trss[1]+$trss[2]+$trsss[0]+$trsss[1]+$trsss[2];
    if($zonghe>3)
       {
        select -add $mesh_s;
        $jiancha_a=$jiancha_a+1;
        }
    }
    
    
if($jiancha_a>=1)

   {
    $dialog=`confirmDialog -t "错误" -m ("选中的文件有位移旋转缩放值") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
    if($dialog=="确定"){error "选中的文件有位移旋转缩放值\n";}
    }
  
print"模型没有位移旋转缩放\n";


 string$mesh_sss[]=` listRelatives  -c -ad -type "transform" "Mode_High" `;
  
 select -cl  ; 
 int$jiancha_b=0;  
spaceLocator -p 0 0 0 -n "temp_loc";
for($ii=0;$ii<size($mesh_sss);$ii++) 
    {
     string$mesh_s=$mesh_sss[$ii];
   
    delete` parentConstraint  $mesh_s "temp_loc"`;
     float $pos_A[]=`xform -q -ws -t "temp_loc"`;
     
     float$rrr=$pos_A[0]+$pos_A[1]+$pos_A[2];
     if($rrr!=0)
        {
        $jiancha_b=$jiancha_b+1;
        select -add $mesh_s;
        }
    
    }  
    
delete "temp_loc";
if($jiancha_b>=1)

{
$dialog=`confirmDialog -t "错误" -m ("选中的文件没有在世界坐标0") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
if($dialog=="确定"){error "选中的文件有位移旋转缩放值\n";}

}

print"选中世界坐标0正确\n";

select -cl  ;
float$lock_A=`getAttr  -lock  ($Character+".tx")`;
float$lock_B=`getAttr  -lock  ($Character+".ty")`;
float$lock_C=`getAttr  -lock  ($Character+".tz")`;
float$lock_D=`getAttr  -lock  ($Character+".rx")`;
float$lock_E=`getAttr  -lock  ($Character+".ry")`;
float$lock_F=`getAttr  -lock  ($Character+".rz")`;
float$lock_G=`getAttr  -lock  ($Character+".sx")`;
float$lock_H=`getAttr  -lock  ($Character+".sy")`;
float$lock_I=`getAttr  -lock  ($Character+".sz")`;
float$lock_temp=$lock_A+$lock_B+$lock_C+$lock_D+$lock_E+$lock_F+$lock_F+$lock_H+$lock_I;
if($lock_temp!=9)
   {
    select -r    $Character;
   $dialog=`confirmDialog -t "错误" -m ("Character||Prop文件旋转位移没有锁定") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error "Character||Prop文件旋转位移没有锁定\n";}
    }
print"Character||Prop文件旋转位移有锁定\n";
select -cl  ;
int$vss=0;
for($ii=0;$ii<size($mesh_sss);$ii++) 
    {
     string$mesh_s=$mesh_sss[$ii];
     string$mesh_[]=` listRelatives -p $mesh_s`;
     int$vs=`getAttr ($mesh_[0]+".visibility") `;
     if($vs==0)
        {
          select -add  $mesh_[0]; 
          $vss=$vss+1; 
        }
    }  
if($vss>=1)
   {
   $dialog=`confirmDialog -t "错误" -m ("选中的模型被隐藏") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error "选中的模型被隐藏\n";}
    }   
print"模型全部显示\n";




string$animLayer[]=` ls -type "animLayer" `;
int $ex=`objExists $animLayer[0]`;//查询这个物体是否纯在
int$animLayer_siaze=size($animLayer);
if($ex==1)
  {
    select -r $animLayer;
   $dialog=`confirmDialog -t "错误" -m ("选中的动画层有"+$animLayer_siaze+"层没有删除") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error ("选中的动画层有"+$animLayer_siaze+"层没有删除\n");} 
   }
 print"动画层检查完毕\n";  
 
 
 spaceLocator -p 0 0 0 -n "UE_root_m_loc";
 delete `parentConstraint "UE_Root_M"  "UE_root_m_loc"` ;

float $pos_AA[]=`xform -q -ws -t "UE_root_m_loc"`;
float$pos_ex=$pos_AA[0]+$pos_AA[1]+$pos_AA[2];
delete "UE_root_m_loc";
if($pos_ex>0)
   {
       
    select -r "UE_Root_M";
    $dialog=`confirmDialog -t "错误" -m ("UE_Root_M骨骼位置没有在世界坐标0") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error "UE_Root_M骨骼位置没有在世界坐标0\n";} 
    }

 print"UE_Root_M位置检查完毕\n";
   
string $wuti[]=`listConnections -d 0 -s 1 "UE_Root_M.rotate.rotateX"`;//列出链接属性  -d输入   -s输出  -p 列出属性
int $ex=`objExists $wuti[0]`;//查询这个物体是否纯在
if($ex==0)
  {
    
     select -r "UE_Root_M";
    $dialog=`confirmDialog -t "错误" -m ("UE_Root_M没有被约束") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error "UE_Root_M没有被约束\n";} 
    }
    
  print"UE_Root_M约束检查完毕\n";
  
  
 string $sheixnagji[]=`ls -ca`;
  select -cl  ;

  
for($ii=0;$ii<size($sheixnagji);$ii++) 
  {
   string$xiangji=$sheixnagji[$ii];
   string$mesh_[]=` listRelatives -p $xiangji`;    
   select -add $mesh_[0];

  
   }
   
string$singji_ss[]=`ls -sl`;
int$xiangjiz_size=size($singji_ss);
select -r $singji_ss;

  int$xiangji_ex=0;
for($ii=0;$ii<size($singji_ss);$ii++)  
  {
   string$xiangji=$singji_ss[$ii];
   if($xiangji=="persp")
         {
         select -d $xiangji  ;
         $xiangji_ex=$xiangji_ex+1;
         }
         
   if($xiangji=="top")
         {
         select -d$xiangji  ;
         $xiangji_ex=$xiangji_ex+1;
         }
     if($xiangji=="side")
         {
         select -d $xiangji  ;
         $xiangji_ex=$xiangji_ex+1;
         }
         
        
   if($xiangji=="front")
         {
         select -d $xiangji  ;
         $xiangji_ex=$xiangji_ex+1;
         }
   
   }
   

   
 if($xiangjiz_size>4)
   {
     $dialog=`confirmDialog -t "错误" -m ("多余的摄像机没有被删除") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
   if($dialog=="确定"){error "多余的摄像机没有被删除\n";} 
    }
  print "摄像机检查完毕\n";
  
  
  
  
int $ex=`objExists HAIR_FX`;//查询这个物体是否纯在
string$panduan="";
if($ex==0)
   {
    $panduan=`confirmDialog -t "错误" -m ("没有动力学开关") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
    if($panduan=="确定")
       {
        error "没有HAIR_FX控制器 没有HAIR_FX控制器 请修改控制器名字  \n";
        }
        
   /*  if($panduan=="选中动力学控制器属性")
       {
        string$kongzhiqi[]=`ls -sl`;
        string $sel[]=`channelBox -q -sma mainChannelBox`;
        string$shuxing=$kongzhiqi[0]+"."+$sel[0];
        float$donglixue_ex=`getAttr $shuxing`;
        if($donglixue_ex>0)
           {  
           $dialog=`confirmDialog -t "错误" -m ("动力学开关没有关闭") -b "确定" -b "取消" -db "确认" -ds "确认"`;   
             if($dialog=="确定"){error "动力学开关没有关闭\n";} 
             }

        }*/
    }
    
if($ex==1)
  {
    float$donglixue_ex=`getAttr "HAIR_FX.kaiguan"`;
    if($donglixue_ex>0)
           {  
           select -r HAIR_FX;
           $dialog=`confirmDialog -t "错误" -m ("动力学开关没有关闭") -b "确定" -b "取消" -db "确认" -ds "确认"`;   
             if($dialog=="确定"){error "动力学开关没有关闭\n";} 
             }
   }

select -cl  ;
 print "动力学 检查完毕\n";
}




global proc zxb_jiancha_cengji_Character_Prop(string$Character,string$Prop,string$jiancha_name)
{
     int $ex=`objExists $jiancha_name`;//查询这个物体是否纯在
     int$panduan=0;
     if($ex==0)
       {
       
         $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}  
       }
      string $fu[]=`listRelatives -p $jiancha_name`;
      if($fu[0]==$Prop||$fu[0]==$Character) 
        {
        $panduan=1;
        
        }
       if($panduan==0)
           {
          $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}     
           }else{print($jiancha_name+"文件正确\n") ;}

 
}


global proc zxb_jiancha_cengji_Character(string$Character,string$jiancha_name)
{
     int $ex=`objExists $jiancha_name`;//查询这个物体是否纯在
     int$panduan=0;
     if($ex==0)
       {
       
         $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}  
       }
      string $fu[]=`listRelatives -p $jiancha_name`;
      if($fu[0]==$Character) 
        {
        $panduan=1;
        
        }
       if($panduan==0)
           {
          $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}     
           }else{print($jiancha_name+"文件正确\n") ;}

 
}




global proc zxb_chuangjiankonzghiqi()
{
    
    

string$modes[]=` ls -as`;
int$ex_panduana=0;
string$Character="";
for($ii=0;$ii<size($modes);$ii++)
   {
   string$temp=$modes[$ii];
   if($temp=="Character"||$temp=="Prop")
   {
       $ex_panduana=1;
    $Character=$temp;
    }
   
   }
   
   
 string $mode=$Character;
  int $ex=`objExists "Main"`;//查询这个物体是否纯在
  if($ex==0) 
  {
      
  circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n "Main";
  group -n "Curves";
 }

 select -cl  ;
 joint -p 0 0 0 -n "UE_Root" ;
 joint -p 0 0 0 -n "UE_Root_M" ;
 joint -p 0 0 0 -n "DAOJU_BN" ;
 joint -p 0 1 0 -n "DAOJU_ENDBN" ;
 select -r "UE_Root";
 group -n "Joints";
 parent "Joints"  $mode;
 parent "Curves"  $mode;
 circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 3 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n "kongzhiqi";
 group -n "kongzhiq_A";
 group -n "kongzhiq_B";
 group -n "kongzhiq_C";
 parent "kongzhiq_C" "Main"; 
 parentConstraint "kongzhiqi" "DAOJU_BN";
 parentConstraint "Main" "UE_Root_M";
 }
 
 
 
 
 
global proc zxb_jianchamode_mingm_proc_moxing()
{
    
string$mode[]=` ls -as`;
int$ex_panduana=0;
string$Character="";
for($ii=0;$ii<size($mode);$ii++)
   {
   string$temp=$mode[$ii];
   if($temp=="Character"||$temp=="Prop")
   {
       $ex_panduana=1;
    $Character=$temp;
    }
   
   }
if($ex_panduana==1){print "Character||Prop名称正确\n";}
else
{  
$dialog=`confirmDialog -t "错误" -m ("Character||Prop文件名称不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
if($dialog=="确定"){error "Character||Prop文件名称不正确\n";}
}
 
 
 select -cl  ;
 string $Character_ss[]=`listRelatives  -c -ad  -pa  $Character`; 
 int$ss=0;
for($ii=0;$ii<size($Character_ss);$ii++) 
   {
     string$Char=$Character_ss[$ii];
     int$aa=0;
     $aa=`gmatch $Char "*|*"`;
     if($aa>=1)
       {
           select -add $Char ;
         $ss=$ss+1;   
       }

    }
if($ss>=1)
{
 $dialog=`confirmDialog -t "错误" -m ("选中的文件名称重复 请重命名") -b "确定" -b "取消" -db "确认" -ds "确认"`;  
 if($dialog=="确定"){error "选中的文件名称重复 请重命名\n";}  
 }   
 
 zxb_jiancha_cengji_Character_Prop("Character","Prop","Mode_High");
 zxb_jiancha_cengji_Character("Mode_High","FBX_out");
 zxb_jiancha_cengji_Character("Mode_High","ABC_out");
 zxb_jiancha_cengji_Character("ABC_out","cloth_out");

 
 

     
string$mesh_sss[]=` listRelatives  -c -ad -type "transform" "Mode_High" `;
select -cl  ;
int$jiancha_a=0;
for($ii=0;$ii<size($mesh_sss);$ii++)
   {
      string$mesh_s=$mesh_sss[$ii];
    float$trs[]=`getAttr ($mesh_s+".translate") `;
    float$trss[]=`getAttr ($mesh_s+".rotate") `;
    float$trsss[]=`getAttr ($mesh_s+".scale") `;
    float$zonghe=$trs[0]+$trs[1]+$trs[2]+$trss[0]+$trss[1]+$trss[2]+$trsss[0]+$trsss[1]+$trsss[2];
    if($zonghe>3)
       {
        select -add $mesh_s;
        $jiancha_a=$jiancha_a+1;
        }
    }
    
    
if($jiancha_a>=1)

   {
    $dialog=`confirmDialog -t "错误" -m ("选中的文件有位移旋转缩放值") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
    if($dialog=="确定"){error "选中的文件有位移旋转缩放值\n";}
    }
  
print"模型没有位移旋转缩放\n";


 string$mesh_sss[]=` listRelatives  -c -ad -type "transform" "Mode_High" `;
  
 select -cl  ; 
 int$jiancha_b=0;  
spaceLocator -p 0 0 0 -n "temp_loc";
for($ii=0;$ii<size($mesh_sss);$ii++) 
    {
     string$mesh_s=$mesh_sss[$ii];
   
    delete` parentConstraint  $mesh_s "temp_loc"`;
     float $pos_A[]=`xform -q -ws -t "temp_loc"`;
     
     float$rrr=$pos_A[0]+$pos_A[1]+$pos_A[2];
     if($rrr!=0)
        {
        $jiancha_b=$jiancha_b+1;
        select -add $mesh_s;
        }
    
    }  
    
delete "temp_loc";
if($jiancha_b>=1)

{
$dialog=`confirmDialog -t "错误" -m ("选中的文件没有在世界坐标0") -b "确定" -b "取消" -db "确认" -ds "确认"`;       
if($dialog=="确定"){error "选中的文件有位移旋转缩放值\n";}

}

print"选中世界坐标0正确\n";
}




global proc zxb_jiancha_cengji_Character_Prop(string$Character,string$Prop,string$jiancha_name)
{
     int $ex=`objExists $jiancha_name`;//查询这个物体是否纯在
     int$panduan=0;
     if($ex==0)
       {
       
         $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}  
       }
      string $fu[]=`listRelatives -p $jiancha_name`;
      if($fu[0]==$Prop||$fu[0]==$Character) 
        {
        $panduan=1;
        
        }
       if($panduan==0)
           {
          $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}     
           }else{print($jiancha_name+"文件正确\n") ;}

 
}


global proc zxb_jiancha_cengji_Character(string$Character,string$jiancha_name)
{
     int $ex=`objExists $jiancha_name`;//查询这个物体是否纯在
     int$panduan=0;
     if($ex==0)
       {
       
         $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}  
       }
      string $fu[]=`listRelatives -p $jiancha_name`;
      if($fu[0]==$Character) 
        {
        $panduan=1;
        
        }
       if($panduan==0)
           {
          $dialog=`confirmDialog -t "错误" -m ($jiancha_name+"文件不正确") -b "确定" -b "取消" -db "确认" -ds "确认"`; 
          if($dialog=="确定"){error ($jiancha_name+"文件不正确\n");}     
           }else{print($jiancha_name+"文件正确\n") ;}

 
}



  xiao_biaoqing_proc_columnLayout; 
  