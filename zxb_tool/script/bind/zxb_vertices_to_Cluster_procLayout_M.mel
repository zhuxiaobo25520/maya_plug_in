global proc zxb_vertices_to_Cluster_procLayout_M() 
{
if(`window -ex zxb_vertices_to_ClustercolumnLayout`) deleteUI zzxb_vertices_to_ClustercolumnLayout; 

window -t "创建簇" zxb_vertices_to_Cluster_columnLayout; 
columnLayout -adj 1 -w 300 gtBSColumlayout;
 rowColumnLayout -nc 2 -cw 1 440 -cw 2 340  ;
 
 
textFieldGrp  -cw2 100 300 -l "载入顶点" -tx "顶点" -ed 0  zxb_ganjie;
button -l "载入" -c ("zxb_UI_string_kongge_proc(\""+"zxb_ganjie"+"\")") ;


setParent ..; 

button -l "创建" -c "zxb_vertices_to_Cluster_proc(0)" ;
showWindow zxb_vertices_to_Cluster_columnLayout; 
}
 



global proc zxb_vertices_to_Cluster_proc(int$fan){
string $xiaba_bn=`textFieldGrp -q -tx  zxb_ganjie `;
string$bns[]= stringToStringArray($xiaba_bn, " ");//关节
string $dingdian_s[]=$bns;//选中顶点创建簇
int$jingxiang=$fan;
float$threshoud=0.01;
string$cu_mode_s[];
clear$cu_mode_s;
int $nemt=`tokenize $dingdian_s[0] "." $cu_mode_s`;//分离字符串存到变量
string$cu_mode=$cu_mode_s[0];
string$zu_root=($cu_mode+"_cu_grp");
string$shep_zi[]=`listRelatives -s $cu_mode`;
string$shep=$shep_zi[0];
int$ex_panduan=`objExists $zu_root`;
if($ex_panduan==0){group -empty -n $zu_root; }


string$closestPointOnMesh=$cu_mode+"_closestPointOnMesh_temp";
int$panduan=`objExists$closestPointOnMesh`;
if($panduan==1){delete $closestPointOnMesh;} 
createNode "closestPointOnMesh" -n $closestPointOnMesh; //模型信息节点	
connectAttr -force ($shep+".worldMesh[0]") ($closestPointOnMesh+".inMesh");
int$fanxiang=$fan;

for ($i=0;$i<size($dingdian_s);$i++)
    {
        string$dingdian=$dingdian_s[$i];
        string$sikn_cu=($cu_mode+"_cluster_Handle"+$i);
        select -r  $dingdian;
        newCluster " -envelope 1  " ;
         string$temp_s[]=`ls -sl`;//选中顶点创建簇
        parent $temp_s[0] $zu_root;
        string $loc=($temp_s[0]+"_temp_loc");
        spaceLocator -p 0 0 0 -n $loc ;
        delete`pointConstraint $temp_s[0] $loc`;
        if($jingxiang==1)
           {
             float$pos_temp[]=`xform -q -ws -t $dingdian`;
             if($pos_temp[0]>$threshoud||$pos_temp[0]<($threshoud*-1))
                {
                    setAttr -type float3 ($closestPointOnMesh+".inPosition") ($pos_temp[0]*-1) $pos_temp[1] $pos_temp[2];
                    int$index=`getAttr ($closestPointOnMesh+".closestVertexIndex")`;
                     select -r ($cu_mode+".vtx["+$index+"]");
                     newCluster " -envelope 1 " ;
                     string$temp_s_a[]=`ls -sl`;//选中顶点创建簇
                     rename $temp_s_a[0] ($temp_s[0]+"sid");
                     parent ($temp_s[0]+"sid") $zu_root;

                     
                 }
            }
       
    }
    
  

delete $closestPointOnMesh;
select -r $zu_root;
}

